var gowtfData = {"index":"index.html","html":"<p>\u000aThe iotest package implements Readers and Writers\u000auseful only for testing.\u000a</p>\u000a","name":"iotest","filenames":["/home/nsf/go/src/pkg/testing/iotest/writer.go","/home/nsf/go/src/pkg/testing/iotest/reader.go","/home/nsf/go/src/pkg/testing/iotest/logger.go"],"types":[],"funcs":[{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:DataErrReader!\">DataErrReader</a></h2>\u000a<code>func DataErrReader(r io.Reader) io.Reader</code>\u000a<p>\u000aDataErrReader returns a Reader that returns the final\u000aerror with the last data read, instead of by itself with\u000azero bytes of data.\u000a</p>\u000a\u000a","name":"DataErrReader"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:HalfReader!\">HalfReader</a></h2>\u000a<code>func HalfReader(r io.Reader) io.Reader</code>\u000a<p>\u000aHalfReader returns a Reader that implements Read\u000aby reading half as many requested bytes from r.\u000a</p>\u000a\u000a","name":"HalfReader"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:NewReadLogger!\">NewReadLogger</a></h2>\u000a<code>func NewReadLogger(prefix string, r io.Reader) io.Reader</code>\u000a<p>\u000aNewReadLogger returns a reader that behaves like r except\u000athat it logs (using log.Print) each read to standard error,\u000aprinting the prefix and the hexadecimal data written.\u000a</p>\u000a\u000a","name":"NewReadLogger"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:NewWriteLogger!\">NewWriteLogger</a></h2>\u000a<code>func NewWriteLogger(prefix string, w io.Writer) io.Writer</code>\u000a<p>\u000aNewWriteLogger returns a writer that behaves like w except\u000athat it logs (using log.Printf) each write to standard error,\u000aprinting the prefix and the hexadecimal data written.\u000a</p>\u000a\u000a","name":"NewWriteLogger"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:OneByteReader!\">OneByteReader</a></h2>\u000a<code>func OneByteReader(r io.Reader) io.Reader</code>\u000a<p>\u000aOneByteReader returns a Reader that implements\u000aeach non-empty Read by reading one byte from r.\u000a</p>\u000a\u000a","name":"OneByteReader"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:TruncateWriter!\">TruncateWriter</a></h2>\u000a<code>func TruncateWriter(w io.Writer, n int64) io.Writer</code>\u000a<p>\u000aTruncateWriter returns a Writer that writes to w\u000abut stops silently after n bytes.\u000a</p>\u000a\u000a","name":"TruncateWriter"}],"consts":[],"vars":[]}