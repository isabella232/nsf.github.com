var gowtfData = {"html":"<p>\u000aThis package implements typechecking of a Go AST.\u000aThe result of the typecheck is an augmented AST\u000awith object and type information for each identifier.\u000a</p>\u000a","name":"typechecker","filenames":["/home/nsf/go/src/pkg/go/typechecker/scope.go","/home/nsf/go/src/pkg/go/typechecker/typechecker.go","/home/nsf/go/src/pkg/go/typechecker/universe.go"],"types":[{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Importer!\">Importer</a></h2>\u000a<pre>type Importer func(path string) ([]byte, os.Error)</pre>\u000a<p>\u000aAn importer takes an import path and returns the data describing the\u000arespective package&#39;s exported interface. The data format is TBD.\u000a</p>\u000a\u000a","name":"Importer","methods":[]}],"funcs":[{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:CheckFile!\">CheckFile</a></h2>\u000a<code>func CheckFile(file *ast.File, importer Importer) os.Error</code>\u000a<p>\u000aCheckFile typechecks a single file, but otherwise behaves like\u000aCheckPackage. If the complete package consists of more than just\u000aone file, the file may not typecheck without errors.\u000a</p>\u000a\u000a","name":"CheckFile"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:CheckPackage!\">CheckPackage</a></h2>\u000a<code>func CheckPackage(pkg *ast.Package, importer Importer) os.Error</code>\u000a<p>\u000aCheckPackage typechecks a package and augments the AST by setting\u000a*ast.Object, *ast.Type, and *ast.Scope fields accordingly. If an\u000aimporter is provided, it is used to handle imports, otherwise they\u000aare ignored (likely leading to typechecking errors).\u000a</p>\u000a<p>\u000aIf errors are reported, the AST may be incompletely augmented (fields\u000amay be nil) or contain incomplete object, type, or scope information.\u000a</p>\u000a\u000a","name":"CheckPackage"}],"consts":[],"vars":[{"html":"\u000a<h2><a class=\"black\" href=\"?v:\">var</a> <a href=\"?v:Universe!\">Universe</a></h2>\u000a<pre>var Universe *ast.Scope</pre>\u000a<p>\u000aThe Universe scope contains all predeclared identifiers.\u000a</p>\u000a\u000a","names":["Universe"],"type":""}]}