var gowtfData = {"html":"<p>\u000aThe sort package provides primitives for sorting arrays\u000aand user-defined collections.\u000a</p>\u000a","name":"sort","filenames":["/home/nsf/go/src/pkg/sort/sort.go"],"types":[{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:FloatArray!\">FloatArray</a></h2>\u000a<pre>type FloatArray []float</pre>\u000a<p>\u000aFloatArray attaches the methods of Interface to []float, sorting in increasing order.\u000a</p>\u000a\u000a","name":"FloatArray","methods":[{"html":"\u000a<h2><a class=\"black\" href=\"?m:FloatArray\">func (FloatArray)</a> <a href=\"?m:FloatArray.Len!\">Len</a></h2>\u000a<code>func (p FloatArray) Len() int</code>\u000a\u000a","name":"Len"},{"html":"\u000a<h2><a class=\"black\" href=\"?m:FloatArray\">func (FloatArray)</a> <a href=\"?m:FloatArray.Less!\">Less</a></h2>\u000a<code>func (p FloatArray) Less(i, j int) bool</code>\u000a\u000a","name":"Less"},{"html":"\u000a<h2><a class=\"black\" href=\"?m:FloatArray\">func (FloatArray)</a> <a href=\"?m:FloatArray.Sort!\">Sort</a></h2>\u000a<code>func (p FloatArray) Sort()</code>\u000a<p>\u000aSort is a convenience method.\u000a</p>\u000a\u000a","name":"Sort"},{"html":"\u000a<h2><a class=\"black\" href=\"?m:FloatArray\">func (FloatArray)</a> <a href=\"?m:FloatArray.Swap!\">Swap</a></h2>\u000a<code>func (p FloatArray) Swap(i, j int)</code>\u000a\u000a","name":"Swap"}]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:IntArray!\">IntArray</a></h2>\u000a<pre>type IntArray []int</pre>\u000a<p>\u000aIntArray attaches the methods of Interface to []int, sorting in increasing order.\u000a</p>\u000a\u000a","name":"IntArray","methods":[{"html":"\u000a<h2><a class=\"black\" href=\"?m:IntArray\">func (IntArray)</a> <a href=\"?m:IntArray.Len!\">Len</a></h2>\u000a<code>func (p IntArray) Len() int</code>\u000a\u000a","name":"Len"},{"html":"\u000a<h2><a class=\"black\" href=\"?m:IntArray\">func (IntArray)</a> <a href=\"?m:IntArray.Less!\">Less</a></h2>\u000a<code>func (p IntArray) Less(i, j int) bool</code>\u000a\u000a","name":"Less"},{"html":"\u000a<h2><a class=\"black\" href=\"?m:IntArray\">func (IntArray)</a> <a href=\"?m:IntArray.Sort!\">Sort</a></h2>\u000a<code>func (p IntArray) Sort()</code>\u000a<p>\u000aSort is a convenience method.\u000a</p>\u000a\u000a","name":"Sort"},{"html":"\u000a<h2><a class=\"black\" href=\"?m:IntArray\">func (IntArray)</a> <a href=\"?m:IntArray.Swap!\">Swap</a></h2>\u000a<code>func (p IntArray) Swap(i, j int)</code>\u000a\u000a","name":"Swap"}]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Interface!\">Interface</a></h2>\u000a<pre>type Interface interface {\u000a\u0009// Len is the number of elements in the collection.\u000a\u0009Len() int\u000a\u0009// Less returns whether the element with index i should sort\u000a\u0009// before the element with index j.\u000a\u0009Less(i, j int) bool\u000a\u0009// Swap swaps the elements with indexes i and j.\u000a\u0009Swap(i, j int)\u000a}</pre>\u000a<p>\u000aA type, typically a collection, that satisfies sort.Interface can be\u000asorted by the routines in this package.  The methods require that the\u000aelements of the collection be enumerated by an integer index.\u000a</p>\u000a\u000a","name":"Interface","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:StringArray!\">StringArray</a></h2>\u000a<pre>type StringArray []string</pre>\u000a<p>\u000aStringArray attaches the methods of Interface to []string, sorting in increasing order.\u000a</p>\u000a\u000a","name":"StringArray","methods":[{"html":"\u000a<h2><a class=\"black\" href=\"?m:StringArray\">func (StringArray)</a> <a href=\"?m:StringArray.Len!\">Len</a></h2>\u000a<code>func (p StringArray) Len() int</code>\u000a\u000a","name":"Len"},{"html":"\u000a<h2><a class=\"black\" href=\"?m:StringArray\">func (StringArray)</a> <a href=\"?m:StringArray.Less!\">Less</a></h2>\u000a<code>func (p StringArray) Less(i, j int) bool</code>\u000a\u000a","name":"Less"},{"html":"\u000a<h2><a class=\"black\" href=\"?m:StringArray\">func (StringArray)</a> <a href=\"?m:StringArray.Sort!\">Sort</a></h2>\u000a<code>func (p StringArray) Sort()</code>\u000a<p>\u000aSort is a convenience method.\u000a</p>\u000a\u000a","name":"Sort"},{"html":"\u000a<h2><a class=\"black\" href=\"?m:StringArray\">func (StringArray)</a> <a href=\"?m:StringArray.Swap!\">Swap</a></h2>\u000a<code>func (p StringArray) Swap(i, j int)</code>\u000a\u000a","name":"Swap"}]}],"funcs":[{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:FloatsAreSorted!\">FloatsAreSorted</a></h2>\u000a<code>func FloatsAreSorted(a []float) bool</code>\u000a<p>\u000aFloatsAreSorted tests whether an array of floats is sorted in increasing order.\u000a</p>\u000a\u000a","name":"FloatsAreSorted"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:IntsAreSorted!\">IntsAreSorted</a></h2>\u000a<code>func IntsAreSorted(a []int) bool</code>\u000a<p>\u000aIntsAreSorted tests whether an array of ints is sorted in increasing order.\u000a</p>\u000a\u000a","name":"IntsAreSorted"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:IsSorted!\">IsSorted</a></h2>\u000a<code>func IsSorted(data Interface) bool</code>\u000a\u000a","name":"IsSorted"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Sort!\">Sort</a></h2>\u000a<code>func Sort(data Interface)</code>\u000a\u000a","name":"Sort"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:SortFloats!\">SortFloats</a></h2>\u000a<code>func SortFloats(a []float)</code>\u000a<p>\u000aSortFloats sorts an array of floats in increasing order.\u000a</p>\u000a\u000a","name":"SortFloats"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:SortInts!\">SortInts</a></h2>\u000a<code>func SortInts(a []int)</code>\u000a<p>\u000aSortInts sorts an array of ints in increasing order.\u000a</p>\u000a\u000a","name":"SortInts"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:SortStrings!\">SortStrings</a></h2>\u000a<code>func SortStrings(a []string)</code>\u000a<p>\u000aSortStrings sorts an array of strings in increasing order.\u000a</p>\u000a\u000a","name":"SortStrings"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:StringsAreSorted!\">StringsAreSorted</a></h2>\u000a<code>func StringsAreSorted(a []string) bool</code>\u000a<p>\u000aStringsAreSorted tests whether an array of strings is sorted in increasing order.\u000a</p>\u000a\u000a","name":"StringsAreSorted"}],"consts":[],"vars":[]}