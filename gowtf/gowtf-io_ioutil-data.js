var gowtfData = {"index":"index.html","html":"","name":"ioutil","filenames":["/home/nsf/go/src/pkg/io/ioutil/tempfile.go","/home/nsf/go/src/pkg/io/ioutil/ioutil.go"],"types":[],"funcs":[{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:ReadAll!\">ReadAll</a></h2>\u000a<code>func ReadAll(r io.Reader) ([]byte, os.Error)</code>\u000a<p>\u000aReadAll reads from r until an error or EOF and returns the data it read.\u000a</p>\u000a\u000a","name":"ReadAll"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:ReadDir!\">ReadDir</a></h2>\u000a<code>func ReadDir(dirname string) ([]*os.FileInfo, os.Error)</code>\u000a<p>\u000aReadDir reads the directory named by dirname and returns\u000aa list of sorted directory entries.\u000a</p>\u000a\u000a","name":"ReadDir"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:ReadFile!\">ReadFile</a></h2>\u000a<code>func ReadFile(filename string) ([]byte, os.Error)</code>\u000a<p>\u000aReadFile reads the file named by filename and returns the contents.\u000a</p>\u000a\u000a","name":"ReadFile"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:TempFile!\">TempFile</a></h2>\u000a<code>func TempFile(dir, prefix string) (f *os.File, err os.Error)</code>\u000a<p>\u000aTempFile creates a new temporary file in the directory dir\u000awith a name beginning with prefix, opens the file for reading\u000aand writing, and returns the resulting *os.File.\u000aIf dir is the empty string, TempFile uses the default directory\u000afor temporary files (see os.TempDir).\u000aMultiple programs calling TempFile simultaneously\u000awill not choose the same file.  The caller can use f.Name()\u000ato find the name of the file.  It is the caller&#39;s responsibility to\u000aremove the file when no longer needed.\u000a</p>\u000a\u000a","name":"TempFile"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:WriteFile!\">WriteFile</a></h2>\u000a<code>func WriteFile(filename string, data []byte, perm uint32) os.Error</code>\u000a<p>\u000aWriteFile writes data to a file named by filename.\u000aIf the file does not exist, WriteFile creates it with permissions perm;\u000aotherwise WriteFile truncates it before writing.\u000a</p>\u000a\u000a","name":"WriteFile"}],"consts":[],"vars":[]}