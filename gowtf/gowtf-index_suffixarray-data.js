var gowtfData = {"html":"<p>\u000aThe suffixarray package implements substring search in logarithmic time\u000ausing an in-memory suffix array.\u000a</p>\u000a<p>\u000aExample use:\u000a</p>\u000a<pre>// create index for some data\u000aindex := suffixarray.New(data)\u000a\u000a// lookup byte slice s\u000aoffsets1 := index.Lookup(s, -1) // the list of all indices where s occurs in data\u000aoffsets2 := index.Lookup(s, 3)  // the list of at most 3 indices where s occurs in data\u000a</pre>\u000a","name":"suffixarray","filenames":["/home/nsf/go/src/pkg/index/suffixarray/suffixarray.go"],"types":[{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Index!\">Index</a></h2>\u000a<pre>type Index struct {\u000a\u0009data []byte\u000a\u0009sa   []int // suffix array for data\u000a}</pre>\u000a<p>\u000aIndex implements a suffix array for fast substring search.\u000a</p>\u000a\u000a","name":"Index","methods":[{"html":"\u000a<h2><a class=\"black\" href=\"?m:Index\">func (*Index)</a> <a href=\"?m:Index.Lookup!\">Lookup</a></h2>\u000a<code>func (x *Index) Lookup(s []byte, n int) []int</code>\u000a<p>\u000aLookup returns an unsorted list of at most n indices where the byte string s\u000aoccurs in the indexed data. If n &lt; 0, all occurrences are returned.\u000aThe result is nil if s is empty, s is not found, or n == 0.\u000aLookup time is O((log(N) + len(result))*len(s)) where N is the\u000asize of the indexed data.\u000a</p>\u000a\u000a","name":"Lookup"}]}],"funcs":[{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:New!\">New</a></h2>\u000a<code>func New(data []byte) *Index</code>\u000a<p>\u000aNew creates a new Index for data.\u000aIndex creation time is approximately O(N*log(N)) for N = len(data).\u000a</p>\u000a\u000a","name":"New"}],"consts":[],"vars":[]}