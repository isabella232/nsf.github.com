var gowtfData = {"index":"index.html","html":"<p>\u000aThis package contains an interface to the low-level operating system\u000aprimitives.  The details vary depending on the underlying system.\u000aIts primary use is inside other packages that provide a more portable\u000ainterface to the system, such as &#34;os&#34;, &#34;time&#34; and &#34;net&#34;.  Use those\u000apackages rather than this one if you can.\u000aFor details of the functions and data types in this package consult\u000athe manuals for the appropriate operating system.\u000aThese calls return errno == 0 to indicate success; otherwise\u000aerrno is an operating system error number describing the failure.\u000a</p>\u000a","name":"syscall","filenames":["/home/nsf/go/src/pkg/syscall/zsysnum_linux_386.go","/home/nsf/go/src/pkg/syscall/syscall_unix.go","/home/nsf/go/src/pkg/syscall/exec_unix.go","/home/nsf/go/src/pkg/syscall/syscall_linux.go","/home/nsf/go/src/pkg/syscall/syscall_386.go","/home/nsf/go/src/pkg/syscall/zerrors_linux_386.go","/home/nsf/go/src/pkg/syscall/zsyscall_linux_386.go","/home/nsf/go/src/pkg/syscall/ztypes_linux_386.go","/home/nsf/go/src/pkg/syscall/syscall.go","/home/nsf/go/src/pkg/syscall/syscall_linux_386.go","/home/nsf/go/src/pkg/syscall/str.go"],"types":[{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Cmsghdr!\">Cmsghdr</a></h2>\u000a<pre>type Cmsghdr struct {\u000a\u0009Len   uint32\u000a\u0009Level int32\u000a\u0009Type  int32\u000a}</pre>\u000a\u000a","name":"Cmsghdr","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Dirent!\">Dirent</a></h2>\u000a<pre>type Dirent struct {\u000a\u0009Ino    uint64\u000a\u0009Off    int64\u000a\u0009Reclen uint16\u000a\u0009Type   uint8\u000a\u0009Name   [256]int8\u000a\u0009Pad0   [1]byte\u000a}</pre>\u000a\u000a","name":"Dirent","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:EpollEvent!\">EpollEvent</a></h2>\u000a<pre>type EpollEvent struct {\u000a\u0009Events uint32\u000a\u0009Fd     int32\u000a\u0009Pad    int32\u000a}</pre>\u000a\u000a","name":"EpollEvent","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:FdSet!\">FdSet</a></h2>\u000a<pre>type FdSet struct {\u000a\u0009Bits [32]int32\u000a}</pre>\u000a\u000a","name":"FdSet","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:InotifyEvent!\">InotifyEvent</a></h2>\u000a<pre>type InotifyEvent struct {\u000a\u0009Wd     int32\u000a\u0009Mask   uint32\u000a\u0009Cookie uint32\u000a\u0009Len    uint32\u000a}</pre>\u000a\u000a","name":"InotifyEvent","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Iovec!\">Iovec</a></h2>\u000a<pre>type Iovec struct {\u000a\u0009Base *byte\u000a\u0009Len  uint32\u000a}</pre>\u000a\u000a","name":"Iovec","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Linger!\">Linger</a></h2>\u000a<pre>type Linger struct {\u000a\u0009Onoff  int32\u000a\u0009Linger int32\u000a}</pre>\u000a\u000a","name":"Linger","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Msghdr!\">Msghdr</a></h2>\u000a<pre>type Msghdr struct {\u000a\u0009Name       *byte\u000a\u0009Namelen    uint32\u000a\u0009Iov        *Iovec\u000a\u0009Iovlen     uint32\u000a\u0009Control    *byte\u000a\u0009Controllen uint32\u000a\u0009Flags      int32\u000a}</pre>\u000a\u000a","name":"Msghdr","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:PtraceRegs!\">PtraceRegs</a></h2>\u000a<pre>type PtraceRegs struct {\u000a\u0009Ebx      int32\u000a\u0009Ecx      int32\u000a\u0009Edx      int32\u000a\u0009Esi      int32\u000a\u0009Edi      int32\u000a\u0009Ebp      int32\u000a\u0009Eax      int32\u000a\u0009Xds      int32\u000a\u0009Xes      int32\u000a\u0009Xfs      int32\u000a\u0009Xgs      int32\u000a\u0009Orig_eax int32\u000a\u0009Eip      int32\u000a\u0009Xcs      int32\u000a\u0009Eflags   int32\u000a\u0009Esp      int32\u000a\u0009Xss      int32\u000a}</pre>\u000a\u000a","name":"PtraceRegs","methods":[{"html":"\u000a<h2><a class=\"black\" href=\"?m:PtraceRegs\">func (*PtraceRegs)</a> <a href=\"?m:PtraceRegs.PC!\">PC</a></h2>\u000a<code>func (r *PtraceRegs) PC() uint64</code>\u000a\u000a","name":"PC"},{"html":"\u000a<h2><a class=\"black\" href=\"?m:PtraceRegs\">func (*PtraceRegs)</a> <a href=\"?m:PtraceRegs.SetPC!\">SetPC</a></h2>\u000a<code>func (r *PtraceRegs) SetPC(pc uint64)</code>\u000a\u000a","name":"SetPC"}]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:RawSockaddr!\">RawSockaddr</a></h2>\u000a<pre>type RawSockaddr struct {\u000a\u0009Family uint16\u000a\u0009Data   [14]int8\u000a}</pre>\u000a\u000a","name":"RawSockaddr","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:RawSockaddrAny!\">RawSockaddrAny</a></h2>\u000a<pre>type RawSockaddrAny struct {\u000a\u0009Addr RawSockaddr\u000a\u0009Pad  [96]int8\u000a}</pre>\u000a\u000a","name":"RawSockaddrAny","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:RawSockaddrInet4!\">RawSockaddrInet4</a></h2>\u000a<pre>type RawSockaddrInet4 struct {\u000a\u0009Family uint16\u000a\u0009Port   uint16\u000a\u0009Addr   [4]byte /* in_addr */\u000a\u0009Zero   [8]uint8\u000a}</pre>\u000a\u000a","name":"RawSockaddrInet4","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:RawSockaddrInet6!\">RawSockaddrInet6</a></h2>\u000a<pre>type RawSockaddrInet6 struct {\u000a\u0009Family   uint16\u000a\u0009Port     uint16\u000a\u0009Flowinfo uint32\u000a\u0009Addr     [16]byte /* in6_addr */\u000a\u0009Scope_id uint32\u000a}</pre>\u000a\u000a","name":"RawSockaddrInet6","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:RawSockaddrLinklayer!\">RawSockaddrLinklayer</a></h2>\u000a<pre>type RawSockaddrLinklayer struct {\u000a\u0009Family   uint16\u000a\u0009Protocol uint16\u000a\u0009Ifindex  int32\u000a\u0009Hatype   uint16\u000a\u0009Pkttype  uint8\u000a\u0009Halen    uint8\u000a\u0009Addr     [8]uint8\u000a}</pre>\u000a\u000a","name":"RawSockaddrLinklayer","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:RawSockaddrUnix!\">RawSockaddrUnix</a></h2>\u000a<pre>type RawSockaddrUnix struct {\u000a\u0009Family uint16\u000a\u0009Path   [108]int8\u000a}</pre>\u000a\u000a","name":"RawSockaddrUnix","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Rlimit!\">Rlimit</a></h2>\u000a<pre>type Rlimit struct {\u000a\u0009Cur uint64\u000a\u0009Max uint64\u000a}</pre>\u000a\u000a","name":"Rlimit","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Rusage!\">Rusage</a></h2>\u000a<pre>type Rusage struct {\u000a\u0009Utime    Timeval\u000a\u0009Stime    Timeval\u000a\u0009Maxrss   int32\u000a\u0009Ixrss    int32\u000a\u0009Idrss    int32\u000a\u0009Isrss    int32\u000a\u0009Minflt   int32\u000a\u0009Majflt   int32\u000a\u0009Nswap    int32\u000a\u0009Inblock  int32\u000a\u0009Oublock  int32\u000a\u0009Msgsnd   int32\u000a\u0009Msgrcv   int32\u000a\u0009Nsignals int32\u000a\u0009Nvcsw    int32\u000a\u0009Nivcsw   int32\u000a}</pre>\u000a\u000a","name":"Rusage","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Sockaddr!\">Sockaddr</a></h2>\u000a<pre>type Sockaddr interface {\u000a\u0009sockaddr() (ptr uintptr, len _Socklen, errno int) // lowercase; only we can define Sockaddrs\u000a}</pre>\u000a\u000a","name":"Sockaddr","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:SockaddrInet4!\">SockaddrInet4</a></h2>\u000a<pre>type SockaddrInet4 struct {\u000a\u0009Port int\u000a\u0009Addr [4]byte\u000a\u0009raw  RawSockaddrInet4\u000a}</pre>\u000a\u000a","name":"SockaddrInet4","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:SockaddrInet6!\">SockaddrInet6</a></h2>\u000a<pre>type SockaddrInet6 struct {\u000a\u0009Port int\u000a\u0009Addr [16]byte\u000a\u0009raw  RawSockaddrInet6\u000a}</pre>\u000a\u000a","name":"SockaddrInet6","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:SockaddrLinklayer!\">SockaddrLinklayer</a></h2>\u000a<pre>type SockaddrLinklayer struct {\u000a\u0009Protocol uint16\u000a\u0009Ifindex  int\u000a\u0009Hatype   uint16\u000a\u0009Pkttype  uint8\u000a\u0009Halen    uint8\u000a\u0009Addr     [8]byte\u000a\u0009raw      RawSockaddrLinklayer\u000a}</pre>\u000a\u000a","name":"SockaddrLinklayer","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:SockaddrUnix!\">SockaddrUnix</a></h2>\u000a<pre>type SockaddrUnix struct {\u000a\u0009Name string\u000a\u0009raw  RawSockaddrUnix\u000a}</pre>\u000a\u000a","name":"SockaddrUnix","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Stat_t!\">Stat_t</a></h2>\u000a<pre>type Stat_t struct {\u000a\u0009Dev       uint64\u000a\u0009X__pad1   uint16\u000a\u0009Pad0      [2]byte\u000a\u0009X__st_ino uint32\u000a\u0009Mode      uint32\u000a\u0009Nlink     uint32\u000a\u0009Uid       uint32\u000a\u0009Gid       uint32\u000a\u0009Rdev      uint64\u000a\u0009X__pad2   uint16\u000a\u0009Pad1      [2]byte\u000a\u0009Size      int64\u000a\u0009Blksize   int32\u000a\u0009Blocks    int64\u000a\u0009Atim      Timespec\u000a\u0009Mtim      Timespec\u000a\u0009Ctim      Timespec\u000a\u0009Ino       uint64\u000a}</pre>\u000a\u000a","name":"Stat_t","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Statfs_t!\">Statfs_t</a></h2>\u000a<pre>type Statfs_t struct {\u000a\u0009Type    int32\u000a\u0009Bsize   int32\u000a\u0009Blocks  uint64\u000a\u0009Bfree   uint64\u000a\u0009Bavail  uint64\u000a\u0009Files   uint64\u000a\u0009Ffree   uint64\u000a\u0009Fsid    [8]byte /* __fsid_t */\u000a\u0009Namelen int32\u000a\u0009Frsize  int32\u000a\u0009Spare   [5]int32\u000a}</pre>\u000a\u000a","name":"Statfs_t","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Sysinfo_t!\">Sysinfo_t</a></h2>\u000a<pre>type Sysinfo_t struct {\u000a\u0009Uptime    int32\u000a\u0009Loads     [3]uint32\u000a\u0009Totalram  uint32\u000a\u0009Freeram   uint32\u000a\u0009Sharedram uint32\u000a\u0009Bufferram uint32\u000a\u0009Totalswap uint32\u000a\u0009Freeswap  uint32\u000a\u0009Procs     uint16\u000a\u0009Pad       uint16\u000a\u0009Totalhigh uint32\u000a\u0009Freehigh  uint32\u000a\u0009Unit      uint32\u000a\u0009X_f       [8]int8\u000a}</pre>\u000a\u000a","name":"Sysinfo_t","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Time_t!\">Time_t</a></h2>\u000a<pre>type Time_t int32</pre>\u000a\u000a","name":"Time_t","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Timespec!\">Timespec</a></h2>\u000a<pre>type Timespec struct {\u000a\u0009Sec  int32\u000a\u0009Nsec int32\u000a}</pre>\u000a\u000a","name":"Timespec","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Timeval!\">Timeval</a></h2>\u000a<pre>type Timeval struct {\u000a\u0009Sec  int32\u000a\u0009Usec int32\u000a}</pre>\u000a\u000a","name":"Timeval","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Timex!\">Timex</a></h2>\u000a<pre>type Timex struct {\u000a\u0009Modes     uint32\u000a\u0009Offset    int32\u000a\u0009Freq      int32\u000a\u0009Maxerror  int32\u000a\u0009Esterror  int32\u000a\u0009Status    int32\u000a\u0009Constant  int32\u000a\u0009Precision int32\u000a\u0009Tolerance int32\u000a\u0009Time      Timeval\u000a\u0009Tick      int32\u000a\u0009Ppsfreq   int32\u000a\u0009Jitter    int32\u000a\u0009Shift     int32\u000a\u0009Stabil    int32\u000a\u0009Jitcnt    int32\u000a\u0009Calcnt    int32\u000a\u0009Errcnt    int32\u000a\u0009Stbcnt    int32\u000a\u0009Tai       int32\u000a\u0009Pad0      int32\u000a\u0009Pad1      int32\u000a\u0009Pad2      int32\u000a\u0009Pad3      int32\u000a\u0009Pad4      int32\u000a\u0009Pad5      int32\u000a\u0009Pad6      int32\u000a\u0009Pad7      int32\u000a\u0009Pad8      int32\u000a\u0009Pad9      int32\u000a\u0009Pad10     int32\u000a}</pre>\u000a\u000a","name":"Timex","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Tms!\">Tms</a></h2>\u000a<pre>type Tms struct {\u000a\u0009Utime  int32\u000a\u0009Stime  int32\u000a\u0009Cutime int32\u000a\u0009Cstime int32\u000a}</pre>\u000a\u000a","name":"Tms","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Ucred!\">Ucred</a></h2>\u000a<pre>type Ucred struct {\u000a\u0009Pid int32\u000a\u0009Uid uint32\u000a\u0009Gid uint32\u000a}</pre>\u000a\u000a","name":"Ucred","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Ustat_t!\">Ustat_t</a></h2>\u000a<pre>type Ustat_t struct {\u000a\u0009Tfree  int32\u000a\u0009Tinode uint32\u000a\u0009Fname  [6]int8\u000a\u0009Fpack  [6]int8\u000a}</pre>\u000a\u000a","name":"Ustat_t","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Utimbuf!\">Utimbuf</a></h2>\u000a<pre>type Utimbuf struct {\u000a\u0009Actime  int32\u000a\u0009Modtime int32\u000a}</pre>\u000a\u000a","name":"Utimbuf","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Utsname!\">Utsname</a></h2>\u000a<pre>type Utsname struct {\u000a\u0009Sysname    [65]int8\u000a\u0009Nodename   [65]int8\u000a\u0009Release    [65]int8\u000a\u0009Version    [65]int8\u000a\u0009Machine    [65]int8\u000a\u0009Domainname [65]int8\u000a}</pre>\u000a\u000a","name":"Utsname","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:WaitStatus!\">WaitStatus</a></h2>\u000a<pre>type WaitStatus uint32</pre>\u000a\u000a","name":"WaitStatus","methods":[{"html":"\u000a<h2><a class=\"black\" href=\"?m:WaitStatus\">func (WaitStatus)</a> <a href=\"?m:WaitStatus.Continued!\">Continued</a></h2>\u000a<code>func (w WaitStatus) Continued() bool</code>\u000a\u000a","name":"Continued"},{"html":"\u000a<h2><a class=\"black\" href=\"?m:WaitStatus\">func (WaitStatus)</a> <a href=\"?m:WaitStatus.CoreDump!\">CoreDump</a></h2>\u000a<code>func (w WaitStatus) CoreDump() bool</code>\u000a\u000a","name":"CoreDump"},{"html":"\u000a<h2><a class=\"black\" href=\"?m:WaitStatus\">func (WaitStatus)</a> <a href=\"?m:WaitStatus.ExitStatus!\">ExitStatus</a></h2>\u000a<code>func (w WaitStatus) ExitStatus() int</code>\u000a\u000a","name":"ExitStatus"},{"html":"\u000a<h2><a class=\"black\" href=\"?m:WaitStatus\">func (WaitStatus)</a> <a href=\"?m:WaitStatus.Exited!\">Exited</a></h2>\u000a<code>func (w WaitStatus) Exited() bool</code>\u000a\u000a","name":"Exited"},{"html":"\u000a<h2><a class=\"black\" href=\"?m:WaitStatus\">func (WaitStatus)</a> <a href=\"?m:WaitStatus.Signal!\">Signal</a></h2>\u000a<code>func (w WaitStatus) Signal() int</code>\u000a\u000a","name":"Signal"},{"html":"\u000a<h2><a class=\"black\" href=\"?m:WaitStatus\">func (WaitStatus)</a> <a href=\"?m:WaitStatus.Signaled!\">Signaled</a></h2>\u000a<code>func (w WaitStatus) Signaled() bool</code>\u000a\u000a","name":"Signaled"},{"html":"\u000a<h2><a class=\"black\" href=\"?m:WaitStatus\">func (WaitStatus)</a> <a href=\"?m:WaitStatus.StopSignal!\">StopSignal</a></h2>\u000a<code>func (w WaitStatus) StopSignal() int</code>\u000a\u000a","name":"StopSignal"},{"html":"\u000a<h2><a class=\"black\" href=\"?m:WaitStatus\">func (WaitStatus)</a> <a href=\"?m:WaitStatus.Stopped!\">Stopped</a></h2>\u000a<code>func (w WaitStatus) Stopped() bool</code>\u000a\u000a","name":"Stopped"},{"html":"\u000a<h2><a class=\"black\" href=\"?m:WaitStatus\">func (WaitStatus)</a> <a href=\"?m:WaitStatus.TrapCause!\">TrapCause</a></h2>\u000a<code>func (w WaitStatus) TrapCause() int</code>\u000a\u000a","name":"TrapCause"}]}],"funcs":[{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Accept!\">Accept</a></h2>\u000a<code>func Accept(fd int) (nfd int, sa Sockaddr, errno int)</code>\u000a\u000a","name":"Accept"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Access!\">Access</a></h2>\u000a<code>func Access(path string, mode uint32) (errno int)</code>\u000a\u000a","name":"Access"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Acct!\">Acct</a></h2>\u000a<code>func Acct(path string) (errno int)</code>\u000a\u000a","name":"Acct"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Adjtimex!\">Adjtimex</a></h2>\u000a<code>func Adjtimex(buf *Timex) (state int, errno int)</code>\u000a\u000a","name":"Adjtimex"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Bind!\">Bind</a></h2>\u000a<code>func Bind(fd int, sa Sockaddr) (errno int)</code>\u000a\u000a","name":"Bind"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:BindToDevice!\">BindToDevice</a></h2>\u000a<code>func BindToDevice(fd int, device string) (errno int)</code>\u000a<p>\u000aBindToDevice binds the socket associated with fd to device.\u000a</p>\u000a\u000a","name":"BindToDevice"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Chdir!\">Chdir</a></h2>\u000a<code>func Chdir(path string) (errno int)</code>\u000a\u000a","name":"Chdir"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Chmod!\">Chmod</a></h2>\u000a<code>func Chmod(path string, mode uint32) (errno int)</code>\u000a\u000a","name":"Chmod"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Chown!\">Chown</a></h2>\u000a<code>func Chown(path string, uid int, gid int) (errno int)</code>\u000a\u000a","name":"Chown"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Chroot!\">Chroot</a></h2>\u000a<code>func Chroot(path string) (errno int)</code>\u000a\u000a","name":"Chroot"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Close!\">Close</a></h2>\u000a<code>func Close(fd int) (errno int)</code>\u000a\u000a","name":"Close"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:CloseOnExec!\">CloseOnExec</a></h2>\u000a<code>func CloseOnExec(fd int)</code>\u000a\u000a","name":"CloseOnExec"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Connect!\">Connect</a></h2>\u000a<code>func Connect(fd int, sa Sockaddr) (errno int)</code>\u000a\u000a","name":"Connect"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Creat!\">Creat</a></h2>\u000a<code>func Creat(path string, mode uint32) (fd int, errno int)</code>\u000a\u000a","name":"Creat"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Dup!\">Dup</a></h2>\u000a<code>func Dup(oldfd int) (fd int, errno int)</code>\u000a\u000a","name":"Dup"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Dup2!\">Dup2</a></h2>\u000a<code>func Dup2(oldfd int, newfd int) (fd int, errno int)</code>\u000a\u000a","name":"Dup2"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:EpollCreate!\">EpollCreate</a></h2>\u000a<code>func EpollCreate(size int) (fd int, errno int)</code>\u000a\u000a","name":"EpollCreate"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:EpollCtl!\">EpollCtl</a></h2>\u000a<code>func EpollCtl(epfd int, op int, fd int, event *EpollEvent) (errno int)</code>\u000a\u000a","name":"EpollCtl"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:EpollWait!\">EpollWait</a></h2>\u000a<code>func EpollWait(epfd int, events []EpollEvent, msec int) (n int, errno int)</code>\u000a\u000a","name":"EpollWait"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Errstr!\">Errstr</a></h2>\u000a<code>func Errstr(errno int) string</code>\u000a\u000a","name":"Errstr"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Exec!\">Exec</a></h2>\u000a<code>func Exec(argv0 string, argv []string, envv []string) (err int)</code>\u000a<p>\u000aOrdinary exec.\u000a</p>\u000a\u000a","name":"Exec"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Exit!\">Exit</a></h2>\u000a<code>func Exit(code int)</code>\u000a\u000a","name":"Exit"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Faccessat!\">Faccessat</a></h2>\u000a<code>func Faccessat(dirfd int, path string, mode uint32, flags int) (errno int)</code>\u000a\u000a","name":"Faccessat"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Fallocate!\">Fallocate</a></h2>\u000a<code>func Fallocate(fd int, mode uint32, off int64, len int64) (errno int)</code>\u000a\u000a","name":"Fallocate"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Fchdir!\">Fchdir</a></h2>\u000a<code>func Fchdir(fd int) (errno int)</code>\u000a\u000a","name":"Fchdir"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Fchmod!\">Fchmod</a></h2>\u000a<code>func Fchmod(fd int, mode uint32) (errno int)</code>\u000a\u000a","name":"Fchmod"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Fchmodat!\">Fchmodat</a></h2>\u000a<code>func Fchmodat(dirfd int, path string, mode uint32, flags int) (errno int)</code>\u000a\u000a","name":"Fchmodat"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Fchown!\">Fchown</a></h2>\u000a<code>func Fchown(fd int, uid int, gid int) (errno int)</code>\u000a\u000a","name":"Fchown"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Fchownat!\">Fchownat</a></h2>\u000a<code>func Fchownat(dirfd int, path string, uid int, gid int, flags int) (errno int)</code>\u000a\u000a","name":"Fchownat"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Fdatasync!\">Fdatasync</a></h2>\u000a<code>func Fdatasync(fd int) (errno int)</code>\u000a\u000a","name":"Fdatasync"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:ForkExec!\">ForkExec</a></h2>\u000a<code>func ForkExec(argv0 string, argv []string, envv []string, dir string, fd []int) (pid int, err int)</code>\u000a<p>\u000aCombination of fork and exec, careful to be thread safe.\u000a</p>\u000a\u000a","name":"ForkExec"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Fstat!\">Fstat</a></h2>\u000a<code>func Fstat(fd int, stat *Stat_t) (errno int)</code>\u000a\u000a","name":"Fstat"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Fstatfs!\">Fstatfs</a></h2>\u000a<code>func Fstatfs(fd int, buf *Statfs_t) (errno int)</code>\u000a\u000a","name":"Fstatfs"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Fsync!\">Fsync</a></h2>\u000a<code>func Fsync(fd int) (errno int)</code>\u000a\u000a","name":"Fsync"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Ftruncate!\">Ftruncate</a></h2>\u000a<code>func Ftruncate(fd int, length int64) (errno int)</code>\u000a\u000a","name":"Ftruncate"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Futimes!\">Futimes</a></h2>\u000a<code>func Futimes(fd int, tv []Timeval) (errno int)</code>\u000a\u000a","name":"Futimes"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Futimesat!\">Futimesat</a></h2>\u000a<code>func Futimesat(dirfd int, path string, tv []Timeval) (errno int)</code>\u000a<p>\u000asys\u0009futimesat(dirfd int, path *byte, times *[2]Timeval) (errno int)\u000a</p>\u000a\u000a","name":"Futimesat"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getcwd!\">Getcwd</a></h2>\u000a<code>func Getcwd(buf []byte) (n int, errno int)</code>\u000a\u000a","name":"Getcwd"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getdents!\">Getdents</a></h2>\u000a<code>func Getdents(fd int, buf []byte) (n int, errno int)</code>\u000a\u000a","name":"Getdents"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getegid!\">Getegid</a></h2>\u000a<code>func Getegid() (egid int)</code>\u000a\u000a","name":"Getegid"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Geteuid!\">Geteuid</a></h2>\u000a<code>func Geteuid() (euid int)</code>\u000a\u000a","name":"Geteuid"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getgid!\">Getgid</a></h2>\u000a<code>func Getgid() (gid int)</code>\u000a\u000a","name":"Getgid"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getgroups!\">Getgroups</a></h2>\u000a<code>func Getgroups() (gids []int, errno int)</code>\u000a\u000a","name":"Getgroups"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getpagesize!\">Getpagesize</a></h2>\u000a<code>func Getpagesize() int</code>\u000a\u000a","name":"Getpagesize"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getpeername!\">Getpeername</a></h2>\u000a<code>func Getpeername(fd int) (sa Sockaddr, errno int)</code>\u000a\u000a","name":"Getpeername"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getpgid!\">Getpgid</a></h2>\u000a<code>func Getpgid(pid int) (pgid int, errno int)</code>\u000a\u000a","name":"Getpgid"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getpgrp!\">Getpgrp</a></h2>\u000a<code>func Getpgrp() (pid int)</code>\u000a\u000a","name":"Getpgrp"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getpid!\">Getpid</a></h2>\u000a<code>func Getpid() (pid int)</code>\u000a\u000a","name":"Getpid"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getppid!\">Getppid</a></h2>\u000a<code>func Getppid() (ppid int)</code>\u000a\u000a","name":"Getppid"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getrlimit!\">Getrlimit</a></h2>\u000a<code>func Getrlimit(resource int, rlim *Rlimit) (errno int)</code>\u000a\u000a","name":"Getrlimit"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getrusage!\">Getrusage</a></h2>\u000a<code>func Getrusage(who int, rusage *Rusage) (errno int)</code>\u000a\u000a","name":"Getrusage"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getsockname!\">Getsockname</a></h2>\u000a<code>func Getsockname(fd int) (sa Sockaddr, errno int)</code>\u000a\u000a","name":"Getsockname"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Gettid!\">Gettid</a></h2>\u000a<code>func Gettid() (tid int)</code>\u000a\u000a","name":"Gettid"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Gettimeofday!\">Gettimeofday</a></h2>\u000a<code>func Gettimeofday(tv *Timeval) (errno int)</code>\u000a\u000a","name":"Gettimeofday"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getuid!\">Getuid</a></h2>\u000a<code>func Getuid() (uid int)</code>\u000a\u000a","name":"Getuid"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getwd!\">Getwd</a></h2>\u000a<code>func Getwd() (wd string, errno int)</code>\u000a<p>\u000asys\u0009Getcwd(buf []byte) (n int, errno int)\u000a</p>\u000a\u000a","name":"Getwd"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:InotifyAddWatch!\">InotifyAddWatch</a></h2>\u000a<code>func InotifyAddWatch(fd int, pathname string, mask uint32) (watchdesc int, errno int)</code>\u000a\u000a","name":"InotifyAddWatch"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:InotifyInit!\">InotifyInit</a></h2>\u000a<code>func InotifyInit() (fd int, errno int)</code>\u000a\u000a","name":"InotifyInit"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:InotifyInit1!\">InotifyInit1</a></h2>\u000a<code>func InotifyInit1(flags int) (fd int, errno int)</code>\u000a\u000a","name":"InotifyInit1"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:InotifyRmWatch!\">InotifyRmWatch</a></h2>\u000a<code>func InotifyRmWatch(fd int, watchdesc uint32) (success int, errno int)</code>\u000a\u000a","name":"InotifyRmWatch"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Ioperm!\">Ioperm</a></h2>\u000a<code>func Ioperm(from int, num int, on int) (errno int)</code>\u000a\u000a","name":"Ioperm"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Iopl!\">Iopl</a></h2>\u000a<code>func Iopl(level int) (errno int)</code>\u000a\u000a","name":"Iopl"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Kill!\">Kill</a></h2>\u000a<code>func Kill(pid int, sig int) (errno int)</code>\u000a\u000a","name":"Kill"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Klogctl!\">Klogctl</a></h2>\u000a<code>func Klogctl(typ int, buf []byte) (n int, errno int)</code>\u000a\u000a","name":"Klogctl"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Lchown!\">Lchown</a></h2>\u000a<code>func Lchown(path string, uid int, gid int) (errno int)</code>\u000a\u000a","name":"Lchown"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Link!\">Link</a></h2>\u000a<code>func Link(oldpath string, newpath string) (errno int)</code>\u000a\u000a","name":"Link"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Listen!\">Listen</a></h2>\u000a<code>func Listen(s int, n int) (errno int)</code>\u000a\u000a","name":"Listen"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Lstat!\">Lstat</a></h2>\u000a<code>func Lstat(path string, stat *Stat_t) (errno int)</code>\u000a\u000a","name":"Lstat"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Mkdir!\">Mkdir</a></h2>\u000a<code>func Mkdir(path string, mode uint32) (errno int)</code>\u000a\u000a","name":"Mkdir"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Mkdirat!\">Mkdirat</a></h2>\u000a<code>func Mkdirat(dirfd int, path string, mode uint32) (errno int)</code>\u000a\u000a","name":"Mkdirat"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Mknod!\">Mknod</a></h2>\u000a<code>func Mknod(path string, mode uint32, dev int) (errno int)</code>\u000a\u000a","name":"Mknod"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Mknodat!\">Mknodat</a></h2>\u000a<code>func Mknodat(dirfd int, path string, mode uint32, dev int) (errno int)</code>\u000a\u000a","name":"Mknodat"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Nanosleep!\">Nanosleep</a></h2>\u000a<code>func Nanosleep(time *Timespec, leftover *Timespec) (errno int)</code>\u000a\u000a","name":"Nanosleep"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:NsecToTimespec!\">NsecToTimespec</a></h2>\u000a<code>func NsecToTimespec(nsec int64) (ts Timespec)</code>\u000a\u000a","name":"NsecToTimespec"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:NsecToTimeval!\">NsecToTimeval</a></h2>\u000a<code>func NsecToTimeval(nsec int64) (tv Timeval)</code>\u000a\u000a","name":"NsecToTimeval"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Open!\">Open</a></h2>\u000a<code>func Open(path string, mode int, perm uint32) (fd int, errno int)</code>\u000a<p>\u000asys\u0009open(path string, mode int, perm uint32) (fd int, errno int)\u000a</p>\u000a\u000a","name":"Open"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Openat!\">Openat</a></h2>\u000a<code>func Openat(dirfd int, path string, flags int, mode uint32) (fd int, errno int)</code>\u000a<p>\u000asys\u0009openat(dirfd int, path string, flags int, mode uint32) (fd int, errno int)\u000a</p>\u000a\u000a","name":"Openat"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Pause!\">Pause</a></h2>\u000a<code>func Pause() (errno int)</code>\u000a\u000a","name":"Pause"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Pipe!\">Pipe</a></h2>\u000a<code>func Pipe(p []int) (errno int)</code>\u000a<p>\u000asys\u0009pipe(p *[2]_C_int) (errno int)\u000a</p>\u000a\u000a","name":"Pipe"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:PivotRoot!\">PivotRoot</a></h2>\u000a<code>func PivotRoot(newroot string, putold string) (errno int)</code>\u000a\u000a","name":"PivotRoot"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Pread!\">Pread</a></h2>\u000a<code>func Pread(fd int, p []byte, offset int64) (n int, errno int)</code>\u000a\u000a","name":"Pread"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:PtraceAttach!\">PtraceAttach</a></h2>\u000a<code>func PtraceAttach(pid int) (errno int)</code>\u000a\u000a","name":"PtraceAttach"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:PtraceCont!\">PtraceCont</a></h2>\u000a<code>func PtraceCont(pid int, signal int) (errno int)</code>\u000a\u000a","name":"PtraceCont"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:PtraceDetach!\">PtraceDetach</a></h2>\u000a<code>func PtraceDetach(pid int) (errno int)</code>\u000a\u000a","name":"PtraceDetach"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:PtraceForkExec!\">PtraceForkExec</a></h2>\u000a<code>func PtraceForkExec(argv0 string, argv []string, envv []string, dir string, fd []int) (pid int, err int)</code>\u000a<p>\u000aPtraceForkExec is like ForkExec, but starts the child in a traced state.\u000a</p>\u000a\u000a","name":"PtraceForkExec"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:PtraceGetEventMsg!\">PtraceGetEventMsg</a></h2>\u000a<code>func PtraceGetEventMsg(pid int) (msg uint, errno int)</code>\u000a\u000a","name":"PtraceGetEventMsg"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:PtraceGetRegs!\">PtraceGetRegs</a></h2>\u000a<code>func PtraceGetRegs(pid int, regsout *PtraceRegs) (errno int)</code>\u000a\u000a","name":"PtraceGetRegs"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:PtracePeekData!\">PtracePeekData</a></h2>\u000a<code>func PtracePeekData(pid int, addr uintptr, out []byte) (count int, errno int)</code>\u000a\u000a","name":"PtracePeekData"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:PtracePeekText!\">PtracePeekText</a></h2>\u000a<code>func PtracePeekText(pid int, addr uintptr, out []byte) (count int, errno int)</code>\u000a\u000a","name":"PtracePeekText"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:PtracePokeData!\">PtracePokeData</a></h2>\u000a<code>func PtracePokeData(pid int, addr uintptr, data []byte) (count int, errno int)</code>\u000a\u000a","name":"PtracePokeData"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:PtracePokeText!\">PtracePokeText</a></h2>\u000a<code>func PtracePokeText(pid int, addr uintptr, data []byte) (count int, errno int)</code>\u000a\u000a","name":"PtracePokeText"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:PtraceSetOptions!\">PtraceSetOptions</a></h2>\u000a<code>func PtraceSetOptions(pid int, options int) (errno int)</code>\u000a\u000a","name":"PtraceSetOptions"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:PtraceSetRegs!\">PtraceSetRegs</a></h2>\u000a<code>func PtraceSetRegs(pid int, regs *PtraceRegs) (errno int)</code>\u000a\u000a","name":"PtraceSetRegs"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:PtraceSingleStep!\">PtraceSingleStep</a></h2>\u000a<code>func PtraceSingleStep(pid int) (errno int)</code>\u000a\u000a","name":"PtraceSingleStep"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Pwrite!\">Pwrite</a></h2>\u000a<code>func Pwrite(fd int, p []byte, offset int64) (n int, errno int)</code>\u000a\u000a","name":"Pwrite"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:RawSyscall!\">RawSyscall</a></h2>\u000a<code>func RawSyscall(trap, a1, a2, a3 uintptr) (r1, r2, err uintptr)</code>\u000a\u000a","name":"RawSyscall"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Read!\">Read</a></h2>\u000a<code>func Read(fd int, p []byte) (n int, errno int)</code>\u000a\u000a","name":"Read"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Readlink!\">Readlink</a></h2>\u000a<code>func Readlink(path string, buf []byte) (n int, errno int)</code>\u000a\u000a","name":"Readlink"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Recvfrom!\">Recvfrom</a></h2>\u000a<code>func Recvfrom(fd int, p []byte, flags int) (n int, from Sockaddr, errno int)</code>\u000a\u000a","name":"Recvfrom"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Rename!\">Rename</a></h2>\u000a<code>func Rename(oldpath string, newpath string) (errno int)</code>\u000a\u000a","name":"Rename"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Renameat!\">Renameat</a></h2>\u000a<code>func Renameat(olddirfd int, oldpath string, newdirfd int, newpath string) (errno int)</code>\u000a\u000a","name":"Renameat"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Rmdir!\">Rmdir</a></h2>\u000a<code>func Rmdir(path string) (errno int)</code>\u000a\u000a","name":"Rmdir"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Seek!\">Seek</a></h2>\u000a<code>func Seek(fd int, offset int64, whence int) (newoffset int64, errno int)</code>\u000a<p>\u000aUnderlying system call writes to newoffset via pointer.\u000aImplemented in assembly to avoid allocation.\u000a</p>\u000a\u000a","name":"Seek"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Select!\">Select</a></h2>\u000a<code>func Select(nfd int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (n int, errno int)</code>\u000a\u000a","name":"Select"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Sendto!\">Sendto</a></h2>\u000a<code>func Sendto(fd int, p []byte, flags int, to Sockaddr) (errno int)</code>\u000a\u000a","name":"Sendto"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:SetNonblock!\">SetNonblock</a></h2>\u000a<code>func SetNonblock(fd int, nonblocking bool) (errno int)</code>\u000a\u000a","name":"SetNonblock"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Setdomainname!\">Setdomainname</a></h2>\u000a<code>func Setdomainname(p []byte) (errno int)</code>\u000a\u000a","name":"Setdomainname"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Setfsgid!\">Setfsgid</a></h2>\u000a<code>func Setfsgid(gid int) (errno int)</code>\u000a\u000a","name":"Setfsgid"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Setfsuid!\">Setfsuid</a></h2>\u000a<code>func Setfsuid(uid int) (errno int)</code>\u000a\u000a","name":"Setfsuid"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Setgid!\">Setgid</a></h2>\u000a<code>func Setgid(gid int) (errno int)</code>\u000a\u000a","name":"Setgid"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Setgroups!\">Setgroups</a></h2>\u000a<code>func Setgroups(gids []int) (errno int)</code>\u000a\u000a","name":"Setgroups"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Sethostname!\">Sethostname</a></h2>\u000a<code>func Sethostname(p []byte) (errno int)</code>\u000a\u000a","name":"Sethostname"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Setpgid!\">Setpgid</a></h2>\u000a<code>func Setpgid(pid int, pgid int) (errno int)</code>\u000a\u000a","name":"Setpgid"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Setregid!\">Setregid</a></h2>\u000a<code>func Setregid(rgid int, egid int) (errno int)</code>\u000a\u000a","name":"Setregid"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Setresgid!\">Setresgid</a></h2>\u000a<code>func Setresgid(rgid int, egid int, sgid int) (errno int)</code>\u000a\u000a","name":"Setresgid"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Setresuid!\">Setresuid</a></h2>\u000a<code>func Setresuid(ruid int, euid int, suid int) (errno int)</code>\u000a\u000a","name":"Setresuid"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Setreuid!\">Setreuid</a></h2>\u000a<code>func Setreuid(ruid int, euid int) (errno int)</code>\u000a\u000a","name":"Setreuid"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Setrlimit!\">Setrlimit</a></h2>\u000a<code>func Setrlimit(resource int, rlim *Rlimit) (errno int)</code>\u000a\u000a","name":"Setrlimit"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Setsid!\">Setsid</a></h2>\u000a<code>func Setsid() (pid int, errno int)</code>\u000a\u000a","name":"Setsid"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:SetsockoptInt!\">SetsockoptInt</a></h2>\u000a<code>func SetsockoptInt(fd, level, opt int, value int) (errno int)</code>\u000a\u000a","name":"SetsockoptInt"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:SetsockoptLinger!\">SetsockoptLinger</a></h2>\u000a<code>func SetsockoptLinger(fd, level, opt int, l *Linger) (errno int)</code>\u000a\u000a","name":"SetsockoptLinger"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:SetsockoptString!\">SetsockoptString</a></h2>\u000a<code>func SetsockoptString(fd, level, opt int, s string) (errno int)</code>\u000a\u000a","name":"SetsockoptString"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:SetsockoptTimeval!\">SetsockoptTimeval</a></h2>\u000a<code>func SetsockoptTimeval(fd, level, opt int, tv *Timeval) (errno int)</code>\u000a\u000a","name":"SetsockoptTimeval"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Settimeofday!\">Settimeofday</a></h2>\u000a<code>func Settimeofday(tv *Timeval) (errno int)</code>\u000a\u000a","name":"Settimeofday"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Setuid!\">Setuid</a></h2>\u000a<code>func Setuid(uid int) (errno int)</code>\u000a\u000a","name":"Setuid"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Shutdown!\">Shutdown</a></h2>\u000a<code>func Shutdown(s, how int) (errno int)</code>\u000a\u000a","name":"Shutdown"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Sleep!\">Sleep</a></h2>\u000a<code>func Sleep(nsec int64) (errno int)</code>\u000a\u000a","name":"Sleep"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Socket!\">Socket</a></h2>\u000a<code>func Socket(domain, typ, proto int) (fd, errno int)</code>\u000a\u000a","name":"Socket"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Socketpair!\">Socketpair</a></h2>\u000a<code>func Socketpair(domain, typ, proto int) (fd [2]int, errno int)</code>\u000a\u000a","name":"Socketpair"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Splice!\">Splice</a></h2>\u000a<code>func Splice(rfd int, roff *int64, wfd int, woff *int64, len int, flags int) (n int64, errno int)</code>\u000a\u000a","name":"Splice"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Stat!\">Stat</a></h2>\u000a<code>func Stat(path string, stat *Stat_t) (errno int)</code>\u000a\u000a","name":"Stat"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Statfs!\">Statfs</a></h2>\u000a<code>func Statfs(path string, buf *Statfs_t) (errno int)</code>\u000a\u000a","name":"Statfs"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:StringArrayPtr!\">StringArrayPtr</a></h2>\u000a<code>func StringArrayPtr(ss []string) []*byte</code>\u000a<p>\u000aConvert array of string to array\u000aof NUL-terminated byte pointer.\u000a</p>\u000a\u000a","name":"StringArrayPtr"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:StringBytePtr!\">StringBytePtr</a></h2>\u000a<code>func StringBytePtr(s string) *byte</code>\u000a<p>\u000aStringBytePtr returns a pointer to a NUL-terminated array of bytes\u000acontaining the text of s.\u000a</p>\u000a\u000a","name":"StringBytePtr"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:StringByteSlice!\">StringByteSlice</a></h2>\u000a<code>func StringByteSlice(s string) []byte</code>\u000a<p>\u000aStringByteSlice returns a NUL-terminated slice of bytes\u000acontaining the text of s.\u000a</p>\u000a\u000a","name":"StringByteSlice"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Symlink!\">Symlink</a></h2>\u000a<code>func Symlink(oldpath string, newpath string) (errno int)</code>\u000a\u000a","name":"Symlink"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Sync!\">Sync</a></h2>\u000a<code>func Sync()</code>\u000a\u000a","name":"Sync"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:SyncFileRange!\">SyncFileRange</a></h2>\u000a<code>func SyncFileRange(fd int, off int64, n int64, flags int) (errno int)</code>\u000a\u000a","name":"SyncFileRange"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Syscall!\">Syscall</a></h2>\u000a<code>func Syscall(trap, a1, a2, a3 uintptr) (r1, r2, err uintptr)</code>\u000a\u000a","name":"Syscall"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Syscall6!\">Syscall6</a></h2>\u000a<code>func Syscall6(trap, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2, err uintptr)</code>\u000a\u000a","name":"Syscall6"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Sysinfo!\">Sysinfo</a></h2>\u000a<code>func Sysinfo(info *Sysinfo_t) (errno int)</code>\u000a\u000a","name":"Sysinfo"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Tee!\">Tee</a></h2>\u000a<code>func Tee(rfd int, wfd int, len int, flags int) (n int64, errno int)</code>\u000a\u000a","name":"Tee"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Tgkill!\">Tgkill</a></h2>\u000a<code>func Tgkill(tgid int, tid int, sig int) (errno int)</code>\u000a\u000a","name":"Tgkill"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Time!\">Time</a></h2>\u000a<code>func Time(t *Time_t) (tt Time_t, errno int)</code>\u000a\u000a","name":"Time"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Times!\">Times</a></h2>\u000a<code>func Times(tms *Tms) (ticks uintptr, errno int)</code>\u000a\u000a","name":"Times"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:TimespecToNsec!\">TimespecToNsec</a></h2>\u000a<code>func TimespecToNsec(ts Timespec) int64</code>\u000a\u000a","name":"TimespecToNsec"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:TimevalToNsec!\">TimevalToNsec</a></h2>\u000a<code>func TimevalToNsec(tv Timeval) int64</code>\u000a\u000a","name":"TimevalToNsec"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Truncate!\">Truncate</a></h2>\u000a<code>func Truncate(path string, length int64) (errno int)</code>\u000a\u000a","name":"Truncate"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Umask!\">Umask</a></h2>\u000a<code>func Umask(mask int) (oldmask int)</code>\u000a\u000a","name":"Umask"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Uname!\">Uname</a></h2>\u000a<code>func Uname(buf *Utsname) (errno int)</code>\u000a\u000a","name":"Uname"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Unlink!\">Unlink</a></h2>\u000a<code>func Unlink(path string) (errno int)</code>\u000a\u000a","name":"Unlink"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Unlinkat!\">Unlinkat</a></h2>\u000a<code>func Unlinkat(dirfd int, path string) (errno int)</code>\u000a\u000a","name":"Unlinkat"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Unshare!\">Unshare</a></h2>\u000a<code>func Unshare(flags int) (errno int)</code>\u000a\u000a","name":"Unshare"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Ustat!\">Ustat</a></h2>\u000a<code>func Ustat(dev int, ubuf *Ustat_t) (errno int)</code>\u000a\u000a","name":"Ustat"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Utime!\">Utime</a></h2>\u000a<code>func Utime(path string, buf *Utimbuf) (errno int)</code>\u000a\u000a","name":"Utime"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Utimes!\">Utimes</a></h2>\u000a<code>func Utimes(path string, tv []Timeval) (errno int)</code>\u000a<p>\u000asys\u0009utimes(path string, times *[2]Timeval) (errno int)\u000a</p>\u000a\u000a","name":"Utimes"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Wait4!\">Wait4</a></h2>\u000a<code>func Wait4(pid int, wstatus *WaitStatus, options int, rusage *Rusage) (wpid int, errno int)</code>\u000a<p>\u000asys\u0009wait4(pid int, wstatus *_C_int, options int, rusage *Rusage) (wpid int, errno int)\u000a</p>\u000a\u000a","name":"Wait4"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Write!\">Write</a></h2>\u000a<code>func Write(fd int, p []byte) (n int, errno int)</code>\u000a\u000a","name":"Write"}],"consts":[{"html":"\u000a<h2><a class=\"black\" href=\"?c:\">const</a> <a href=\"?c:SYS_RESTART_SYSCALL!\"><em>group</em></a></h2>\u000a<pre>const (\u000a\u0009SYS_RESTART_SYSCALL        = 0\u000a\u0009SYS_EXIT                   = 1\u000a\u0009SYS_FORK                   = 2\u000a\u0009SYS_READ                   = 3\u000a\u0009SYS_WRITE                  = 4\u000a\u0009SYS_OPEN                   = 5\u000a\u0009SYS_CLOSE                  = 6\u000a\u0009SYS_WAITPID                = 7\u000a\u0009SYS_CREAT                  = 8\u000a\u0009SYS_LINK                   = 9\u000a\u0009SYS_UNLINK                 = 10\u000a\u0009SYS_EXECVE                 = 11\u000a\u0009SYS_CHDIR                  = 12\u000a\u0009SYS_TIME                   = 13\u000a\u0009SYS_MKNOD                  = 14\u000a\u0009SYS_CHMOD                  = 15\u000a\u0009SYS_LCHOWN                 = 16\u000a\u0009SYS_BREAK                  = 17\u000a\u0009SYS_OLDSTAT                = 18\u000a\u0009SYS_LSEEK                  = 19\u000a\u0009SYS_GETPID                 = 20\u000a\u0009SYS_MOUNT                  = 21\u000a\u0009SYS_UMOUNT                 = 22\u000a\u0009SYS_SETUID                 = 23\u000a\u0009SYS_GETUID                 = 24\u000a\u0009SYS_STIME                  = 25\u000a\u0009SYS_PTRACE                 = 26\u000a\u0009SYS_ALARM                  = 27\u000a\u0009SYS_OLDFSTAT               = 28\u000a\u0009SYS_PAUSE                  = 29\u000a\u0009SYS_UTIME                  = 30\u000a\u0009SYS_STTY                   = 31\u000a\u0009SYS_GTTY                   = 32\u000a\u0009SYS_ACCESS                 = 33\u000a\u0009SYS_NICE                   = 34\u000a\u0009SYS_FTIME                  = 35\u000a\u0009SYS_SYNC                   = 36\u000a\u0009SYS_KILL                   = 37\u000a\u0009SYS_RENAME                 = 38\u000a\u0009SYS_MKDIR                  = 39\u000a\u0009SYS_RMDIR                  = 40\u000a\u0009SYS_DUP                    = 41\u000a\u0009SYS_PIPE                   = 42\u000a\u0009SYS_TIMES                  = 43\u000a\u0009SYS_PROF                   = 44\u000a\u0009SYS_BRK                    = 45\u000a\u0009SYS_SETGID                 = 46\u000a\u0009SYS_GETGID                 = 47\u000a\u0009SYS_SIGNAL                 = 48\u000a\u0009SYS_GETEUID                = 49\u000a\u0009SYS_GETEGID                = 50\u000a\u0009SYS_ACCT                   = 51\u000a\u0009SYS_UMOUNT2                = 52\u000a\u0009SYS_LOCK                   = 53\u000a\u0009SYS_IOCTL                  = 54\u000a\u0009SYS_FCNTL                  = 55\u000a\u0009SYS_MPX                    = 56\u000a\u0009SYS_SETPGID                = 57\u000a\u0009SYS_ULIMIT                 = 58\u000a\u0009SYS_OLDOLDUNAME            = 59\u000a\u0009SYS_UMASK                  = 60\u000a\u0009SYS_CHROOT                 = 61\u000a\u0009SYS_USTAT                  = 62\u000a\u0009SYS_DUP2                   = 63\u000a\u0009SYS_GETPPID                = 64\u000a\u0009SYS_GETPGRP                = 65\u000a\u0009SYS_SETSID                 = 66\u000a\u0009SYS_SIGACTION              = 67\u000a\u0009SYS_SGETMASK               = 68\u000a\u0009SYS_SSETMASK               = 69\u000a\u0009SYS_SETREUID               = 70\u000a\u0009SYS_SETREGID               = 71\u000a\u0009SYS_SIGSUSPEND             = 72\u000a\u0009SYS_SIGPENDING             = 73\u000a\u0009SYS_SETHOSTNAME            = 74\u000a\u0009SYS_SETRLIMIT              = 75\u000a\u0009SYS_GETRLIMIT              = 76\u000a\u0009SYS_GETRUSAGE              = 77\u000a\u0009SYS_GETTIMEOFDAY           = 78\u000a\u0009SYS_SETTIMEOFDAY           = 79\u000a\u0009SYS_GETGROUPS              = 80\u000a\u0009SYS_SETGROUPS              = 81\u000a\u0009SYS_SELECT                 = 82\u000a\u0009SYS_SYMLINK                = 83\u000a\u0009SYS_OLDLSTAT               = 84\u000a\u0009SYS_READLINK               = 85\u000a\u0009SYS_USELIB                 = 86\u000a\u0009SYS_SWAPON                 = 87\u000a\u0009SYS_REBOOT                 = 88\u000a\u0009SYS_READDIR                = 89\u000a\u0009SYS_MMAP                   = 90\u000a\u0009SYS_MUNMAP                 = 91\u000a\u0009SYS_TRUNCATE               = 92\u000a\u0009SYS_FTRUNCATE              = 93\u000a\u0009SYS_FCHMOD                 = 94\u000a\u0009SYS_FCHOWN                 = 95\u000a\u0009SYS_GETPRIORITY            = 96\u000a\u0009SYS_SETPRIORITY            = 97\u000a\u0009SYS_PROFIL                 = 98\u000a\u0009SYS_STATFS                 = 99\u000a\u0009SYS_FSTATFS                = 100\u000a\u0009SYS_IOPERM                 = 101\u000a\u0009SYS_SOCKETCALL             = 102\u000a\u0009SYS_SYSLOG                 = 103\u000a\u0009SYS_SETITIMER              = 104\u000a\u0009SYS_GETITIMER              = 105\u000a\u0009SYS_STAT                   = 106\u000a\u0009SYS_LSTAT                  = 107\u000a\u0009SYS_FSTAT                  = 108\u000a\u0009SYS_OLDUNAME               = 109\u000a\u0009SYS_IOPL                   = 110\u000a\u0009SYS_VHANGUP                = 111\u000a\u0009SYS_IDLE                   = 112\u000a\u0009SYS_VM86OLD                = 113\u000a\u0009SYS_WAIT4                  = 114\u000a\u0009SYS_SWAPOFF                = 115\u000a\u0009SYS_SYSINFO                = 116\u000a\u0009SYS_IPC                    = 117\u000a\u0009SYS_FSYNC                  = 118\u000a\u0009SYS_SIGRETURN              = 119\u000a\u0009SYS_CLONE                  = 120\u000a\u0009SYS_SETDOMAINNAME          = 121\u000a\u0009SYS_UNAME                  = 122\u000a\u0009SYS_MODIFY_LDT             = 123\u000a\u0009SYS_ADJTIMEX               = 124\u000a\u0009SYS_MPROTECT               = 125\u000a\u0009SYS_SIGPROCMASK            = 126\u000a\u0009SYS_CREATE_MODULE          = 127\u000a\u0009SYS_INIT_MODULE            = 128\u000a\u0009SYS_DELETE_MODULE          = 129\u000a\u0009SYS_GET_KERNEL_SYMS        = 130\u000a\u0009SYS_QUOTACTL               = 131\u000a\u0009SYS_GETPGID                = 132\u000a\u0009SYS_FCHDIR                 = 133\u000a\u0009SYS_BDFLUSH                = 134\u000a\u0009SYS_SYSFS                  = 135\u000a\u0009SYS_PERSONALITY            = 136\u000a\u0009SYS_AFS_SYSCALL            = 137\u000a\u0009SYS_SETFSUID               = 138\u000a\u0009SYS_SETFSGID               = 139\u000a\u0009SYS__LLSEEK                = 140\u000a\u0009SYS_GETDENTS               = 141\u000a\u0009SYS__NEWSELECT             = 142\u000a\u0009SYS_FLOCK                  = 143\u000a\u0009SYS_MSYNC                  = 144\u000a\u0009SYS_READV                  = 145\u000a\u0009SYS_WRITEV                 = 146\u000a\u0009SYS_GETSID                 = 147\u000a\u0009SYS_FDATASYNC              = 148\u000a\u0009SYS__SYSCTL                = 149\u000a\u0009SYS_MLOCK                  = 150\u000a\u0009SYS_MUNLOCK                = 151\u000a\u0009SYS_MLOCKALL               = 152\u000a\u0009SYS_MUNLOCKALL             = 153\u000a\u0009SYS_SCHED_SETPARAM         = 154\u000a\u0009SYS_SCHED_GETPARAM         = 155\u000a\u0009SYS_SCHED_SETSCHEDULER     = 156\u000a\u0009SYS_SCHED_GETSCHEDULER     = 157\u000a\u0009SYS_SCHED_YIELD            = 158\u000a\u0009SYS_SCHED_GET_PRIORITY_MAX = 159\u000a\u0009SYS_SCHED_GET_PRIORITY_MIN = 160\u000a\u0009SYS_SCHED_RR_GET_INTERVAL  = 161\u000a\u0009SYS_NANOSLEEP              = 162\u000a\u0009SYS_MREMAP                 = 163\u000a\u0009SYS_SETRESUID              = 164\u000a\u0009SYS_GETRESUID              = 165\u000a\u0009SYS_VM86                   = 166\u000a\u0009SYS_QUERY_MODULE           = 167\u000a\u0009SYS_POLL                   = 168\u000a\u0009SYS_NFSSERVCTL             = 169\u000a\u0009SYS_SETRESGID              = 170\u000a\u0009SYS_GETRESGID              = 171\u000a\u0009SYS_PRCTL                  = 172\u000a\u0009SYS_RT_SIGRETURN           = 173\u000a\u0009SYS_RT_SIGACTION           = 174\u000a\u0009SYS_RT_SIGPROCMASK         = 175\u000a\u0009SYS_RT_SIGPENDING          = 176\u000a\u0009SYS_RT_SIGTIMEDWAIT        = 177\u000a\u0009SYS_RT_SIGQUEUEINFO        = 178\u000a\u0009SYS_RT_SIGSUSPEND          = 179\u000a\u0009SYS_PREAD64                = 180\u000a\u0009SYS_PWRITE64               = 181\u000a\u0009SYS_CHOWN                  = 182\u000a\u0009SYS_GETCWD                 = 183\u000a\u0009SYS_CAPGET                 = 184\u000a\u0009SYS_CAPSET                 = 185\u000a\u0009SYS_SIGALTSTACK            = 186\u000a\u0009SYS_SENDFILE               = 187\u000a\u0009SYS_GETPMSG                = 188\u000a\u0009SYS_PUTPMSG                = 189\u000a\u0009SYS_VFORK                  = 190\u000a\u0009SYS_UGETRLIMIT             = 191\u000a\u0009SYS_MMAP2                  = 192\u000a\u0009SYS_TRUNCATE64             = 193\u000a\u0009SYS_FTRUNCATE64            = 194\u000a\u0009SYS_STAT64                 = 195\u000a\u0009SYS_LSTAT64                = 196\u000a\u0009SYS_FSTAT64                = 197\u000a\u0009SYS_LCHOWN32               = 198\u000a\u0009SYS_GETUID32               = 199\u000a\u0009SYS_GETGID32               = 200\u000a\u0009SYS_GETEUID32              = 201\u000a\u0009SYS_GETEGID32              = 202\u000a\u0009SYS_SETREUID32             = 203\u000a\u0009SYS_SETREGID32             = 204\u000a\u0009SYS_GETGROUPS32            = 205\u000a\u0009SYS_SETGROUPS32            = 206\u000a\u0009SYS_FCHOWN32               = 207\u000a\u0009SYS_SETRESUID32            = 208\u000a\u0009SYS_GETRESUID32            = 209\u000a\u0009SYS_SETRESGID32            = 210\u000a\u0009SYS_GETRESGID32            = 211\u000a\u0009SYS_CHOWN32                = 212\u000a\u0009SYS_SETUID32               = 213\u000a\u0009SYS_SETGID32               = 214\u000a\u0009SYS_SETFSUID32             = 215\u000a\u0009SYS_SETFSGID32             = 216\u000a\u0009SYS_PIVOT_ROOT             = 217\u000a\u0009SYS_MINCORE                = 218\u000a\u0009SYS_MADVISE                = 219\u000a\u0009SYS_MADVISE1               = 219\u000a\u0009SYS_GETDENTS64             = 220\u000a\u0009SYS_FCNTL64                = 221\u000a\u0009SYS_GETTID                 = 224\u000a\u0009SYS_READAHEAD              = 225\u000a\u0009SYS_SETXATTR               = 226\u000a\u0009SYS_LSETXATTR              = 227\u000a\u0009SYS_FSETXATTR              = 228\u000a\u0009SYS_GETXATTR               = 229\u000a\u0009SYS_LGETXATTR              = 230\u000a\u0009SYS_FGETXATTR              = 231\u000a\u0009SYS_LISTXATTR              = 232\u000a\u0009SYS_LLISTXATTR             = 233\u000a\u0009SYS_FLISTXATTR             = 234\u000a\u0009SYS_REMOVEXATTR            = 235\u000a\u0009SYS_LREMOVEXATTR           = 236\u000a\u0009SYS_FREMOVEXATTR           = 237\u000a\u0009SYS_TKILL                  = 238\u000a\u0009SYS_SENDFILE64             = 239\u000a\u0009SYS_FUTEX                  = 240\u000a\u0009SYS_SCHED_SETAFFINITY      = 241\u000a\u0009SYS_SCHED_GETAFFINITY      = 242\u000a\u0009SYS_SET_THREAD_AREA        = 243\u000a\u0009SYS_GET_THREAD_AREA        = 244\u000a\u0009SYS_IO_SETUP               = 245\u000a\u0009SYS_IO_DESTROY             = 246\u000a\u0009SYS_IO_GETEVENTS           = 247\u000a\u0009SYS_IO_SUBMIT              = 248\u000a\u0009SYS_IO_CANCEL              = 249\u000a\u0009SYS_FADVISE64              = 250\u000a\u0009SYS_EXIT_GROUP             = 252\u000a\u0009SYS_LOOKUP_DCOOKIE         = 253\u000a\u0009SYS_EPOLL_CREATE           = 254\u000a\u0009SYS_EPOLL_CTL              = 255\u000a\u0009SYS_EPOLL_WAIT             = 256\u000a\u0009SYS_REMAP_FILE_PAGES       = 257\u000a\u0009SYS_SET_TID_ADDRESS        = 258\u000a\u0009SYS_TIMER_CREATE           = 259\u000a\u0009SYS_STATFS64               = 268\u000a\u0009SYS_FSTATFS64              = 269\u000a\u0009SYS_TGKILL                 = 270\u000a\u0009SYS_UTIMES                 = 271\u000a\u0009SYS_FADVISE64_64           = 272\u000a\u0009SYS_VSERVER                = 273\u000a\u0009SYS_MBIND                  = 274\u000a\u0009SYS_GET_MEMPOLICY          = 275\u000a\u0009SYS_SET_MEMPOLICY          = 276\u000a\u0009SYS_MQ_OPEN                = 277\u000a\u0009SYS_KEXEC_LOAD             = 283\u000a\u0009SYS_WAITID                 = 284\u000a\u0009SYS_ADD_KEY                = 286\u000a\u0009SYS_REQUEST_KEY            = 287\u000a\u0009SYS_KEYCTL                 = 288\u000a\u0009SYS_IOPRIO_SET             = 289\u000a\u0009SYS_IOPRIO_GET             = 290\u000a\u0009SYS_INOTIFY_INIT           = 291\u000a\u0009SYS_INOTIFY_ADD_WATCH      = 292\u000a\u0009SYS_INOTIFY_RM_WATCH       = 293\u000a\u0009SYS_MIGRATE_PAGES          = 294\u000a\u0009SYS_OPENAT                 = 295\u000a\u0009SYS_MKDIRAT                = 296\u000a\u0009SYS_MKNODAT                = 297\u000a\u0009SYS_FCHOWNAT               = 298\u000a\u0009SYS_FUTIMESAT              = 299\u000a\u0009SYS_FSTATAT64              = 300\u000a\u0009SYS_UNLINKAT               = 301\u000a\u0009SYS_RENAMEAT               = 302\u000a\u0009SYS_LINKAT                 = 303\u000a\u0009SYS_SYMLINKAT              = 304\u000a\u0009SYS_READLINKAT             = 305\u000a\u0009SYS_FCHMODAT               = 306\u000a\u0009SYS_FACCESSAT              = 307\u000a\u0009SYS_PSELECT6               = 308\u000a\u0009SYS_PPOLL                  = 309\u000a\u0009SYS_UNSHARE                = 310\u000a\u0009SYS_SET_ROBUST_LIST        = 311\u000a\u0009SYS_GET_ROBUST_LIST        = 312\u000a\u0009SYS_SPLICE                 = 313\u000a\u0009SYS_SYNC_FILE_RANGE        = 314\u000a\u0009SYS_TEE                    = 315\u000a\u0009SYS_VMSPLICE               = 316\u000a\u0009SYS_MOVE_PAGES             = 317\u000a\u0009SYS_GETCPU                 = 318\u000a\u0009SYS_EPOLL_PWAIT            = 319\u000a\u0009SYS_UTIMENSAT              = 320\u000a\u0009SYS_SIGNALFD               = 321\u000a\u0009SYS_TIMERFD_CREATE         = 322\u000a\u0009SYS_EVENTFD                = 323\u000a\u0009SYS_FALLOCATE              = 324\u000a\u0009SYS_TIMERFD_SETTIME        = 325\u000a\u0009SYS_TIMERFD_GETTIME        = 326\u000a\u0009SYS_SIGNALFD4              = 327\u000a\u0009SYS_EVENTFD2               = 328\u000a\u0009SYS_EPOLL_CREATE1          = 329\u000a\u0009SYS_DUP3                   = 330\u000a\u0009SYS_PIPE2                  = 331\u000a\u0009SYS_INOTIFY_INIT1          = 332\u000a\u0009SYS_PREADV                 = 333\u000a\u0009SYS_PWRITEV                = 334\u000a\u0009SYS_RT_TGSIGQUEUEINFO      = 335\u000a\u0009SYS_PERF_EVENT_OPEN        = 336\u000a)</pre>\u000a\u000a","names":["SYS_RESTART_SYSCALL","SYS_EXIT","SYS_FORK","SYS_READ","SYS_WRITE","SYS_OPEN","SYS_CLOSE","SYS_WAITPID","SYS_CREAT","SYS_LINK","SYS_UNLINK","SYS_EXECVE","SYS_CHDIR","SYS_TIME","SYS_MKNOD","SYS_CHMOD","SYS_LCHOWN","SYS_BREAK","SYS_OLDSTAT","SYS_LSEEK","SYS_GETPID","SYS_MOUNT","SYS_UMOUNT","SYS_SETUID","SYS_GETUID","SYS_STIME","SYS_PTRACE","SYS_ALARM","SYS_OLDFSTAT","SYS_PAUSE","SYS_UTIME","SYS_STTY","SYS_GTTY","SYS_ACCESS","SYS_NICE","SYS_FTIME","SYS_SYNC","SYS_KILL","SYS_RENAME","SYS_MKDIR","SYS_RMDIR","SYS_DUP","SYS_PIPE","SYS_TIMES","SYS_PROF","SYS_BRK","SYS_SETGID","SYS_GETGID","SYS_SIGNAL","SYS_GETEUID","SYS_GETEGID","SYS_ACCT","SYS_UMOUNT2","SYS_LOCK","SYS_IOCTL","SYS_FCNTL","SYS_MPX","SYS_SETPGID","SYS_ULIMIT","SYS_OLDOLDUNAME","SYS_UMASK","SYS_CHROOT","SYS_USTAT","SYS_DUP2","SYS_GETPPID","SYS_GETPGRP","SYS_SETSID","SYS_SIGACTION","SYS_SGETMASK","SYS_SSETMASK","SYS_SETREUID","SYS_SETREGID","SYS_SIGSUSPEND","SYS_SIGPENDING","SYS_SETHOSTNAME","SYS_SETRLIMIT","SYS_GETRLIMIT","SYS_GETRUSAGE","SYS_GETTIMEOFDAY","SYS_SETTIMEOFDAY","SYS_GETGROUPS","SYS_SETGROUPS","SYS_SELECT","SYS_SYMLINK","SYS_OLDLSTAT","SYS_READLINK","SYS_USELIB","SYS_SWAPON","SYS_REBOOT","SYS_READDIR","SYS_MMAP","SYS_MUNMAP","SYS_TRUNCATE","SYS_FTRUNCATE","SYS_FCHMOD","SYS_FCHOWN","SYS_GETPRIORITY","SYS_SETPRIORITY","SYS_PROFIL","SYS_STATFS","SYS_FSTATFS","SYS_IOPERM","SYS_SOCKETCALL","SYS_SYSLOG","SYS_SETITIMER","SYS_GETITIMER","SYS_STAT","SYS_LSTAT","SYS_FSTAT","SYS_OLDUNAME","SYS_IOPL","SYS_VHANGUP","SYS_IDLE","SYS_VM86OLD","SYS_WAIT4","SYS_SWAPOFF","SYS_SYSINFO","SYS_IPC","SYS_FSYNC","SYS_SIGRETURN","SYS_CLONE","SYS_SETDOMAINNAME","SYS_UNAME","SYS_MODIFY_LDT","SYS_ADJTIMEX","SYS_MPROTECT","SYS_SIGPROCMASK","SYS_CREATE_MODULE","SYS_INIT_MODULE","SYS_DELETE_MODULE","SYS_GET_KERNEL_SYMS","SYS_QUOTACTL","SYS_GETPGID","SYS_FCHDIR","SYS_BDFLUSH","SYS_SYSFS","SYS_PERSONALITY","SYS_AFS_SYSCALL","SYS_SETFSUID","SYS_SETFSGID","SYS__LLSEEK","SYS_GETDENTS","SYS__NEWSELECT","SYS_FLOCK","SYS_MSYNC","SYS_READV","SYS_WRITEV","SYS_GETSID","SYS_FDATASYNC","SYS__SYSCTL","SYS_MLOCK","SYS_MUNLOCK","SYS_MLOCKALL","SYS_MUNLOCKALL","SYS_SCHED_SETPARAM","SYS_SCHED_GETPARAM","SYS_SCHED_SETSCHEDULER","SYS_SCHED_GETSCHEDULER","SYS_SCHED_YIELD","SYS_SCHED_GET_PRIORITY_MAX","SYS_SCHED_GET_PRIORITY_MIN","SYS_SCHED_RR_GET_INTERVAL","SYS_NANOSLEEP","SYS_MREMAP","SYS_SETRESUID","SYS_GETRESUID","SYS_VM86","SYS_QUERY_MODULE","SYS_POLL","SYS_NFSSERVCTL","SYS_SETRESGID","SYS_GETRESGID","SYS_PRCTL","SYS_RT_SIGRETURN","SYS_RT_SIGACTION","SYS_RT_SIGPROCMASK","SYS_RT_SIGPENDING","SYS_RT_SIGTIMEDWAIT","SYS_RT_SIGQUEUEINFO","SYS_RT_SIGSUSPEND","SYS_PREAD64","SYS_PWRITE64","SYS_CHOWN","SYS_GETCWD","SYS_CAPGET","SYS_CAPSET","SYS_SIGALTSTACK","SYS_SENDFILE","SYS_GETPMSG","SYS_PUTPMSG","SYS_VFORK","SYS_UGETRLIMIT","SYS_MMAP2","SYS_TRUNCATE64","SYS_FTRUNCATE64","SYS_STAT64","SYS_LSTAT64","SYS_FSTAT64","SYS_LCHOWN32","SYS_GETUID32","SYS_GETGID32","SYS_GETEUID32","SYS_GETEGID32","SYS_SETREUID32","SYS_SETREGID32","SYS_GETGROUPS32","SYS_SETGROUPS32","SYS_FCHOWN32","SYS_SETRESUID32","SYS_GETRESUID32","SYS_SETRESGID32","SYS_GETRESGID32","SYS_CHOWN32","SYS_SETUID32","SYS_SETGID32","SYS_SETFSUID32","SYS_SETFSGID32","SYS_PIVOT_ROOT","SYS_MINCORE","SYS_MADVISE","SYS_MADVISE1","SYS_GETDENTS64","SYS_FCNTL64","SYS_GETTID","SYS_READAHEAD","SYS_SETXATTR","SYS_LSETXATTR","SYS_FSETXATTR","SYS_GETXATTR","SYS_LGETXATTR","SYS_FGETXATTR","SYS_LISTXATTR","SYS_LLISTXATTR","SYS_FLISTXATTR","SYS_REMOVEXATTR","SYS_LREMOVEXATTR","SYS_FREMOVEXATTR","SYS_TKILL","SYS_SENDFILE64","SYS_FUTEX","SYS_SCHED_SETAFFINITY","SYS_SCHED_GETAFFINITY","SYS_SET_THREAD_AREA","SYS_GET_THREAD_AREA","SYS_IO_SETUP","SYS_IO_DESTROY","SYS_IO_GETEVENTS","SYS_IO_SUBMIT","SYS_IO_CANCEL","SYS_FADVISE64","SYS_EXIT_GROUP","SYS_LOOKUP_DCOOKIE","SYS_EPOLL_CREATE","SYS_EPOLL_CTL","SYS_EPOLL_WAIT","SYS_REMAP_FILE_PAGES","SYS_SET_TID_ADDRESS","SYS_TIMER_CREATE","SYS_STATFS64","SYS_FSTATFS64","SYS_TGKILL","SYS_UTIMES","SYS_FADVISE64_64","SYS_VSERVER","SYS_MBIND","SYS_GET_MEMPOLICY","SYS_SET_MEMPOLICY","SYS_MQ_OPEN","SYS_KEXEC_LOAD","SYS_WAITID","SYS_ADD_KEY","SYS_REQUEST_KEY","SYS_KEYCTL","SYS_IOPRIO_SET","SYS_IOPRIO_GET","SYS_INOTIFY_INIT","SYS_INOTIFY_ADD_WATCH","SYS_INOTIFY_RM_WATCH","SYS_MIGRATE_PAGES","SYS_OPENAT","SYS_MKDIRAT","SYS_MKNODAT","SYS_FCHOWNAT","SYS_FUTIMESAT","SYS_FSTATAT64","SYS_UNLINKAT","SYS_RENAMEAT","SYS_LINKAT","SYS_SYMLINKAT","SYS_READLINKAT","SYS_FCHMODAT","SYS_FACCESSAT","SYS_PSELECT6","SYS_PPOLL","SYS_UNSHARE","SYS_SET_ROBUST_LIST","SYS_GET_ROBUST_LIST","SYS_SPLICE","SYS_SYNC_FILE_RANGE","SYS_TEE","SYS_VMSPLICE","SYS_MOVE_PAGES","SYS_GETCPU","SYS_EPOLL_PWAIT","SYS_UTIMENSAT","SYS_SIGNALFD","SYS_TIMERFD_CREATE","SYS_EVENTFD","SYS_FALLOCATE","SYS_TIMERFD_SETTIME","SYS_TIMERFD_GETTIME","SYS_SIGNALFD4","SYS_EVENTFD2","SYS_EPOLL_CREATE1","SYS_DUP3","SYS_PIPE2","SYS_INOTIFY_INIT1","SYS_PREADV","SYS_PWRITEV","SYS_RT_TGSIGQUEUEINFO","SYS_PERF_EVENT_OPEN"],"type":""},{"html":"\u000a<h2><a class=\"black\" href=\"?c:\">const</a> <a href=\"?c:OS!\">OS</a></h2>\u000a<pre>const OS = &#34;linux&#34;</pre>\u000a\u000a","names":["OS"],"type":""},{"html":"\u000a<h2><a class=\"black\" href=\"?c:\">const</a> <a href=\"?c:ImplementsGetwd!\">ImplementsGetwd</a></h2>\u000a<pre>const ImplementsGetwd = true</pre>\u000a\u000a","names":["ImplementsGetwd"],"type":""},{"html":"\u000a<h2><a class=\"black\" href=\"?c:\">const</a> <a href=\"?c:ARCH!\">ARCH</a></h2>\u000a<pre>const ARCH = &#34;386&#34;</pre>\u000a\u000a","names":["ARCH"],"type":""},{"html":"\u000a<h2><a class=\"black\" href=\"?c:\">const</a> <a href=\"?c:AF_APPLETALK!\"><em>group</em></a></h2>\u000a<pre>const (\u000a\u0009AF_APPLETALK                     = 0x5\u000a\u0009AF_ASH                           = 0x12\u000a\u0009AF_ATMPVC                        = 0x8\u000a\u0009AF_ATMSVC                        = 0x14\u000a\u0009AF_AX25                          = 0x3\u000a\u0009AF_BLUETOOTH                     = 0x1f\u000a\u0009AF_BRIDGE                        = 0x7\u000a\u0009AF_CAN                           = 0x1d\u000a\u0009AF_DECnet                        = 0xc\u000a\u0009AF_ECONET                        = 0x13\u000a\u0009AF_FILE                          = 0x1\u000a\u0009AF_IEEE802154                    = 0x24\u000a\u0009AF_INET                          = 0x2\u000a\u0009AF_INET6                         = 0xa\u000a\u0009AF_IPX                           = 0x4\u000a\u0009AF_IRDA                          = 0x17\u000a\u0009AF_ISDN                          = 0x22\u000a\u0009AF_IUCV                          = 0x20\u000a\u0009AF_KEY                           = 0xf\u000a\u0009AF_LLC                           = 0x1a\u000a\u0009AF_LOCAL                         = 0x1\u000a\u0009AF_MAX                           = 0x25\u000a\u0009AF_NETBEUI                       = 0xd\u000a\u0009AF_NETLINK                       = 0x10\u000a\u0009AF_NETROM                        = 0x6\u000a\u0009AF_PACKET                        = 0x11\u000a\u0009AF_PHONET                        = 0x23\u000a\u0009AF_PPPOX                         = 0x18\u000a\u0009AF_RDS                           = 0x15\u000a\u0009AF_ROSE                          = 0xb\u000a\u0009AF_ROUTE                         = 0x10\u000a\u0009AF_RXRPC                         = 0x21\u000a\u0009AF_SECURITY                      = 0xe\u000a\u0009AF_SNA                           = 0x16\u000a\u0009AF_TIPC                          = 0x1e\u000a\u0009AF_UNIX                          = 0x1\u000a\u0009AF_UNSPEC                        = 0\u000a\u0009AF_WANPIPE                       = 0x19\u000a\u0009AF_X25                           = 0x9\u000a\u0009E2BIG                            = 0x7\u000a\u0009EACCES                           = 0xd\u000a\u0009EADDRINUSE                       = 0x62\u000a\u0009EADDRNOTAVAIL                    = 0x63\u000a\u0009EADV                             = 0x44\u000a\u0009EAFNOSUPPORT                     = 0x61\u000a\u0009EAGAIN                           = 0xb\u000a\u0009EALREADY                         = 0x72\u000a\u0009EBADE                            = 0x34\u000a\u0009EBADF                            = 0x9\u000a\u0009EBADFD                           = 0x4d\u000a\u0009EBADMSG                          = 0x4a\u000a\u0009EBADR                            = 0x35\u000a\u0009EBADRQC                          = 0x38\u000a\u0009EBADSLT                          = 0x39\u000a\u0009EBFONT                           = 0x3b\u000a\u0009EBUSY                            = 0x10\u000a\u0009ECANCELED                        = 0x7d\u000a\u0009ECHILD                           = 0xa\u000a\u0009ECHRNG                           = 0x2c\u000a\u0009ECOMM                            = 0x46\u000a\u0009ECONNABORTED                     = 0x67\u000a\u0009ECONNREFUSED                     = 0x6f\u000a\u0009ECONNRESET                       = 0x68\u000a\u0009EDEADLK                          = 0x23\u000a\u0009EDEADLOCK                        = 0x23\u000a\u0009EDESTADDRREQ                     = 0x59\u000a\u0009EDOM                             = 0x21\u000a\u0009EDOTDOT                          = 0x49\u000a\u0009EDQUOT                           = 0x7a\u000a\u0009EEXIST                           = 0x11\u000a\u0009EFAULT                           = 0xe\u000a\u0009EFBIG                            = 0x1b\u000a\u0009EHOSTDOWN                        = 0x70\u000a\u0009EHOSTUNREACH                     = 0x71\u000a\u0009EIDRM                            = 0x2b\u000a\u0009EILSEQ                           = 0x54\u000a\u0009EINPROGRESS                      = 0x73\u000a\u0009EINTR                            = 0x4\u000a\u0009EINVAL                           = 0x16\u000a\u0009EIO                              = 0x5\u000a\u0009EISCONN                          = 0x6a\u000a\u0009EISDIR                           = 0x15\u000a\u0009EISNAM                           = 0x78\u000a\u0009EKEYEXPIRED                      = 0x7f\u000a\u0009EKEYREJECTED                     = 0x81\u000a\u0009EKEYREVOKED                      = 0x80\u000a\u0009EL2HLT                           = 0x33\u000a\u0009EL2NSYNC                         = 0x2d\u000a\u0009EL3HLT                           = 0x2e\u000a\u0009EL3RST                           = 0x2f\u000a\u0009ELIBACC                          = 0x4f\u000a\u0009ELIBBAD                          = 0x50\u000a\u0009ELIBEXEC                         = 0x53\u000a\u0009ELIBMAX                          = 0x52\u000a\u0009ELIBSCN                          = 0x51\u000a\u0009ELNRNG                           = 0x30\u000a\u0009ELOOP                            = 0x28\u000a\u0009EMEDIUMTYPE                      = 0x7c\u000a\u0009EMFILE                           = 0x18\u000a\u0009EMLINK                           = 0x1f\u000a\u0009EMSGSIZE                         = 0x5a\u000a\u0009EMULTIHOP                        = 0x48\u000a\u0009ENAMETOOLONG                     = 0x24\u000a\u0009ENAVAIL                          = 0x77\u000a\u0009ENETDOWN                         = 0x64\u000a\u0009ENETRESET                        = 0x66\u000a\u0009ENETUNREACH                      = 0x65\u000a\u0009ENFILE                           = 0x17\u000a\u0009ENOANO                           = 0x37\u000a\u0009ENOBUFS                          = 0x69\u000a\u0009ENOCSI                           = 0x32\u000a\u0009ENODATA                          = 0x3d\u000a\u0009ENODEV                           = 0x13\u000a\u0009ENOENT                           = 0x2\u000a\u0009ENOEXEC                          = 0x8\u000a\u0009ENOKEY                           = 0x7e\u000a\u0009ENOLCK                           = 0x25\u000a\u0009ENOLINK                          = 0x43\u000a\u0009ENOMEDIUM                        = 0x7b\u000a\u0009ENOMEM                           = 0xc\u000a\u0009ENOMSG                           = 0x2a\u000a\u0009ENONET                           = 0x40\u000a\u0009ENOPKG                           = 0x41\u000a\u0009ENOPROTOOPT                      = 0x5c\u000a\u0009ENOSPC                           = 0x1c\u000a\u0009ENOSR                            = 0x3f\u000a\u0009ENOSTR                           = 0x3c\u000a\u0009ENOSYS                           = 0x26\u000a\u0009ENOTBLK                          = 0xf\u000a\u0009ENOTCONN                         = 0x6b\u000a\u0009ENOTDIR                          = 0x14\u000a\u0009ENOTEMPTY                        = 0x27\u000a\u0009ENOTNAM                          = 0x76\u000a\u0009ENOTRECOVERABLE                  = 0x83\u000a\u0009ENOTSOCK                         = 0x58\u000a\u0009ENOTSUP                          = 0x5f\u000a\u0009ENOTTY                           = 0x19\u000a\u0009ENOTUNIQ                         = 0x4c\u000a\u0009ENXIO                            = 0x6\u000a\u0009EOPNOTSUPP                       = 0x5f\u000a\u0009EOVERFLOW                        = 0x4b\u000a\u0009EOWNERDEAD                       = 0x82\u000a\u0009EPERM                            = 0x1\u000a\u0009EPFNOSUPPORT                     = 0x60\u000a\u0009EPIPE                            = 0x20\u000a\u0009EPOLLERR                         = 0x8\u000a\u0009EPOLLET                          = -0x80000000\u000a\u0009EPOLLHUP                         = 0x10\u000a\u0009EPOLLIN                          = 0x1\u000a\u0009EPOLLMSG                         = 0x400\u000a\u0009EPOLLONESHOT                     = 0x40000000\u000a\u0009EPOLLOUT                         = 0x4\u000a\u0009EPOLLPRI                         = 0x2\u000a\u0009EPOLLRDBAND                      = 0x80\u000a\u0009EPOLLRDHUP                       = 0x2000\u000a\u0009EPOLLRDNORM                      = 0x40\u000a\u0009EPOLLWRBAND                      = 0x200\u000a\u0009EPOLLWRNORM                      = 0x100\u000a\u0009EPOLL_CLOEXEC                    = 0x80000\u000a\u0009EPOLL_CTL_ADD                    = 0x1\u000a\u0009EPOLL_CTL_DEL                    = 0x2\u000a\u0009EPOLL_CTL_MOD                    = 0x3\u000a\u0009EPOLL_NONBLOCK                   = 0x800\u000a\u0009EPROTO                           = 0x47\u000a\u0009EPROTONOSUPPORT                  = 0x5d\u000a\u0009EPROTOTYPE                       = 0x5b\u000a\u0009ERANGE                           = 0x22\u000a\u0009EREMCHG                          = 0x4e\u000a\u0009EREMOTE                          = 0x42\u000a\u0009EREMOTEIO                        = 0x79\u000a\u0009ERESTART                         = 0x55\u000a\u0009ERFKILL                          = 0x84\u000a\u0009EROFS                            = 0x1e\u000a\u0009ESHUTDOWN                        = 0x6c\u000a\u0009ESOCKTNOSUPPORT                  = 0x5e\u000a\u0009ESPIPE                           = 0x1d\u000a\u0009ESRCH                            = 0x3\u000a\u0009ESRMNT                           = 0x45\u000a\u0009ESTALE                           = 0x74\u000a\u0009ESTRPIPE                         = 0x56\u000a\u0009ETIME                            = 0x3e\u000a\u0009ETIMEDOUT                        = 0x6e\u000a\u0009ETOOMANYREFS                     = 0x6d\u000a\u0009ETXTBSY                          = 0x1a\u000a\u0009EUCLEAN                          = 0x75\u000a\u0009EUNATCH                          = 0x31\u000a\u0009EUSERS                           = 0x57\u000a\u0009EWOULDBLOCK                      = 0xb\u000a\u0009EXDEV                            = 0x12\u000a\u0009EXFULL                           = 0x36\u000a\u0009FD_CLOEXEC                       = 0x1\u000a\u0009FD_SETSIZE                       = 0x400\u000a\u0009F_DUPFD                          = 0\u000a\u0009F_DUPFD_CLOEXEC                  = 0x406\u000a\u0009F_EXLCK                          = 0x4\u000a\u0009F_GETFD                          = 0x1\u000a\u0009F_GETFL                          = 0x3\u000a\u0009F_GETLEASE                       = 0x401\u000a\u0009F_GETLK                          = 0xc\u000a\u0009F_GETLK64                        = 0xc\u000a\u0009F_GETOWN                         = 0x9\u000a\u0009F_GETOWN_EX                      = 0x10\u000a\u0009F_GETSIG                         = 0xb\u000a\u0009F_LOCK                           = 0x1\u000a\u0009F_NOTIFY                         = 0x402\u000a\u0009F_OK                             = 0\u000a\u0009F_RDLCK                          = 0\u000a\u0009F_SETFD                          = 0x2\u000a\u0009F_SETFL                          = 0x4\u000a\u0009F_SETLEASE                       = 0x400\u000a\u0009F_SETLK                          = 0xd\u000a\u0009F_SETLK64                        = 0xd\u000a\u0009F_SETLKW                         = 0xe\u000a\u0009F_SETLKW64                       = 0xe\u000a\u0009F_SETOWN                         = 0x8\u000a\u0009F_SETOWN_EX                      = 0xf\u000a\u0009F_SETSIG                         = 0xa\u000a\u0009F_SHLCK                          = 0x8\u000a\u0009F_TEST                           = 0x3\u000a\u0009F_TLOCK                          = 0x2\u000a\u0009F_ULOCK                          = 0\u000a\u0009F_UNLCK                          = 0x2\u000a\u0009F_WRLCK                          = 0x1\u000a\u0009IN_ACCESS                        = 0x1\u000a\u0009IN_ALL_EVENTS                    = 0xfff\u000a\u0009IN_ATTRIB                        = 0x4\u000a\u0009IN_CLASSA_HOST                   = 0xffffff\u000a\u0009IN_CLASSA_MAX                    = 0x80\u000a\u0009IN_CLASSA_NET                    = 0xff000000\u000a\u0009IN_CLASSA_NSHIFT                 = 0x18\u000a\u0009IN_CLASSB_HOST                   = 0xffff\u000a\u0009IN_CLASSB_MAX                    = 0x10000\u000a\u0009IN_CLASSB_NET                    = 0xffff0000\u000a\u0009IN_CLASSB_NSHIFT                 = 0x10\u000a\u0009IN_CLASSC_HOST                   = 0xff\u000a\u0009IN_CLASSC_NET                    = 0xffffff00\u000a\u0009IN_CLASSC_NSHIFT                 = 0x8\u000a\u0009IN_CLOEXEC                       = 0x80000\u000a\u0009IN_CLOSE                         = 0x18\u000a\u0009IN_CLOSE_NOWRITE                 = 0x10\u000a\u0009IN_CLOSE_WRITE                   = 0x8\u000a\u0009IN_CREATE                        = 0x100\u000a\u0009IN_DELETE                        = 0x200\u000a\u0009IN_DELETE_SELF                   = 0x400\u000a\u0009IN_DONT_FOLLOW                   = 0x2000000\u000a\u0009IN_IGNORED                       = 0x8000\u000a\u0009IN_ISDIR                         = 0x40000000\u000a\u0009IN_LOOPBACKNET                   = 0x7f\u000a\u0009IN_MASK_ADD                      = 0x20000000\u000a\u0009IN_MODIFY                        = 0x2\u000a\u0009IN_MOVE                          = 0xc0\u000a\u0009IN_MOVED_FROM                    = 0x40\u000a\u0009IN_MOVED_TO                      = 0x80\u000a\u0009IN_MOVE_SELF                     = 0x800\u000a\u0009IN_NONBLOCK                      = 0x800\u000a\u0009IN_ONESHOT                       = 0x80000000\u000a\u0009IN_ONLYDIR                       = 0x1000000\u000a\u0009IN_OPEN                          = 0x20\u000a\u0009IN_Q_OVERFLOW                    = 0x4000\u000a\u0009IN_UNMOUNT                       = 0x2000\u000a\u0009IPPROTO_AH                       = 0x33\u000a\u0009IPPROTO_COMP                     = 0x6c\u000a\u0009IPPROTO_DCCP                     = 0x21\u000a\u0009IPPROTO_DSTOPTS                  = 0x3c\u000a\u0009IPPROTO_EGP                      = 0x8\u000a\u0009IPPROTO_ENCAP                    = 0x62\u000a\u0009IPPROTO_ESP                      = 0x32\u000a\u0009IPPROTO_FRAGMENT                 = 0x2c\u000a\u0009IPPROTO_GRE                      = 0x2f\u000a\u0009IPPROTO_HOPOPTS                  = 0\u000a\u0009IPPROTO_ICMP                     = 0x1\u000a\u0009IPPROTO_ICMPV6                   = 0x3a\u000a\u0009IPPROTO_IDP                      = 0x16\u000a\u0009IPPROTO_IGMP                     = 0x2\u000a\u0009IPPROTO_IP                       = 0\u000a\u0009IPPROTO_IPIP                     = 0x4\u000a\u0009IPPROTO_IPV6                     = 0x29\u000a\u0009IPPROTO_MTP                      = 0x5c\u000a\u0009IPPROTO_NONE                     = 0x3b\u000a\u0009IPPROTO_PIM                      = 0x67\u000a\u0009IPPROTO_PUP                      = 0xc\u000a\u0009IPPROTO_RAW                      = 0xff\u000a\u0009IPPROTO_ROUTING                  = 0x2b\u000a\u0009IPPROTO_RSVP                     = 0x2e\u000a\u0009IPPROTO_SCTP                     = 0x84\u000a\u0009IPPROTO_TCP                      = 0x6\u000a\u0009IPPROTO_TP                       = 0x1d\u000a\u0009IPPROTO_UDP                      = 0x11\u000a\u0009IPPROTO_UDPLITE                  = 0x88\u000a\u0009IPV6_2292DSTOPTS                 = 0x4\u000a\u0009IPV6_2292HOPLIMIT                = 0x8\u000a\u0009IPV6_2292HOPOPTS                 = 0x3\u000a\u0009IPV6_2292PKTINFO                 = 0x2\u000a\u0009IPV6_2292PKTOPTIONS              = 0x6\u000a\u0009IPV6_2292RTHDR                   = 0x5\u000a\u0009IPV6_ADDRFORM                    = 0x1\u000a\u0009IPV6_ADD_MEMBERSHIP              = 0x14\u000a\u0009IPV6_AUTHHDR                     = 0xa\u000a\u0009IPV6_CHECKSUM                    = 0x7\u000a\u0009IPV6_DROP_MEMBERSHIP             = 0x15\u000a\u0009IPV6_DSTOPTS                     = 0x3b\u000a\u0009IPV6_HOPLIMIT                    = 0x34\u000a\u0009IPV6_HOPOPTS                     = 0x36\u000a\u0009IPV6_IPSEC_POLICY                = 0x22\u000a\u0009IPV6_JOIN_ANYCAST                = 0x1b\u000a\u0009IPV6_JOIN_GROUP                  = 0x14\u000a\u0009IPV6_LEAVE_ANYCAST               = 0x1c\u000a\u0009IPV6_LEAVE_GROUP                 = 0x15\u000a\u0009IPV6_MTU                         = 0x18\u000a\u0009IPV6_MTU_DISCOVER                = 0x17\u000a\u0009IPV6_MULTICAST_HOPS              = 0x12\u000a\u0009IPV6_MULTICAST_IF                = 0x11\u000a\u0009IPV6_MULTICAST_LOOP              = 0x13\u000a\u0009IPV6_NEXTHOP                     = 0x9\u000a\u0009IPV6_PKTINFO                     = 0x32\u000a\u0009IPV6_PMTUDISC_DO                 = 0x2\u000a\u0009IPV6_PMTUDISC_DONT               = 0\u000a\u0009IPV6_PMTUDISC_PROBE              = 0x3\u000a\u0009IPV6_PMTUDISC_WANT               = 0x1\u000a\u0009IPV6_RECVDSTOPTS                 = 0x3a\u000a\u0009IPV6_RECVERR                     = 0x19\u000a\u0009IPV6_RECVHOPLIMIT                = 0x33\u000a\u0009IPV6_RECVHOPOPTS                 = 0x35\u000a\u0009IPV6_RECVPKTINFO                 = 0x31\u000a\u0009IPV6_RECVRTHDR                   = 0x38\u000a\u0009IPV6_RECVTCLASS                  = 0x42\u000a\u0009IPV6_ROUTER_ALERT                = 0x16\u000a\u0009IPV6_RTHDR                       = 0x39\u000a\u0009IPV6_RTHDRDSTOPTS                = 0x37\u000a\u0009IPV6_RTHDR_LOOSE                 = 0\u000a\u0009IPV6_RTHDR_STRICT                = 0x1\u000a\u0009IPV6_RTHDR_TYPE_0                = 0\u000a\u0009IPV6_RXDSTOPTS                   = 0x3b\u000a\u0009IPV6_RXHOPOPTS                   = 0x36\u000a\u0009IPV6_TCLASS                      = 0x43\u000a\u0009IPV6_UNICAST_HOPS                = 0x10\u000a\u0009IPV6_V6ONLY                      = 0x1a\u000a\u0009IPV6_XFRM_POLICY                 = 0x23\u000a\u0009IP_ADD_MEMBERSHIP                = 0x23\u000a\u0009IP_ADD_SOURCE_MEMBERSHIP         = 0x27\u000a\u0009IP_BLOCK_SOURCE                  = 0x26\u000a\u0009IP_DEFAULT_MULTICAST_LOOP        = 0x1\u000a\u0009IP_DEFAULT_MULTICAST_TTL         = 0x1\u000a\u0009IP_DF                            = 0x4000\u000a\u0009IP_DROP_MEMBERSHIP               = 0x24\u000a\u0009IP_DROP_SOURCE_MEMBERSHIP        = 0x28\u000a\u0009IP_HDRINCL                       = 0x3\u000a\u0009IP_MAXPACKET                     = 0xffff\u000a\u0009IP_MAX_MEMBERSHIPS               = 0x14\u000a\u0009IP_MF                            = 0x2000\u000a\u0009IP_MSFILTER                      = 0x29\u000a\u0009IP_MSS                           = 0x240\u000a\u0009IP_MTU_DISCOVER                  = 0xa\u000a\u0009IP_MULTICAST_IF                  = 0x20\u000a\u0009IP_MULTICAST_LOOP                = 0x22\u000a\u0009IP_MULTICAST_TTL                 = 0x21\u000a\u0009IP_OFFMASK                       = 0x1fff\u000a\u0009IP_OPTIONS                       = 0x4\u000a\u0009IP_PKTINFO                       = 0x8\u000a\u0009IP_PKTOPTIONS                    = 0x9\u000a\u0009IP_PMTUDISC                      = 0xa\u000a\u0009IP_PMTUDISC_DO                   = 0x2\u000a\u0009IP_PMTUDISC_DONT                 = 0\u000a\u0009IP_PMTUDISC_PROBE                = 0x3\u000a\u0009IP_PMTUDISC_WANT                 = 0x1\u000a\u0009IP_RECVERR                       = 0xb\u000a\u0009IP_RECVOPTS                      = 0x6\u000a\u0009IP_RECVRETOPTS                   = 0x7\u000a\u0009IP_RECVTOS                       = 0xd\u000a\u0009IP_RECVTTL                       = 0xc\u000a\u0009IP_RETOPTS                       = 0x7\u000a\u0009IP_RF                            = 0x8000\u000a\u0009IP_ROUTER_ALERT                  = 0x5\u000a\u0009IP_TOS                           = 0x1\u000a\u0009IP_TTL                           = 0x2\u000a\u0009IP_UNBLOCK_SOURCE                = 0x25\u000a\u0009NAME_MAX                         = 0xff\u000a\u0009O_ACCMODE                        = 0x3\u000a\u0009O_APPEND                         = 0x400\u000a\u0009O_ASYNC                          = 0x2000\u000a\u0009O_CLOEXEC                        = 0x80000\u000a\u0009O_CREAT                          = 0x40\u000a\u0009O_DIRECT                         = 0x4000\u000a\u0009O_DIRECTORY                      = 0x10000\u000a\u0009O_DSYNC                          = 0x1000\u000a\u0009O_EXCL                           = 0x80\u000a\u0009O_FSYNC                          = 0x1000\u000a\u0009O_LARGEFILE                      = 0x8000\u000a\u0009O_NDELAY                         = 0x800\u000a\u0009O_NOATIME                        = 0x40000\u000a\u0009O_NOCTTY                         = 0x100\u000a\u0009O_NOFOLLOW                       = 0x20000\u000a\u0009O_NONBLOCK                       = 0x800\u000a\u0009O_RDONLY                         = 0\u000a\u0009O_RDWR                           = 0x2\u000a\u0009O_RSYNC                          = 0x1000\u000a\u0009O_SYNC                           = 0x1000\u000a\u0009O_TRUNC                          = 0x200\u000a\u0009O_WRONLY                         = 0x1\u000a\u0009PACKET_ADD_MEMBERSHIP            = 0x1\u000a\u0009PACKET_BROADCAST                 = 0x1\u000a\u0009PACKET_DROP_MEMBERSHIP           = 0x2\u000a\u0009PACKET_FASTROUTE                 = 0x6\u000a\u0009PACKET_HOST                      = 0\u000a\u0009PACKET_LOOPBACK                  = 0x5\u000a\u0009PACKET_MR_ALLMULTI               = 0x2\u000a\u0009PACKET_MR_MULTICAST              = 0\u000a\u0009PACKET_MR_PROMISC                = 0x1\u000a\u0009PACKET_MULTICAST                 = 0x2\u000a\u0009PACKET_OTHERHOST                 = 0x3\u000a\u0009PACKET_OUTGOING                  = 0x4\u000a\u0009PACKET_RECV_OUTPUT               = 0x3\u000a\u0009PACKET_RX_RING                   = 0x5\u000a\u0009PACKET_STATISTICS                = 0x6\u000a\u0009PTRACE_ATTACH                    = 0x10\u000a\u0009PTRACE_BTS_CLEAR                 = 0x2c\u000a\u0009PTRACE_BTS_CONFIG                = 0x28\u000a\u0009PTRACE_BTS_DRAIN                 = 0x2d\u000a\u0009PTRACE_BTS_GET                   = 0x2b\u000a\u0009PTRACE_BTS_O_ALLOC               = 0x8\u000a\u0009PTRACE_BTS_O_SCHED               = 0x2\u000a\u0009PTRACE_BTS_O_SIGNAL              = 0x4\u000a\u0009PTRACE_BTS_O_TRACE               = 0x1\u000a\u0009PTRACE_BTS_SIZE                  = 0x2a\u000a\u0009PTRACE_BTS_STATUS                = 0x29\u000a\u0009PTRACE_CONT                      = 0x7\u000a\u0009PTRACE_DETACH                    = 0x11\u000a\u0009PTRACE_EVENT_CLONE               = 0x3\u000a\u0009PTRACE_EVENT_EXEC                = 0x4\u000a\u0009PTRACE_EVENT_EXIT                = 0x6\u000a\u0009PTRACE_EVENT_FORK                = 0x1\u000a\u0009PTRACE_EVENT_VFORK               = 0x2\u000a\u0009PTRACE_EVENT_VFORK_DONE          = 0x5\u000a\u0009PTRACE_GETEVENTMSG               = 0x4201\u000a\u0009PTRACE_GETFPREGS                 = 0xe\u000a\u0009PTRACE_GETFPXREGS                = 0x12\u000a\u0009PTRACE_GETREGS                   = 0xc\u000a\u0009PTRACE_GETSIGINFO                = 0x4202\u000a\u0009PTRACE_GET_THREAD_AREA           = 0x19\u000a\u0009PTRACE_KILL                      = 0x8\u000a\u0009PTRACE_OLDSETOPTIONS             = 0x15\u000a\u0009PTRACE_O_MASK                    = 0x7f\u000a\u0009PTRACE_O_TRACECLONE              = 0x8\u000a\u0009PTRACE_O_TRACEEXEC               = 0x10\u000a\u0009PTRACE_O_TRACEEXIT               = 0x40\u000a\u0009PTRACE_O_TRACEFORK               = 0x2\u000a\u0009PTRACE_O_TRACESYSGOOD            = 0x1\u000a\u0009PTRACE_O_TRACEVFORK              = 0x4\u000a\u0009PTRACE_O_TRACEVFORKDONE          = 0x20\u000a\u0009PTRACE_PEEKDATA                  = 0x2\u000a\u0009PTRACE_PEEKTEXT                  = 0x1\u000a\u0009PTRACE_PEEKUSR                   = 0x3\u000a\u0009PTRACE_POKEDATA                  = 0x5\u000a\u0009PTRACE_POKETEXT                  = 0x4\u000a\u0009PTRACE_POKEUSR                   = 0x6\u000a\u0009PTRACE_SETFPREGS                 = 0xf\u000a\u0009PTRACE_SETFPXREGS                = 0x13\u000a\u0009PTRACE_SETOPTIONS                = 0x4200\u000a\u0009PTRACE_SETREGS                   = 0xd\u000a\u0009PTRACE_SETSIGINFO                = 0x4203\u000a\u0009PTRACE_SET_THREAD_AREA           = 0x1a\u000a\u0009PTRACE_SINGLEBLOCK               = 0x21\u000a\u0009PTRACE_SINGLESTEP                = 0x9\u000a\u0009PTRACE_SYSCALL                   = 0x18\u000a\u0009PTRACE_SYSEMU                    = 0x1f\u000a\u0009PTRACE_SYSEMU_SINGLESTEP         = 0x20\u000a\u0009PTRACE_TRACEME                   = 0\u000a\u0009SHUT_RD                          = 0\u000a\u0009SHUT_RDWR                        = 0x2\u000a\u0009SHUT_WR                          = 0x1\u000a\u0009SIGABRT                          = 0x6\u000a\u0009SIGALRM                          = 0xe\u000a\u0009SIGBUS                           = 0x7\u000a\u0009SIGCHLD                          = 0x11\u000a\u0009SIGCLD                           = 0x11\u000a\u0009SIGCONT                          = 0x12\u000a\u0009SIGFPE                           = 0x8\u000a\u0009SIGHUP                           = 0x1\u000a\u0009SIGILL                           = 0x4\u000a\u0009SIGINT                           = 0x2\u000a\u0009SIGIO                            = 0x1d\u000a\u0009SIGIOT                           = 0x6\u000a\u0009SIGKILL                          = 0x9\u000a\u0009SIGPIPE                          = 0xd\u000a\u0009SIGPOLL                          = 0x1d\u000a\u0009SIGPROF                          = 0x1b\u000a\u0009SIGPWR                           = 0x1e\u000a\u0009SIGQUIT                          = 0x3\u000a\u0009SIGSEGV                          = 0xb\u000a\u0009SIGSTKFLT                        = 0x10\u000a\u0009SIGSTOP                          = 0x13\u000a\u0009SIGSYS                           = 0x1f\u000a\u0009SIGTERM                          = 0xf\u000a\u0009SIGTRAP                          = 0x5\u000a\u0009SIGTSTP                          = 0x14\u000a\u0009SIGTTIN                          = 0x15\u000a\u0009SIGTTOU                          = 0x16\u000a\u0009SIGUNUSED                        = 0x1f\u000a\u0009SIGURG                           = 0x17\u000a\u0009SIGUSR1                          = 0xa\u000a\u0009SIGUSR2                          = 0xc\u000a\u0009SIGVTALRM                        = 0x1a\u000a\u0009SIGWINCH                         = 0x1c\u000a\u0009SIGXCPU                          = 0x18\u000a\u0009SIGXFSZ                          = 0x19\u000a\u0009SIOCADDDLCI                      = 0x8980\u000a\u0009SIOCADDMULTI                     = 0x8931\u000a\u0009SIOCADDRT                        = 0x890b\u000a\u0009SIOCATMARK                       = 0x8905\u000a\u0009SIOCDARP                         = 0x8953\u000a\u0009SIOCDELDLCI                      = 0x8981\u000a\u0009SIOCDELMULTI                     = 0x8932\u000a\u0009SIOCDELRT                        = 0x890c\u000a\u0009SIOCDEVPRIVATE                   = 0x89f0\u000a\u0009SIOCDIFADDR                      = 0x8936\u000a\u0009SIOCDRARP                        = 0x8960\u000a\u0009SIOCGARP                         = 0x8954\u000a\u0009SIOCGIFADDR                      = 0x8915\u000a\u0009SIOCGIFBR                        = 0x8940\u000a\u0009SIOCGIFBRDADDR                   = 0x8919\u000a\u0009SIOCGIFCONF                      = 0x8912\u000a\u0009SIOCGIFCOUNT                     = 0x8938\u000a\u0009SIOCGIFDSTADDR                   = 0x8917\u000a\u0009SIOCGIFENCAP                     = 0x8925\u000a\u0009SIOCGIFFLAGS                     = 0x8913\u000a\u0009SIOCGIFHWADDR                    = 0x8927\u000a\u0009SIOCGIFINDEX                     = 0x8933\u000a\u0009SIOCGIFMAP                       = 0x8970\u000a\u0009SIOCGIFMEM                       = 0x891f\u000a\u0009SIOCGIFMETRIC                    = 0x891d\u000a\u0009SIOCGIFMTU                       = 0x8921\u000a\u0009SIOCGIFNAME                      = 0x8910\u000a\u0009SIOCGIFNETMASK                   = 0x891b\u000a\u0009SIOCGIFPFLAGS                    = 0x8935\u000a\u0009SIOCGIFSLAVE                     = 0x8929\u000a\u0009SIOCGIFTXQLEN                    = 0x8942\u000a\u0009SIOCGPGRP                        = 0x8904\u000a\u0009SIOCGRARP                        = 0x8961\u000a\u0009SIOCGSTAMP                       = 0x8906\u000a\u0009SIOCGSTAMPNS                     = 0x8907\u000a\u0009SIOCPROTOPRIVATE                 = 0x89e0\u000a\u0009SIOCRTMSG                        = 0x890d\u000a\u0009SIOCSARP                         = 0x8955\u000a\u0009SIOCSIFADDR                      = 0x8916\u000a\u0009SIOCSIFBR                        = 0x8941\u000a\u0009SIOCSIFBRDADDR                   = 0x891a\u000a\u0009SIOCSIFDSTADDR                   = 0x8918\u000a\u0009SIOCSIFENCAP                     = 0x8926\u000a\u0009SIOCSIFFLAGS                     = 0x8914\u000a\u0009SIOCSIFHWADDR                    = 0x8924\u000a\u0009SIOCSIFHWBROADCAST               = 0x8937\u000a\u0009SIOCSIFLINK                      = 0x8911\u000a\u0009SIOCSIFMAP                       = 0x8971\u000a\u0009SIOCSIFMEM                       = 0x8920\u000a\u0009SIOCSIFMETRIC                    = 0x891e\u000a\u0009SIOCSIFMTU                       = 0x8922\u000a\u0009SIOCSIFNAME                      = 0x8923\u000a\u0009SIOCSIFNETMASK                   = 0x891c\u000a\u0009SIOCSIFPFLAGS                    = 0x8934\u000a\u0009SIOCSIFSLAVE                     = 0x8930\u000a\u0009SIOCSIFTXQLEN                    = 0x8943\u000a\u0009SIOCSPGRP                        = 0x8902\u000a\u0009SIOCSRARP                        = 0x8962\u000a\u0009SIOGIFINDEX                      = 0x8933\u000a\u0009SOCK_CLOEXEC                     = 0x80000\u000a\u0009SOCK_DCCP                        = 0x6\u000a\u0009SOCK_DGRAM                       = 0x2\u000a\u0009SOCK_NONBLOCK                    = 0x800\u000a\u0009SOCK_PACKET                      = 0xa\u000a\u0009SOCK_RAW                         = 0x3\u000a\u0009SOCK_RDM                         = 0x4\u000a\u0009SOCK_SEQPACKET                   = 0x5\u000a\u0009SOCK_STREAM                      = 0x1\u000a\u0009SOL_AAL                          = 0x109\u000a\u0009SOL_ATM                          = 0x108\u000a\u0009SOL_DECNET                       = 0x105\u000a\u0009SOL_ICMPV6                       = 0x3a\u000a\u0009SOL_IP                           = 0\u000a\u0009SOL_IPV6                         = 0x29\u000a\u0009SOL_IRDA                         = 0x10a\u000a\u0009SOL_PACKET                       = 0x107\u000a\u0009SOL_RAW                          = 0xff\u000a\u0009SOL_SOCKET                       = 0x1\u000a\u0009SOL_TCP                          = 0x6\u000a\u0009SOL_X25                          = 0x106\u000a\u0009SOMAXCONN                        = 0x80\u000a\u0009SO_ACCEPTCONN                    = 0x1e\u000a\u0009SO_ATTACH_FILTER                 = 0x1a\u000a\u0009SO_BINDTODEVICE                  = 0x19\u000a\u0009SO_BROADCAST                     = 0x6\u000a\u0009SO_BSDCOMPAT                     = 0xe\u000a\u0009SO_DEBUG                         = 0x1\u000a\u0009SO_DETACH_FILTER                 = 0x1b\u000a\u0009SO_DOMAIN                        = 0x27\u000a\u0009SO_DONTROUTE                     = 0x5\u000a\u0009SO_ERROR                         = 0x4\u000a\u0009SO_KEEPALIVE                     = 0x9\u000a\u0009SO_LINGER                        = 0xd\u000a\u0009SO_MARK                          = 0x24\u000a\u0009SO_NO_CHECK                      = 0xb\u000a\u0009SO_OOBINLINE                     = 0xa\u000a\u0009SO_PASSCRED                      = 0x10\u000a\u0009SO_PASSSEC                       = 0x22\u000a\u0009SO_PEERCRED                      = 0x11\u000a\u0009SO_PEERNAME                      = 0x1c\u000a\u0009SO_PEERSEC                       = 0x1f\u000a\u0009SO_PRIORITY                      = 0xc\u000a\u0009SO_PROTOCOL                      = 0x26\u000a\u0009SO_RCVBUF                        = 0x8\u000a\u0009SO_RCVBUFFORCE                   = 0x21\u000a\u0009SO_RCVLOWAT                      = 0x12\u000a\u0009SO_RCVTIMEO                      = 0x14\u000a\u0009SO_REUSEADDR                     = 0x2\u000a\u0009SO_SECURITY_AUTHENTICATION       = 0x16\u000a\u0009SO_SECURITY_ENCRYPTION_NETWORK   = 0x18\u000a\u0009SO_SECURITY_ENCRYPTION_TRANSPORT = 0x17\u000a\u0009SO_SNDBUF                        = 0x7\u000a\u0009SO_SNDBUFFORCE                   = 0x20\u000a\u0009SO_SNDLOWAT                      = 0x13\u000a\u0009SO_SNDTIMEO                      = 0x15\u000a\u0009SO_TIMESTAMP                     = 0x1d\u000a\u0009SO_TIMESTAMPING                  = 0x25\u000a\u0009SO_TIMESTAMPNS                   = 0x23\u000a\u0009SO_TYPE                          = 0x3\u000a\u0009S_BLKSIZE                        = 0x200\u000a\u0009S_IEXEC                          = 0x40\u000a\u0009S_IFBLK                          = 0x6000\u000a\u0009S_IFCHR                          = 0x2000\u000a\u0009S_IFDIR                          = 0x4000\u000a\u0009S_IFIFO                          = 0x1000\u000a\u0009S_IFLNK                          = 0xa000\u000a\u0009S_IFMT                           = 0xf000\u000a\u0009S_IFREG                          = 0x8000\u000a\u0009S_IFSOCK                         = 0xc000\u000a\u0009S_IREAD                          = 0x100\u000a\u0009S_IRGRP                          = 0x20\u000a\u0009S_IROTH                          = 0x4\u000a\u0009S_IRUSR                          = 0x100\u000a\u0009S_IRWXG                          = 0x38\u000a\u0009S_IRWXO                          = 0x7\u000a\u0009S_IRWXU                          = 0x1c0\u000a\u0009S_ISGID                          = 0x400\u000a\u0009S_ISUID                          = 0x800\u000a\u0009S_ISVTX                          = 0x200\u000a\u0009S_IWGRP                          = 0x10\u000a\u0009S_IWOTH                          = 0x2\u000a\u0009S_IWRITE                         = 0x80\u000a\u0009S_IWUSR                          = 0x80\u000a\u0009S_IXGRP                          = 0x8\u000a\u0009S_IXOTH                          = 0x1\u000a\u0009S_IXUSR                          = 0x40\u000a\u0009TCP_CONGESTION                   = 0xd\u000a\u0009TCP_CORK                         = 0x3\u000a\u0009TCP_DEFER_ACCEPT                 = 0x9\u000a\u0009TCP_INFO                         = 0xb\u000a\u0009TCP_KEEPCNT                      = 0x6\u000a\u0009TCP_KEEPIDLE                     = 0x4\u000a\u0009TCP_KEEPINTVL                    = 0x5\u000a\u0009TCP_LINGER2                      = 0x8\u000a\u0009TCP_MAXSEG                       = 0x2\u000a\u0009TCP_MAXWIN                       = 0xffff\u000a\u0009TCP_MAX_WINSHIFT                 = 0xe\u000a\u0009TCP_MD5SIG                       = 0xe\u000a\u0009TCP_MD5SIG_MAXKEYLEN             = 0x50\u000a\u0009TCP_MSS                          = 0x200\u000a\u0009TCP_NODELAY                      = 0x1\u000a\u0009TCP_QUICKACK                     = 0xc\u000a\u0009TCP_SYNCNT                       = 0x7\u000a\u0009TCP_WINDOW_CLAMP                 = 0xa\u000a\u0009WALL                             = 0x40000000\u000a\u0009WCLONE                           = 0x80000000\u000a\u0009WCONTINUED                       = 0x8\u000a\u0009WEXITED                          = 0x4\u000a\u0009WNOHANG                          = 0x1\u000a\u0009WNOTHREAD                        = 0x20000000\u000a\u0009WNOWAIT                          = 0x1000000\u000a\u0009WORDSIZE                         = 0x20\u000a\u0009WSTOPPED                         = 0x2\u000a\u0009WUNTRACED                        = 0x2\u000a)</pre>\u000a<p>\u000aConstants\u000a</p>\u000a\u000a","names":["AF_APPLETALK","AF_ASH","AF_ATMPVC","AF_ATMSVC","AF_AX25","AF_BLUETOOTH","AF_BRIDGE","AF_CAN","AF_DECnet","AF_ECONET","AF_FILE","AF_IEEE802154","AF_INET","AF_INET6","AF_IPX","AF_IRDA","AF_ISDN","AF_IUCV","AF_KEY","AF_LLC","AF_LOCAL","AF_MAX","AF_NETBEUI","AF_NETLINK","AF_NETROM","AF_PACKET","AF_PHONET","AF_PPPOX","AF_RDS","AF_ROSE","AF_ROUTE","AF_RXRPC","AF_SECURITY","AF_SNA","AF_TIPC","AF_UNIX","AF_UNSPEC","AF_WANPIPE","AF_X25","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EADV","EAFNOSUPPORT","EAGAIN","EALREADY","EBADE","EBADF","EBADFD","EBADMSG","EBADR","EBADRQC","EBADSLT","EBFONT","EBUSY","ECANCELED","ECHILD","ECHRNG","ECOMM","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDEADLK","EDEADLOCK","EDESTADDRREQ","EDOM","EDOTDOT","EDQUOT","EEXIST","EFAULT","EFBIG","EHOSTDOWN","EHOSTUNREACH","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","EISNAM","EKEYEXPIRED","EKEYREJECTED","EKEYREVOKED","EL2HLT","EL2NSYNC","EL3HLT","EL3RST","ELIBACC","ELIBBAD","ELIBEXEC","ELIBMAX","ELIBSCN","ELNRNG","ELOOP","EMEDIUMTYPE","EMFILE","EMLINK","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENAVAIL","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOANO","ENOBUFS","ENOCSI","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOKEY","ENOLCK","ENOLINK","ENOMEDIUM","ENOMEM","ENOMSG","ENONET","ENOPKG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTNAM","ENOTRECOVERABLE","ENOTSOCK","ENOTSUP","ENOTTY","ENOTUNIQ","ENXIO","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPOLLERR","EPOLLET","EPOLLHUP","EPOLLIN","EPOLLMSG","EPOLLONESHOT","EPOLLOUT","EPOLLPRI","EPOLLRDBAND","EPOLLRDHUP","EPOLLRDNORM","EPOLLWRBAND","EPOLLWRNORM","EPOLL_CLOEXEC","EPOLL_CTL_ADD","EPOLL_CTL_DEL","EPOLL_CTL_MOD","EPOLL_NONBLOCK","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERANGE","EREMCHG","EREMOTE","EREMOTEIO","ERESTART","ERFKILL","EROFS","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESRMNT","ESTALE","ESTRPIPE","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","EUCLEAN","EUNATCH","EUSERS","EWOULDBLOCK","EXDEV","EXFULL","FD_CLOEXEC","FD_SETSIZE","F_DUPFD","F_DUPFD_CLOEXEC","F_EXLCK","F_GETFD","F_GETFL","F_GETLEASE","F_GETLK","F_GETLK64","F_GETOWN","F_GETOWN_EX","F_GETSIG","F_LOCK","F_NOTIFY","F_OK","F_RDLCK","F_SETFD","F_SETFL","F_SETLEASE","F_SETLK","F_SETLK64","F_SETLKW","F_SETLKW64","F_SETOWN","F_SETOWN_EX","F_SETSIG","F_SHLCK","F_TEST","F_TLOCK","F_ULOCK","F_UNLCK","F_WRLCK","IN_ACCESS","IN_ALL_EVENTS","IN_ATTRIB","IN_CLASSA_HOST","IN_CLASSA_MAX","IN_CLASSA_NET","IN_CLASSA_NSHIFT","IN_CLASSB_HOST","IN_CLASSB_MAX","IN_CLASSB_NET","IN_CLASSB_NSHIFT","IN_CLASSC_HOST","IN_CLASSC_NET","IN_CLASSC_NSHIFT","IN_CLOEXEC","IN_CLOSE","IN_CLOSE_NOWRITE","IN_CLOSE_WRITE","IN_CREATE","IN_DELETE","IN_DELETE_SELF","IN_DONT_FOLLOW","IN_IGNORED","IN_ISDIR","IN_LOOPBACKNET","IN_MASK_ADD","IN_MODIFY","IN_MOVE","IN_MOVED_FROM","IN_MOVED_TO","IN_MOVE_SELF","IN_NONBLOCK","IN_ONESHOT","IN_ONLYDIR","IN_OPEN","IN_Q_OVERFLOW","IN_UNMOUNT","IPPROTO_AH","IPPROTO_COMP","IPPROTO_DCCP","IPPROTO_DSTOPTS","IPPROTO_EGP","IPPROTO_ENCAP","IPPROTO_ESP","IPPROTO_FRAGMENT","IPPROTO_GRE","IPPROTO_HOPOPTS","IPPROTO_ICMP","IPPROTO_ICMPV6","IPPROTO_IDP","IPPROTO_IGMP","IPPROTO_IP","IPPROTO_IPIP","IPPROTO_IPV6","IPPROTO_MTP","IPPROTO_NONE","IPPROTO_PIM","IPPROTO_PUP","IPPROTO_RAW","IPPROTO_ROUTING","IPPROTO_RSVP","IPPROTO_SCTP","IPPROTO_TCP","IPPROTO_TP","IPPROTO_UDP","IPPROTO_UDPLITE","IPV6_2292DSTOPTS","IPV6_2292HOPLIMIT","IPV6_2292HOPOPTS","IPV6_2292PKTINFO","IPV6_2292PKTOPTIONS","IPV6_2292RTHDR","IPV6_ADDRFORM","IPV6_ADD_MEMBERSHIP","IPV6_AUTHHDR","IPV6_CHECKSUM","IPV6_DROP_MEMBERSHIP","IPV6_DSTOPTS","IPV6_HOPLIMIT","IPV6_HOPOPTS","IPV6_IPSEC_POLICY","IPV6_JOIN_ANYCAST","IPV6_JOIN_GROUP","IPV6_LEAVE_ANYCAST","IPV6_LEAVE_GROUP","IPV6_MTU","IPV6_MTU_DISCOVER","IPV6_MULTICAST_HOPS","IPV6_MULTICAST_IF","IPV6_MULTICAST_LOOP","IPV6_NEXTHOP","IPV6_PKTINFO","IPV6_PMTUDISC_DO","IPV6_PMTUDISC_DONT","IPV6_PMTUDISC_PROBE","IPV6_PMTUDISC_WANT","IPV6_RECVDSTOPTS","IPV6_RECVERR","IPV6_RECVHOPLIMIT","IPV6_RECVHOPOPTS","IPV6_RECVPKTINFO","IPV6_RECVRTHDR","IPV6_RECVTCLASS","IPV6_ROUTER_ALERT","IPV6_RTHDR","IPV6_RTHDRDSTOPTS","IPV6_RTHDR_LOOSE","IPV6_RTHDR_STRICT","IPV6_RTHDR_TYPE_0","IPV6_RXDSTOPTS","IPV6_RXHOPOPTS","IPV6_TCLASS","IPV6_UNICAST_HOPS","IPV6_V6ONLY","IPV6_XFRM_POLICY","IP_ADD_MEMBERSHIP","IP_ADD_SOURCE_MEMBERSHIP","IP_BLOCK_SOURCE","IP_DEFAULT_MULTICAST_LOOP","IP_DEFAULT_MULTICAST_TTL","IP_DF","IP_DROP_MEMBERSHIP","IP_DROP_SOURCE_MEMBERSHIP","IP_HDRINCL","IP_MAXPACKET","IP_MAX_MEMBERSHIPS","IP_MF","IP_MSFILTER","IP_MSS","IP_MTU_DISCOVER","IP_MULTICAST_IF","IP_MULTICAST_LOOP","IP_MULTICAST_TTL","IP_OFFMASK","IP_OPTIONS","IP_PKTINFO","IP_PKTOPTIONS","IP_PMTUDISC","IP_PMTUDISC_DO","IP_PMTUDISC_DONT","IP_PMTUDISC_PROBE","IP_PMTUDISC_WANT","IP_RECVERR","IP_RECVOPTS","IP_RECVRETOPTS","IP_RECVTOS","IP_RECVTTL","IP_RETOPTS","IP_RF","IP_ROUTER_ALERT","IP_TOS","IP_TTL","IP_UNBLOCK_SOURCE","NAME_MAX","O_ACCMODE","O_APPEND","O_ASYNC","O_CLOEXEC","O_CREAT","O_DIRECT","O_DIRECTORY","O_DSYNC","O_EXCL","O_FSYNC","O_LARGEFILE","O_NDELAY","O_NOATIME","O_NOCTTY","O_NOFOLLOW","O_NONBLOCK","O_RDONLY","O_RDWR","O_RSYNC","O_SYNC","O_TRUNC","O_WRONLY","PACKET_ADD_MEMBERSHIP","PACKET_BROADCAST","PACKET_DROP_MEMBERSHIP","PACKET_FASTROUTE","PACKET_HOST","PACKET_LOOPBACK","PACKET_MR_ALLMULTI","PACKET_MR_MULTICAST","PACKET_MR_PROMISC","PACKET_MULTICAST","PACKET_OTHERHOST","PACKET_OUTGOING","PACKET_RECV_OUTPUT","PACKET_RX_RING","PACKET_STATISTICS","PTRACE_ATTACH","PTRACE_BTS_CLEAR","PTRACE_BTS_CONFIG","PTRACE_BTS_DRAIN","PTRACE_BTS_GET","PTRACE_BTS_O_ALLOC","PTRACE_BTS_O_SCHED","PTRACE_BTS_O_SIGNAL","PTRACE_BTS_O_TRACE","PTRACE_BTS_SIZE","PTRACE_BTS_STATUS","PTRACE_CONT","PTRACE_DETACH","PTRACE_EVENT_CLONE","PTRACE_EVENT_EXEC","PTRACE_EVENT_EXIT","PTRACE_EVENT_FORK","PTRACE_EVENT_VFORK","PTRACE_EVENT_VFORK_DONE","PTRACE_GETEVENTMSG","PTRACE_GETFPREGS","PTRACE_GETFPXREGS","PTRACE_GETREGS","PTRACE_GETSIGINFO","PTRACE_GET_THREAD_AREA","PTRACE_KILL","PTRACE_OLDSETOPTIONS","PTRACE_O_MASK","PTRACE_O_TRACECLONE","PTRACE_O_TRACEEXEC","PTRACE_O_TRACEEXIT","PTRACE_O_TRACEFORK","PTRACE_O_TRACESYSGOOD","PTRACE_O_TRACEVFORK","PTRACE_O_TRACEVFORKDONE","PTRACE_PEEKDATA","PTRACE_PEEKTEXT","PTRACE_PEEKUSR","PTRACE_POKEDATA","PTRACE_POKETEXT","PTRACE_POKEUSR","PTRACE_SETFPREGS","PTRACE_SETFPXREGS","PTRACE_SETOPTIONS","PTRACE_SETREGS","PTRACE_SETSIGINFO","PTRACE_SET_THREAD_AREA","PTRACE_SINGLEBLOCK","PTRACE_SINGLESTEP","PTRACE_SYSCALL","PTRACE_SYSEMU","PTRACE_SYSEMU_SINGLESTEP","PTRACE_TRACEME","SHUT_RD","SHUT_RDWR","SHUT_WR","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCLD","SIGCONT","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGIOT","SIGKILL","SIGPIPE","SIGPOLL","SIGPROF","SIGPWR","SIGQUIT","SIGSEGV","SIGSTKFLT","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGUNUSED","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SIOCADDDLCI","SIOCADDMULTI","SIOCADDRT","SIOCATMARK","SIOCDARP","SIOCDELDLCI","SIOCDELMULTI","SIOCDELRT","SIOCDEVPRIVATE","SIOCDIFADDR","SIOCDRARP","SIOCGARP","SIOCGIFADDR","SIOCGIFBR","SIOCGIFBRDADDR","SIOCGIFCONF","SIOCGIFCOUNT","SIOCGIFDSTADDR","SIOCGIFENCAP","SIOCGIFFLAGS","SIOCGIFHWADDR","SIOCGIFINDEX","SIOCGIFMAP","SIOCGIFMEM","SIOCGIFMETRIC","SIOCGIFMTU","SIOCGIFNAME","SIOCGIFNETMASK","SIOCGIFPFLAGS","SIOCGIFSLAVE","SIOCGIFTXQLEN","SIOCGPGRP","SIOCGRARP","SIOCGSTAMP","SIOCGSTAMPNS","SIOCPROTOPRIVATE","SIOCRTMSG","SIOCSARP","SIOCSIFADDR","SIOCSIFBR","SIOCSIFBRDADDR","SIOCSIFDSTADDR","SIOCSIFENCAP","SIOCSIFFLAGS","SIOCSIFHWADDR","SIOCSIFHWBROADCAST","SIOCSIFLINK","SIOCSIFMAP","SIOCSIFMEM","SIOCSIFMETRIC","SIOCSIFMTU","SIOCSIFNAME","SIOCSIFNETMASK","SIOCSIFPFLAGS","SIOCSIFSLAVE","SIOCSIFTXQLEN","SIOCSPGRP","SIOCSRARP","SIOGIFINDEX","SOCK_CLOEXEC","SOCK_DCCP","SOCK_DGRAM","SOCK_NONBLOCK","SOCK_PACKET","SOCK_RAW","SOCK_RDM","SOCK_SEQPACKET","SOCK_STREAM","SOL_AAL","SOL_ATM","SOL_DECNET","SOL_ICMPV6","SOL_IP","SOL_IPV6","SOL_IRDA","SOL_PACKET","SOL_RAW","SOL_SOCKET","SOL_TCP","SOL_X25","SOMAXCONN","SO_ACCEPTCONN","SO_ATTACH_FILTER","SO_BINDTODEVICE","SO_BROADCAST","SO_BSDCOMPAT","SO_DEBUG","SO_DETACH_FILTER","SO_DOMAIN","SO_DONTROUTE","SO_ERROR","SO_KEEPALIVE","SO_LINGER","SO_MARK","SO_NO_CHECK","SO_OOBINLINE","SO_PASSCRED","SO_PASSSEC","SO_PEERCRED","SO_PEERNAME","SO_PEERSEC","SO_PRIORITY","SO_PROTOCOL","SO_RCVBUF","SO_RCVBUFFORCE","SO_RCVLOWAT","SO_RCVTIMEO","SO_REUSEADDR","SO_SECURITY_AUTHENTICATION","SO_SECURITY_ENCRYPTION_NETWORK","SO_SECURITY_ENCRYPTION_TRANSPORT","SO_SNDBUF","SO_SNDBUFFORCE","SO_SNDLOWAT","SO_SNDTIMEO","SO_TIMESTAMP","SO_TIMESTAMPING","SO_TIMESTAMPNS","SO_TYPE","S_BLKSIZE","S_IEXEC","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","S_IFMT","S_IFREG","S_IFSOCK","S_IREAD","S_IRGRP","S_IROTH","S_IRUSR","S_IRWXG","S_IRWXO","S_IRWXU","S_ISGID","S_ISUID","S_ISVTX","S_IWGRP","S_IWOTH","S_IWRITE","S_IWUSR","S_IXGRP","S_IXOTH","S_IXUSR","TCP_CONGESTION","TCP_CORK","TCP_DEFER_ACCEPT","TCP_INFO","TCP_KEEPCNT","TCP_KEEPIDLE","TCP_KEEPINTVL","TCP_LINGER2","TCP_MAXSEG","TCP_MAXWIN","TCP_MAX_WINSHIFT","TCP_MD5SIG","TCP_MD5SIG_MAXKEYLEN","TCP_MSS","TCP_NODELAY","TCP_QUICKACK","TCP_SYNCNT","TCP_WINDOW_CLAMP","WALL","WCLONE","WCONTINUED","WEXITED","WNOHANG","WNOTHREAD","WNOWAIT","WORDSIZE","WSTOPPED","WUNTRACED"],"type":""},{"html":"\u000a<h2><a class=\"black\" href=\"?c:\">const</a> <a href=\"?c:PathMax!\"><em>group</em></a></h2>\u000a<pre>const (\u000a\u0009sizeofPtr               = 0x4\u000a\u0009sizeofShort             = 0x2\u000a\u0009sizeofInt               = 0x4\u000a\u0009sizeofLong              = 0x4\u000a\u0009sizeofLongLong          = 0x8\u000a\u0009PathMax                 = 0x1000\u000a\u0009SizeofSockaddrInet4     = 0x10\u000a\u0009SizeofSockaddrInet6     = 0x1c\u000a\u0009SizeofSockaddrAny       = 0x70\u000a\u0009SizeofSockaddrUnix      = 0x6e\u000a\u0009SizeofSockaddrLinklayer = 0x14\u000a\u0009SizeofLinger            = 0x8\u000a\u0009SizeofMsghdr            = 0x1c\u000a\u0009SizeofCmsghdr           = 0xc\u000a\u0009SizeofUcred             = 0xc\u000a\u0009SizeofInotifyEvent      = 0x10\u000a)</pre>\u000a<p>\u000aConstants\u000a</p>\u000a\u000a","names":["PathMax","SizeofSockaddrInet4","SizeofSockaddrInet6","SizeofSockaddrAny","SizeofSockaddrUnix","SizeofSockaddrLinklayer","SizeofLinger","SizeofMsghdr","SizeofCmsghdr","SizeofUcred","SizeofInotifyEvent"],"type":""}],"vars":[{"html":"\u000a<h2><a class=\"black\" href=\"?v:\">var</a> <a href=\"?v:Stdin!\"><em>group</em></a></h2>\u000a<pre>var (\u000a\u0009Stdin  = 0\u000a\u0009Stdout = 1\u000a\u0009Stderr = 2\u000a)</pre>\u000a\u000a","names":["Stdin","Stdout","Stderr"],"type":""},{"html":"\u000a<h2><a class=\"black\" href=\"?v:\">var</a> <a href=\"?v:ForkLock!\">ForkLock</a></h2>\u000a<pre>var ForkLock sync.RWMutex</pre>\u000a\u000a","names":["ForkLock"],"type":""},{"html":"\u000a<h2><a class=\"black\" href=\"?v:\">var</a> <a href=\"?v:SocketDisableIPv6!\">SocketDisableIPv6</a></h2>\u000a<pre>var SocketDisableIPv6 bool</pre>\u000a<p>\u000aFor testing: clients can set this flag to force\u000acreation of IPv6 sockets to return EAFNOSUPPORT.\u000a</p>\u000a\u000a","names":["SocketDisableIPv6"],"type":""}]}