var gowtfData = {"html":"","name":"hash","filenames":["/home/nsf/go/src/pkg/hash/hash.go"],"types":[{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Hash!\">Hash</a></h2>\u000a<pre>type Hash interface {\u000a\u0009// Write adds more data to the running hash.\u000a\u0009// It never returns an error.\u000a\u0009io.Writer\u000a\u000a\u0009// Sum returns the current hash, without changing the\u000a\u0009// underlying hash state.\u000a\u0009Sum() []byte\u000a\u000a\u0009// Reset resets the hash to one with zero bytes written.\u000a\u0009Reset()\u000a\u000a\u0009// Size returns the number of bytes Sum will return.\u000a\u0009Size() int\u000a}</pre>\u000a<p>\u000aHash is the common interface implemented by all hash functions.\u000a</p>\u000a\u000a","name":"Hash","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Hash32!\">Hash32</a></h2>\u000a<pre>type Hash32 interface {\u000a\u0009Hash\u000a\u0009Sum32() uint32\u000a}</pre>\u000a<p>\u000aHash32 is the common interface implemented by all 32-bit hash functions.\u000a</p>\u000a\u000a","name":"Hash32","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Hash64!\">Hash64</a></h2>\u000a<pre>type Hash64 interface {\u000a\u0009Hash\u000a\u0009Sum64() uint64\u000a}</pre>\u000a<p>\u000aHash64 is the common interface implemented by all 64-bit hash functions.\u000a</p>\u000a\u000a","name":"Hash64","methods":[]}],"funcs":[],"consts":[],"vars":[]}