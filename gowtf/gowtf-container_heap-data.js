var gowtfData = {"html":"<p>\u000aThis package provides heap operations for any type that implements\u000aheap.Interface.\u000a</p>\u000a","name":"heap","filenames":["/home/nsf/go/src/pkg/container/heap/heap.go"],"types":[{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Interface!\">Interface</a></h2>\u000a<pre>type Interface interface {\u000a\u0009sort.Interface\u000a\u0009Push(x interface{})\u000a\u0009Pop() interface{}\u000a}</pre>\u000a<p>\u000aAny type that implements heap.Interface may be used as a\u000amin-heap with the following invariants (established after\u000aInit has been called):\u000a</p>\u000a<pre>!h.Less(j, i) for 0 &lt;= i &lt; h.Len() and j = 2*i+1 or 2*i+2 and j &lt; h.Len()\u000a</pre>\u000a\u000a","name":"Interface","methods":[]}],"funcs":[{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Init!\">Init</a></h2>\u000a<code>func Init(h Interface)</code>\u000a<p>\u000aA heaper must be initialized before any of the heap operations\u000acan be used. Init is idempotent with respect to the heap invariants\u000aand may be called whenever the heap invariants may have been invalidated.\u000aIts complexity is O(n) where n = h.Len().\u000a</p>\u000a\u000a","name":"Init"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Pop!\">Pop</a></h2>\u000a<code>func Pop(h Interface) interface{}</code>\u000a<p>\u000aPop removes the minimum element (according to Less) from the heap\u000aand returns it. The complexity is O(log(n)) where n = h.Len().\u000aSame as Remove(h, 0).\u000a</p>\u000a\u000a","name":"Pop"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Push!\">Push</a></h2>\u000a<code>func Push(h Interface, x interface{})</code>\u000a<p>\u000aPush pushes the element x onto the heap. The complexity is\u000aO(log(n)) where n = h.Len().\u000a</p>\u000a\u000a","name":"Push"},{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Remove!\">Remove</a></h2>\u000a<code>func Remove(h Interface, i int) interface{}</code>\u000a<p>\u000aRemove removes the element at index i from the heap.\u000aThe complexity is O(log(n)) where n = h.Len().\u000a</p>\u000a\u000a","name":"Remove"}],"consts":[],"vars":[]}