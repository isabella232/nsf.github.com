var gowtfData = {"index":"index.html","html":"<p>\u000aPackage dict implements the Dictionary Server Protocol\u000aas defined in RFC 2229.\u000a</p>\u000a","name":"dict","filenames":["/home/nsf/go/src/pkg/net/dict/dict.go"],"types":[{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Client!\">Client</a></h2>\u000a<pre>type Client struct {\u000a\u0009text *textproto.Conn\u000a}</pre>\u000a<p>\u000aA Client represents a client connection to a dictionary server.\u000a</p>\u000a\u000a","name":"Client","methods":[{"html":"\u000a<h2><a class=\"black\" href=\"?m:Client\">func (*Client)</a> <a href=\"?m:Client.Close!\">Close</a></h2>\u000a<code>func (c *Client) Close() os.Error</code>\u000a<p>\u000aClose closes the connection to the dictionary server.\u000a</p>\u000a\u000a","name":"Close"},{"html":"\u000a<h2><a class=\"black\" href=\"?m:Client\">func (*Client)</a> <a href=\"?m:Client.Define!\">Define</a></h2>\u000a<code>func (c *Client) Define(dict, word string) ([]*Defn, os.Error)</code>\u000a<p>\u000aDefine requests the definition of the given word.\u000aThe argument dict names the dictionary to use,\u000athe Name field of a Dict returned by Dicts.\u000a</p>\u000a<p>\u000aThe special dictionary name &#34;*&#34; means to look in all the\u000aserver&#39;s dictionaries.\u000aThe special dictionary name &#34;!&#34; means to look in all the\u000aserver&#39;s dictionaries in turn, stopping after finding the word\u000ain one of them.\u000a</p>\u000a\u000a","name":"Define"},{"html":"\u000a<h2><a class=\"black\" href=\"?m:Client\">func (*Client)</a> <a href=\"?m:Client.Dicts!\">Dicts</a></h2>\u000a<code>func (c *Client) Dicts() ([]Dict, os.Error)</code>\u000a<p>\u000aDicts returns a list of the dictionaries available on the server.\u000a</p>\u000a\u000a","name":"Dicts"}]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Defn!\">Defn</a></h2>\u000a<pre>type Defn struct {\u000a\u0009Dict Dict   // Dict where definition was found\u000a\u0009Word string // Word being defined\u000a\u0009Text []byte // Definition text, typically multiple lines\u000a}</pre>\u000a<p>\u000aA Defn represents a definition.\u000a</p>\u000a\u000a","name":"Defn","methods":[]},{"html":"\u000a<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Dict!\">Dict</a></h2>\u000a<pre>type Dict struct {\u000a\u0009Name string // short name of dictionary\u000a\u0009Desc string // long description\u000a}</pre>\u000a<p>\u000aA Dict represents a dictionary available on the server.\u000a</p>\u000a\u000a","name":"Dict","methods":[]}],"funcs":[{"html":"\u000a<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Dial!\">Dial</a></h2>\u000a<code>func Dial(network, addr string) (*Client, os.Error)</code>\u000a<p>\u000aDial returns a new client connected to a dictionary server at\u000aaddr on the given network.\u000a</p>\u000a\u000a","name":"Dial"}],"consts":[],"vars":[]}