var gortfmData = {index:"index.html",html:"<p>\nThe mime package implements parts of the MIME spec.\n</p>\n",name:"mime",types:[],funcs:[{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:AddExtensionType!\">AddExtensionType</a></h2>\n<code>func AddExtensionType(ext, typ string) os.Error</code>\n<p>\nAddExtensionType sets the MIME type associated with\nthe extension ext to typ.  The extension should begin with\na leading dot, as in &#34;.html&#34;.\n</p>\n\n",name:"AddExtensionType"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:IsQText!\">IsQText</a></h2>\n<code>func IsQText(rune int) bool</code>\n<p>\nIsQText returns true if rune is in &#39;qtext&#39; as defined by RFC 822.\n</p>\n\n",name:"IsQText"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:IsTokenChar!\">IsTokenChar</a></h2>\n<code>func IsTokenChar(rune int) bool</code>\n<p>\nIsTokenChar returns true if rune is in &#39;token&#39; as defined by RFC\n1531 and RFC 2045.\n</p>\n\n",name:"IsTokenChar"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:ParseMediaType!\">ParseMediaType</a></h2>\n<code>func ParseMediaType(v string) (mediatype string, params map[string]string)</code>\n<p>\nParseMediaType parses a media type value and any optional\nparameters, per RFC 1531.  Media types are the values in\nContent-Type and Content-Disposition headers (RFC 2183).  On\nsuccess, ParseMediaType returns the media type converted to\nlowercase and trimmed of white space and a non-nil params.  On\nerror, it returns an empty string and a nil params.\n</p>\n\n",name:"ParseMediaType"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:TypeByExtension!\">TypeByExtension</a></h2>\n<code>func TypeByExtension(ext string) string</code>\n<p>\nTypeByExtension returns the MIME type associated with the file extension ext.\nThe extension ext should begin with a leading dot, as in &#34;.html&#34;.\nWhen ext has no associated type, TypeByExtension returns &#34;&#34;.\n</p>\n<p>\nThe built-in table is small but is is augmented by the local\nsystem&#39;s mime.types file(s) if available under one or more of these\nnames:\n</p>\n<pre>/etc/mime.types\n/etc/apache2/mime.types\n/etc/apache/mime.types\n</pre>\n\n",name:"TypeByExtension"}],consts:[],vars:[]}