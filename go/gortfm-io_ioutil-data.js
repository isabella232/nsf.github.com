var gortfmData = {index:"index.html",html:"",name:"ioutil",types:[],funcs:[{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:ReadAll!\">ReadAll</a></h2>\n<code>func ReadAll(r io.Reader) ([]byte, os.Error)</code>\n<p>\nReadAll reads from r until an error or EOF and returns the data it read.\n</p>\n\n",name:"ReadAll"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:ReadDir!\">ReadDir</a></h2>\n<code>func ReadDir(dirname string) ([]*os.FileInfo, os.Error)</code>\n<p>\nReadDir reads the directory named by dirname and returns\na list of sorted directory entries.\n</p>\n\n",name:"ReadDir"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:ReadFile!\">ReadFile</a></h2>\n<code>func ReadFile(filename string) ([]byte, os.Error)</code>\n<p>\nReadFile reads the file named by filename and returns the contents.\n</p>\n\n",name:"ReadFile"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:TempFile!\">TempFile</a></h2>\n<code>func TempFile(dir, prefix string) (f *os.File, err os.Error)</code>\n<p>\nTempFile creates a new temporary file in the directory dir\nwith a name beginning with prefix, opens the file for reading\nand writing, and returns the resulting *os.File.\nIf dir is the empty string, TempFile uses the default directory\nfor temporary files (see os.TempDir).\nMultiple programs calling TempFile simultaneously\nwill not choose the same file.  The caller can use f.Name()\nto find the name of the file.  It is the caller&#39;s responsibility to\nremove the file when no longer needed.\n</p>\n\n",name:"TempFile"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:WriteFile!\">WriteFile</a></h2>\n<code>func WriteFile(filename string, data []byte, perm uint32) os.Error</code>\n<p>\nWriteFile writes data to a file named by filename.\nIf the file does not exist, WriteFile creates it with permissions perm;\notherwise WriteFile truncates it before writing.\n</p>\n\n",name:"WriteFile"}],consts:[],vars:[]}