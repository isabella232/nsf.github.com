var gortfmData = {index:"index.html",html:"<p>\nPackage gif implements a GIF image decoder.\n</p>\n<p>\nThe GIF specification is at <a href=\"http://www.w3.org/Graphics/GIF/spec-gif89a.txt\">http://www.w3.org/Graphics/GIF/spec-gif89a.txt</a>.\n</p>\n",name:"gif",types:[{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:GIF!\">GIF</a></h2>\n<pre>type GIF struct {\n\tImage     []*image.Paletted // The successive images.\n\tDelay     []int             // The successive delay times, one per frame, in 100ths of a second.\n\tLoopCount int               // The loop count.\n}</pre>\n<p>\nGIF represents the possibly multiple images stored in a GIF file.\n</p>\n\n",name:"GIF","methods":[]}],funcs:[{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Decode!\">Decode</a></h2>\n<code>func Decode(r io.Reader) (image.Image, os.Error)</code>\n<p>\nDecode reads a GIF image from r and returns the first embedded\nimage as an image.Image.\n</p>\n\n",name:"Decode"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:DecodeAll!\">DecodeAll</a></h2>\n<code>func DecodeAll(r io.Reader) (*GIF, os.Error)</code>\n<p>\nDecodeAll reads a GIF image from r and returns the sequential frames\nand timing information.\n</p>\n\n",name:"DecodeAll"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:DecodeConfig!\">DecodeConfig</a></h2>\n<code>func DecodeConfig(r io.Reader) (image.Config, os.Error)</code>\n<p>\nDecodeConfig returns the color model and dimensions of a GIF image without\ndecoding the entire image.\n</p>\n\n",name:"DecodeConfig"}],consts:[],vars:[]}