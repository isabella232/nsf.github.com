var gortfmData = {index:"index.html",html:"<p>\nThe httptest package provides utilities for HTTP testing.\n</p>\n",name:"httptest",types:[{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:ResponseRecorder!\">ResponseRecorder</a></h2>\n<pre>type ResponseRecorder struct {\n\tCode    int           // the HTTP response code from WriteHeader\n\tHeader  http.Header   // if non-nil, the headers to populate\n\tBody    *bytes.Buffer // if non-nil, the bytes.Buffer to append written data to\n\tFlushed bool\n\n\tFakeRemoteAddr string // the fake RemoteAddr to return, or &#34;&#34; for DefaultRemoteAddr\n\tFakeUsingTLS   bool   // whether to return true from the UsingTLS method\n}</pre>\n<p>\nResponseRecorder is an implementation of http.ResponseWriter that\nrecords its mutations for later inspection in tests.\n</p>\n\n",name:"ResponseRecorder","methods":[{html:"\n<h2><a class=\"black\" href=\"?m:ResponseRecorder\">func (*ResponseRecorder)</a> <a href=\"?m:ResponseRecorder.Flush!\">Flush</a></h2>\n<code>func (rw *ResponseRecorder) Flush()</code>\n<p>\nFlush sets rw.Flushed to true.\n</p>\n\n",name:"Flush"},{html:"\n<h2><a class=\"black\" href=\"?m:ResponseRecorder\">func (*ResponseRecorder)</a> <a href=\"?m:ResponseRecorder.RemoteAddr!\">RemoteAddr</a></h2>\n<code>func (rw *ResponseRecorder) RemoteAddr() string</code>\n<p>\nRemoteAddr returns the value of rw.FakeRemoteAddr, if set, else\nreturns DefaultRemoteAddr.\n</p>\n\n",name:"RemoteAddr"},{html:"\n<h2><a class=\"black\" href=\"?m:ResponseRecorder\">func (*ResponseRecorder)</a> <a href=\"?m:ResponseRecorder.SetHeader!\">SetHeader</a></h2>\n<code>func (rw *ResponseRecorder) SetHeader(k, v string)</code>\n<p>\nSetHeader populates rw.Header, if non-nil.\n</p>\n\n",name:"SetHeader"},{html:"\n<h2><a class=\"black\" href=\"?m:ResponseRecorder\">func (*ResponseRecorder)</a> <a href=\"?m:ResponseRecorder.UsingTLS!\">UsingTLS</a></h2>\n<code>func (rw *ResponseRecorder) UsingTLS() bool</code>\n<p>\nUsingTLS returns the fake value in rw.FakeUsingTLS\n</p>\n\n",name:"UsingTLS"},{html:"\n<h2><a class=\"black\" href=\"?m:ResponseRecorder\">func (*ResponseRecorder)</a> <a href=\"?m:ResponseRecorder.Write!\">Write</a></h2>\n<code>func (rw *ResponseRecorder) Write(buf []byte) (int, os.Error)</code>\n<p>\nWrite always succeeds and writes to rw.Body, if not nil.\n</p>\n\n",name:"Write"},{html:"\n<h2><a class=\"black\" href=\"?m:ResponseRecorder\">func (*ResponseRecorder)</a> <a href=\"?m:ResponseRecorder.WriteHeader!\">WriteHeader</a></h2>\n<code>func (rw *ResponseRecorder) WriteHeader(code int)</code>\n<p>\nWriteHeader sets rw.Code.\n</p>\n\n",name:"WriteHeader"}]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Server!\">Server</a></h2>\n<pre>type Server struct {\n\tURL      string // base URL of form http://ipaddr:port with no trailing slash\n\tListener net.Listener\n}</pre>\n<p>\nA Server is an HTTP server listening on a system-chosen port on the\nlocal loopback interface, for use in end-to-end HTTP tests.\n</p>\n\n",name:"Server","methods":[{html:"\n<h2><a class=\"black\" href=\"?m:Server\">func (*Server)</a> <a href=\"?m:Server.Close!\">Close</a></h2>\n<code>func (s *Server) Close()</code>\n<p>\nClose shuts down the server.\n</p>\n\n",name:"Close"}]}],funcs:[{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:NewRecorder!\">NewRecorder</a></h2>\n<code>func NewRecorder() *ResponseRecorder</code>\n<p>\nNewRecorder returns an initialized ResponseRecorder.\n</p>\n\n",name:"NewRecorder"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:NewServer!\">NewServer</a></h2>\n<code>func NewServer(handler http.Handler) *Server</code>\n<p>\nNewServer starts and returns a new Server.\nThe caller should call Close when finished, to shut it down.\n</p>\n\n",name:"NewServer"}],consts:[{html:"\n<h2><a class=\"black\" href=\"?c:\">const</a> <a href=\"?c:DefaultRemoteAddr!\">DefaultRemoteAddr</a></h2>\n<pre>const DefaultRemoteAddr = &#34;1.2.3.4&#34;</pre>\n<p>\nDefaultRemoteAddr is the default remote address to return in RemoteAddr if\nan explicit DefaultRemoteAddr isn&#39;t set on ResponseRecorder.\n</p>\n\n",names:["DefaultRemoteAddr"],type:""}],vars:[]}