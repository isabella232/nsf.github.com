var gortfmData = {index:"index.html",html:"<p>\nPackage pprof writes runtime profiling data in the format expected\nby the pprof visualization tool.\nFor more information about pprof, see\n<a href=\"http://code.google.com/p/google-perftools/\">http://code.google.com/p/google-perftools/</a>.\n</p>\n",name:"pprof",types:[],funcs:[{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:StartCPUProfile!\">StartCPUProfile</a></h2>\n<code>func StartCPUProfile(w io.Writer) os.Error</code>\n<p>\nStartCPUProfile enables CPU profiling for the current process.\nWhile profiling, the profile will be buffered and written to w.\nStartCPUProfile returns an error if profiling is already enabled.\n</p>\n\n",name:"StartCPUProfile"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:StopCPUProfile!\">StopCPUProfile</a></h2>\n<code>func StopCPUProfile()</code>\n<p>\nStopCPUProfile stops the current CPU profile, if any.\nStopCPUProfile only returns after all the writes for the\nprofile have completed.\n</p>\n\n",name:"StopCPUProfile"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:WriteHeapProfile!\">WriteHeapProfile</a></h2>\n<code>func WriteHeapProfile(w io.Writer) os.Error</code>\n<p>\nWriteHeapProfile writes a pprof-formatted heap profile to w.\nIf a write to w returns an error, WriteHeapProfile returns that error.\nOtherwise, WriteHeapProfile returns nil.\n</p>\n\n",name:"WriteHeapProfile"}],consts:[],vars:[]}