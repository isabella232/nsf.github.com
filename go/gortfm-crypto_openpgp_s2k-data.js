var gortfmData = {index:"index.html",html:"<p>\nThis package implements the various OpenPGP string-to-key transforms as\nspecified in RFC 4800 section 3.7.1.\n</p>\n",name:"s2k",types:[],funcs:[{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:HashIdToHash!\">HashIdToHash</a></h2>\n<code>func HashIdToHash(id byte) (h crypto.Hash, ok bool)</code>\n<p>\nHashIdToHash returns a crypto.Hash which corresponds to the given OpenPGP\nhash id.\n</p>\n\n",name:"HashIdToHash"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:HashToHashId!\">HashToHashId</a></h2>\n<code>func HashToHashId(h crypto.Hash) (id byte, ok bool)</code>\n<p>\nHashIdToHash returns an OpenPGP hash id which corresponds the given Hash.\n</p>\n\n",name:"HashToHashId"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Iterated!\">Iterated</a></h2>\n<code>func Iterated(out []byte, h hash.Hash, in []byte, salt []byte, count int)</code>\n<p>\nIterated writes to out the result of computing the Iterated and Salted S2K\nfunction (RFC 4880, section 3.7.1.3) using the given hash, input passphrase,\nsalt and iteration count.\n</p>\n\n",name:"Iterated"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Parse!\">Parse</a></h2>\n<code>func Parse(r io.Reader) (f func(out, in []byte), err os.Error)</code>\n<p>\nParse reads a binary specification for a string-to-key transformation from r\nand returns a function which performs that transform.\n</p>\n\n",name:"Parse"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Salted!\">Salted</a></h2>\n<code>func Salted(out []byte, h hash.Hash, in []byte, salt []byte)</code>\n<p>\nSalted writes to out the result of computing the Salted S2K function (RFC\n4880, section 3.7.1.2) using the given hash, input passphrase and salt.\n</p>\n\n",name:"Salted"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Simple!\">Simple</a></h2>\n<code>func Simple(out []byte, h hash.Hash, in []byte)</code>\n<p>\nSimple writes to out the result of computing the Simple S2K function (RFC\n4880, section 3.7.1.1) using the given hash and input passphrase.\n</p>\n\n",name:"Simple"}],consts:[],vars:[]}