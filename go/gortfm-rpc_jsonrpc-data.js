var gortfmData = {index:"index.html",html:"<p>\nPackage jsonrpc implements a JSON-RPC ClientCodec and ServerCodec\nfor the rpc package.\n</p>\n",name:"jsonrpc",types:[],funcs:[{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Dial!\">Dial</a></h2>\n<code>func Dial(network, address string) (*rpc.Client, os.Error)</code>\n<p>\nDial connects to a JSON-RPC server at the specified network address.\n</p>\n\n",name:"Dial"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:NewClient!\">NewClient</a></h2>\n<code>func NewClient(conn io.ReadWriteCloser) *rpc.Client</code>\n<p>\nNewClient returns a new rpc.Client to handle requests to the\nset of services at the other end of the connection.\n</p>\n\n",name:"NewClient"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:NewClientCodec!\">NewClientCodec</a></h2>\n<code>func NewClientCodec(conn io.ReadWriteCloser) rpc.ClientCodec</code>\n<p>\nNewClientCodec returns a new rpc.ClientCodec using JSON-RPC on conn.\n</p>\n\n",name:"NewClientCodec"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:NewServerCodec!\">NewServerCodec</a></h2>\n<code>func NewServerCodec(conn io.ReadWriteCloser) rpc.ServerCodec</code>\n<p>\nNewServerCodec returns a new rpc.ServerCodec using JSON-RPC on conn.\n</p>\n\n",name:"NewServerCodec"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:ServeConn!\">ServeConn</a></h2>\n<code>func ServeConn(conn io.ReadWriteCloser)</code>\n<p>\nServeConn runs the JSON-RPC server on a single connection.\nServeConn blocks, serving the connection until the client hangs up.\nThe caller typically invokes ServeConn in a go statement.\n</p>\n\n",name:"ServeConn"}],consts:[],vars:[]}