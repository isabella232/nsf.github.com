var gortfmData = {index:"index.html",html:"<p>\nPackage crypto collects common cryptographic constants.\n</p>\n",name:"crypto",types:[{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Hash!\">Hash</a></h2>\n<pre>type Hash uint</pre>\n<p>\nHash identifies a cryptographic hash function that is implemented in another\npackage.\n</p>\n\n",name:"Hash","methods":[{html:"\n<h2><a class=\"black\" href=\"?m:Hash\">func (Hash)</a> <a href=\"?m:Hash.New!\">New</a></h2>\n<code>func (h Hash) New() hash.Hash</code>\n<p>\nNew returns a new hash.Hash calculating the given hash function. If the\nhash function is not linked into the binary, New returns nil.\n</p>\n\n",name:"New"},{html:"\n<h2><a class=\"black\" href=\"?m:Hash\">func (Hash)</a> <a href=\"?m:Hash.Size!\">Size</a></h2>\n<code>func (h Hash) Size() int</code>\n<p>\nSize returns the length, in bytes, of a digest resulting from the given hash\nfunction. It doesn&#39;t require that the hash function in question be linked\ninto the program.\n</p>\n\n",name:"Size"}]}],funcs:[{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:RegisterHash!\">RegisterHash</a></h2>\n<code>func RegisterHash(h Hash, f func() hash.Hash)</code>\n<p>\nRegisterHash registers a function that returns a new instance of the given\nhash function. This is intended to be called from the init function in\npackages that implement hash functions.\n</p>\n\n",name:"RegisterHash"}],consts:[{html:"\n<h2><a class=\"black\" href=\"?c:\">const</a> <a href=\"?c:Hash!\">Hash</a></h2>\n<pre>const (\n\tMD4       Hash = 1 + iota // in package crypto/md4\n\tMD5                       // in package crypto/md5\n\tSHA1                      // in package crypto/sha1\n\tSHA224                    // in package crypto/sha256\n\tSHA256                    // in package crypto/sha256\n\tSHA384                    // in package crypto/sha512\n\tSHA512                    // in package crypto/sha512\n\tMD5SHA1                   // no implementation; MD5+SHA1 used for TLS RSA\n\tRIPEMD160                 // in package crypto/ripemd160\n\n)</pre>\n\n",names:["MD4","MD5","SHA1","SHA224","SHA256","SHA384","SHA512","MD5SHA1","RIPEMD160"],type:"Hash"}],vars:[]}