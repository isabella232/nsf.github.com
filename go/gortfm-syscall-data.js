var gortfmData = {index:"index.html",html:"<p>\nThis package contains an interface to the low-level operating system\nprimitives.  The details vary depending on the underlying system.\nIts primary use is inside other packages that provide a more portable\ninterface to the system, such as &#34;os&#34;, &#34;time&#34; and &#34;net&#34;.  Use those\npackages rather than this one if you can.\nFor details of the functions and data types in this package consult\nthe manuals for the appropriate operating system.\nThese calls return errno == 0 to indicate success; otherwise\nerrno is an operating system error number describing the failure.\n</p>\n",name:"syscall",types:[{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Cmsghdr!\">Cmsghdr</a></h2>\n<pre>type Cmsghdr struct {\n\tLen   uint32\n\tLevel int32\n\tType  int32\n}</pre>\n\n",name:"Cmsghdr","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Dirent!\">Dirent</a></h2>\n<pre>type Dirent struct {\n\tIno    uint64\n\tOff    int64\n\tReclen uint16\n\tType   uint8\n\tName   [256]int8\n\tPad0   [1]byte\n}</pre>\n\n",name:"Dirent","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:EpollEvent!\">EpollEvent</a></h2>\n<pre>type EpollEvent struct {\n\tEvents uint32\n\tFd     int32\n\tPad    int32\n}</pre>\n\n",name:"EpollEvent","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:FdSet!\">FdSet</a></h2>\n<pre>type FdSet struct {\n\tBits [32]int32\n}</pre>\n\n",name:"FdSet","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:InotifyEvent!\">InotifyEvent</a></h2>\n<pre>type InotifyEvent struct {\n\tWd     int32\n\tMask   uint32\n\tCookie uint32\n\tLen    uint32\n}</pre>\n\n",name:"InotifyEvent","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Iovec!\">Iovec</a></h2>\n<pre>type Iovec struct {\n\tBase *byte\n\tLen  uint32\n}</pre>\n\n",name:"Iovec","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Linger!\">Linger</a></h2>\n<pre>type Linger struct {\n\tOnoff  int32\n\tLinger int32\n}</pre>\n\n",name:"Linger","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Msghdr!\">Msghdr</a></h2>\n<pre>type Msghdr struct {\n\tName       *byte\n\tNamelen    uint32\n\tIov        *Iovec\n\tIovlen     uint32\n\tControl    *byte\n\tControllen uint32\n\tFlags      int32\n}</pre>\n\n",name:"Msghdr","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:PtraceRegs!\">PtraceRegs</a></h2>\n<pre>type PtraceRegs struct {\n\tEbx      int32\n\tEcx      int32\n\tEdx      int32\n\tEsi      int32\n\tEdi      int32\n\tEbp      int32\n\tEax      int32\n\tXds      int32\n\tXes      int32\n\tXfs      int32\n\tXgs      int32\n\tOrig_eax int32\n\tEip      int32\n\tXcs      int32\n\tEflags   int32\n\tEsp      int32\n\tXss      int32\n}</pre>\n\n",name:"PtraceRegs","methods":[{html:"\n<h2><a class=\"black\" href=\"?m:PtraceRegs\">func (*PtraceRegs)</a> <a href=\"?m:PtraceRegs.PC!\">PC</a></h2>\n<code>func (r *PtraceRegs) PC() uint64</code>\n\n",name:"PC"},{html:"\n<h2><a class=\"black\" href=\"?m:PtraceRegs\">func (*PtraceRegs)</a> <a href=\"?m:PtraceRegs.SetPC!\">SetPC</a></h2>\n<code>func (r *PtraceRegs) SetPC(pc uint64)</code>\n\n",name:"SetPC"}]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:RawSockaddr!\">RawSockaddr</a></h2>\n<pre>type RawSockaddr struct {\n\tFamily uint16\n\tData   [14]int8\n}</pre>\n\n",name:"RawSockaddr","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:RawSockaddrAny!\">RawSockaddrAny</a></h2>\n<pre>type RawSockaddrAny struct {\n\tAddr RawSockaddr\n\tPad  [96]int8\n}</pre>\n\n",name:"RawSockaddrAny","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:RawSockaddrInet4!\">RawSockaddrInet4</a></h2>\n<pre>type RawSockaddrInet4 struct {\n\tFamily uint16\n\tPort   uint16\n\tAddr   [4]byte /* in_addr */\n\tZero   [8]uint8\n}</pre>\n\n",name:"RawSockaddrInet4","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:RawSockaddrInet6!\">RawSockaddrInet6</a></h2>\n<pre>type RawSockaddrInet6 struct {\n\tFamily   uint16\n\tPort     uint16\n\tFlowinfo uint32\n\tAddr     [16]byte /* in6_addr */\n\tScope_id uint32\n}</pre>\n\n",name:"RawSockaddrInet6","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:RawSockaddrLinklayer!\">RawSockaddrLinklayer</a></h2>\n<pre>type RawSockaddrLinklayer struct {\n\tFamily   uint16\n\tProtocol uint16\n\tIfindex  int32\n\tHatype   uint16\n\tPkttype  uint8\n\tHalen    uint8\n\tAddr     [8]uint8\n}</pre>\n\n",name:"RawSockaddrLinklayer","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:RawSockaddrUnix!\">RawSockaddrUnix</a></h2>\n<pre>type RawSockaddrUnix struct {\n\tFamily uint16\n\tPath   [108]int8\n}</pre>\n\n",name:"RawSockaddrUnix","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Rlimit!\">Rlimit</a></h2>\n<pre>type Rlimit struct {\n\tCur uint64\n\tMax uint64\n}</pre>\n\n",name:"Rlimit","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Rusage!\">Rusage</a></h2>\n<pre>type Rusage struct {\n\tUtime    Timeval\n\tStime    Timeval\n\tMaxrss   int32\n\tIxrss    int32\n\tIdrss    int32\n\tIsrss    int32\n\tMinflt   int32\n\tMajflt   int32\n\tNswap    int32\n\tInblock  int32\n\tOublock  int32\n\tMsgsnd   int32\n\tMsgrcv   int32\n\tNsignals int32\n\tNvcsw    int32\n\tNivcsw   int32\n}</pre>\n\n",name:"Rusage","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Sockaddr!\">Sockaddr</a></h2>\n<pre>type Sockaddr interface {\n\t// contains unexported methods\n}</pre>\n\n",name:"Sockaddr","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:SockaddrInet4!\">SockaddrInet4</a></h2>\n<pre>type SockaddrInet4 struct {\n\tPort int\n\tAddr [4]byte\n\t// contains unexported fields\n}</pre>\n\n",name:"SockaddrInet4","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:SockaddrInet6!\">SockaddrInet6</a></h2>\n<pre>type SockaddrInet6 struct {\n\tPort int\n\tAddr [16]byte\n\t// contains unexported fields\n}</pre>\n\n",name:"SockaddrInet6","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:SockaddrLinklayer!\">SockaddrLinklayer</a></h2>\n<pre>type SockaddrLinklayer struct {\n\tProtocol uint16\n\tIfindex  int\n\tHatype   uint16\n\tPkttype  uint8\n\tHalen    uint8\n\tAddr     [8]byte\n\t// contains unexported fields\n}</pre>\n\n",name:"SockaddrLinklayer","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:SockaddrUnix!\">SockaddrUnix</a></h2>\n<pre>type SockaddrUnix struct {\n\tName string\n\t// contains unexported fields\n}</pre>\n\n",name:"SockaddrUnix","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Stat_t!\">Stat_t</a></h2>\n<pre>type Stat_t struct {\n\tDev       uint64\n\tX__pad1   uint16\n\tPad0      [2]byte\n\tX__st_ino uint32\n\tMode      uint32\n\tNlink     uint32\n\tUid       uint32\n\tGid       uint32\n\tRdev      uint64\n\tX__pad2   uint16\n\tPad1      [2]byte\n\tSize      int64\n\tBlksize   int32\n\tBlocks    int64\n\tAtim      Timespec\n\tMtim      Timespec\n\tCtim      Timespec\n\tIno       uint64\n}</pre>\n\n",name:"Stat_t","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Statfs_t!\">Statfs_t</a></h2>\n<pre>type Statfs_t struct {\n\tType    int32\n\tBsize   int32\n\tBlocks  uint64\n\tBfree   uint64\n\tBavail  uint64\n\tFiles   uint64\n\tFfree   uint64\n\tFsid    [8]byte /* __fsid_t */\n\tNamelen int32\n\tFrsize  int32\n\tSpare   [5]int32\n}</pre>\n\n",name:"Statfs_t","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Sysinfo_t!\">Sysinfo_t</a></h2>\n<pre>type Sysinfo_t struct {\n\tUptime    int32\n\tLoads     [3]uint32\n\tTotalram  uint32\n\tFreeram   uint32\n\tSharedram uint32\n\tBufferram uint32\n\tTotalswap uint32\n\tFreeswap  uint32\n\tProcs     uint16\n\tPad       uint16\n\tTotalhigh uint32\n\tFreehigh  uint32\n\tUnit      uint32\n\tX_f       [8]int8\n}</pre>\n\n",name:"Sysinfo_t","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Time_t!\">Time_t</a></h2>\n<pre>type Time_t int32</pre>\n\n",name:"Time_t","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Timespec!\">Timespec</a></h2>\n<pre>type Timespec struct {\n\tSec  int32\n\tNsec int32\n}</pre>\n\n",name:"Timespec","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Timeval!\">Timeval</a></h2>\n<pre>type Timeval struct {\n\tSec  int32\n\tUsec int32\n}</pre>\n\n",name:"Timeval","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Timex!\">Timex</a></h2>\n<pre>type Timex struct {\n\tModes     uint32\n\tOffset    int32\n\tFreq      int32\n\tMaxerror  int32\n\tEsterror  int32\n\tStatus    int32\n\tConstant  int32\n\tPrecision int32\n\tTolerance int32\n\tTime      Timeval\n\tTick      int32\n\tPpsfreq   int32\n\tJitter    int32\n\tShift     int32\n\tStabil    int32\n\tJitcnt    int32\n\tCalcnt    int32\n\tErrcnt    int32\n\tStbcnt    int32\n\tTai       int32\n\tPad0      int32\n\tPad1      int32\n\tPad2      int32\n\tPad3      int32\n\tPad4      int32\n\tPad5      int32\n\tPad6      int32\n\tPad7      int32\n\tPad8      int32\n\tPad9      int32\n\tPad10     int32\n}</pre>\n\n",name:"Timex","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Tms!\">Tms</a></h2>\n<pre>type Tms struct {\n\tUtime  int32\n\tStime  int32\n\tCutime int32\n\tCstime int32\n}</pre>\n\n",name:"Tms","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Ucred!\">Ucred</a></h2>\n<pre>type Ucred struct {\n\tPid int32\n\tUid uint32\n\tGid uint32\n}</pre>\n\n",name:"Ucred","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Ustat_t!\">Ustat_t</a></h2>\n<pre>type Ustat_t struct {\n\tTfree  int32\n\tTinode uint32\n\tFname  [6]int8\n\tFpack  [6]int8\n}</pre>\n\n",name:"Ustat_t","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Utimbuf!\">Utimbuf</a></h2>\n<pre>type Utimbuf struct {\n\tActime  int32\n\tModtime int32\n}</pre>\n\n",name:"Utimbuf","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:Utsname!\">Utsname</a></h2>\n<pre>type Utsname struct {\n\tSysname    [65]int8\n\tNodename   [65]int8\n\tRelease    [65]int8\n\tVersion    [65]int8\n\tMachine    [65]int8\n\tDomainname [65]int8\n}</pre>\n\n",name:"Utsname","methods":[]},{html:"\n<h2><a class=\"black\" href=\"?t:\">type</a> <a href=\"?t:WaitStatus!\">WaitStatus</a></h2>\n<pre>type WaitStatus uint32</pre>\n\n",name:"WaitStatus","methods":[{html:"\n<h2><a class=\"black\" href=\"?m:WaitStatus\">func (WaitStatus)</a> <a href=\"?m:WaitStatus.Continued!\">Continued</a></h2>\n<code>func (w WaitStatus) Continued() bool</code>\n\n",name:"Continued"},{html:"\n<h2><a class=\"black\" href=\"?m:WaitStatus\">func (WaitStatus)</a> <a href=\"?m:WaitStatus.CoreDump!\">CoreDump</a></h2>\n<code>func (w WaitStatus) CoreDump() bool</code>\n\n",name:"CoreDump"},{html:"\n<h2><a class=\"black\" href=\"?m:WaitStatus\">func (WaitStatus)</a> <a href=\"?m:WaitStatus.ExitStatus!\">ExitStatus</a></h2>\n<code>func (w WaitStatus) ExitStatus() int</code>\n\n",name:"ExitStatus"},{html:"\n<h2><a class=\"black\" href=\"?m:WaitStatus\">func (WaitStatus)</a> <a href=\"?m:WaitStatus.Exited!\">Exited</a></h2>\n<code>func (w WaitStatus) Exited() bool</code>\n\n",name:"Exited"},{html:"\n<h2><a class=\"black\" href=\"?m:WaitStatus\">func (WaitStatus)</a> <a href=\"?m:WaitStatus.Signal!\">Signal</a></h2>\n<code>func (w WaitStatus) Signal() int</code>\n\n",name:"Signal"},{html:"\n<h2><a class=\"black\" href=\"?m:WaitStatus\">func (WaitStatus)</a> <a href=\"?m:WaitStatus.Signaled!\">Signaled</a></h2>\n<code>func (w WaitStatus) Signaled() bool</code>\n\n",name:"Signaled"},{html:"\n<h2><a class=\"black\" href=\"?m:WaitStatus\">func (WaitStatus)</a> <a href=\"?m:WaitStatus.StopSignal!\">StopSignal</a></h2>\n<code>func (w WaitStatus) StopSignal() int</code>\n\n",name:"StopSignal"},{html:"\n<h2><a class=\"black\" href=\"?m:WaitStatus\">func (WaitStatus)</a> <a href=\"?m:WaitStatus.Stopped!\">Stopped</a></h2>\n<code>func (w WaitStatus) Stopped() bool</code>\n\n",name:"Stopped"},{html:"\n<h2><a class=\"black\" href=\"?m:WaitStatus\">func (WaitStatus)</a> <a href=\"?m:WaitStatus.TrapCause!\">TrapCause</a></h2>\n<code>func (w WaitStatus) TrapCause() int</code>\n\n",name:"TrapCause"}]}],funcs:[{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Accept!\">Accept</a></h2>\n<code>func Accept(fd int) (nfd int, sa Sockaddr, errno int)</code>\n\n",name:"Accept"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Access!\">Access</a></h2>\n<code>func Access(path string, mode uint32) (errno int)</code>\n\n",name:"Access"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Acct!\">Acct</a></h2>\n<code>func Acct(path string) (errno int)</code>\n\n",name:"Acct"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Adjtimex!\">Adjtimex</a></h2>\n<code>func Adjtimex(buf *Timex) (state int, errno int)</code>\n\n",name:"Adjtimex"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Bind!\">Bind</a></h2>\n<code>func Bind(fd int, sa Sockaddr) (errno int)</code>\n\n",name:"Bind"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:BindToDevice!\">BindToDevice</a></h2>\n<code>func BindToDevice(fd int, device string) (errno int)</code>\n<p>\nBindToDevice binds the socket associated with fd to device.\n</p>\n\n",name:"BindToDevice"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Chdir!\">Chdir</a></h2>\n<code>func Chdir(path string) (errno int)</code>\n\n",name:"Chdir"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Chmod!\">Chmod</a></h2>\n<code>func Chmod(path string, mode uint32) (errno int)</code>\n\n",name:"Chmod"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Chown!\">Chown</a></h2>\n<code>func Chown(path string, uid int, gid int) (errno int)</code>\n\n",name:"Chown"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Chroot!\">Chroot</a></h2>\n<code>func Chroot(path string) (errno int)</code>\n\n",name:"Chroot"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Close!\">Close</a></h2>\n<code>func Close(fd int) (errno int)</code>\n\n",name:"Close"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:CloseOnExec!\">CloseOnExec</a></h2>\n<code>func CloseOnExec(fd int)</code>\n\n",name:"CloseOnExec"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Connect!\">Connect</a></h2>\n<code>func Connect(fd int, sa Sockaddr) (errno int)</code>\n\n",name:"Connect"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Creat!\">Creat</a></h2>\n<code>func Creat(path string, mode uint32) (fd int, errno int)</code>\n\n",name:"Creat"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Dup!\">Dup</a></h2>\n<code>func Dup(oldfd int) (fd int, errno int)</code>\n\n",name:"Dup"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Dup2!\">Dup2</a></h2>\n<code>func Dup2(oldfd int, newfd int) (fd int, errno int)</code>\n\n",name:"Dup2"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:EpollCreate!\">EpollCreate</a></h2>\n<code>func EpollCreate(size int) (fd int, errno int)</code>\n\n",name:"EpollCreate"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:EpollCtl!\">EpollCtl</a></h2>\n<code>func EpollCtl(epfd int, op int, fd int, event *EpollEvent) (errno int)</code>\n\n",name:"EpollCtl"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:EpollWait!\">EpollWait</a></h2>\n<code>func EpollWait(epfd int, events []EpollEvent, msec int) (n int, errno int)</code>\n\n",name:"EpollWait"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Errstr!\">Errstr</a></h2>\n<code>func Errstr(errno int) string</code>\n\n",name:"Errstr"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Exec!\">Exec</a></h2>\n<code>func Exec(argv0 string, argv []string, envv []string) (err int)</code>\n<p>\nOrdinary exec.\n</p>\n\n",name:"Exec"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Exit!\">Exit</a></h2>\n<code>func Exit(code int)</code>\n\n",name:"Exit"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Faccessat!\">Faccessat</a></h2>\n<code>func Faccessat(dirfd int, path string, mode uint32, flags int) (errno int)</code>\n\n",name:"Faccessat"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Fallocate!\">Fallocate</a></h2>\n<code>func Fallocate(fd int, mode uint32, off int64, len int64) (errno int)</code>\n\n",name:"Fallocate"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Fchdir!\">Fchdir</a></h2>\n<code>func Fchdir(fd int) (errno int)</code>\n\n",name:"Fchdir"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Fchmod!\">Fchmod</a></h2>\n<code>func Fchmod(fd int, mode uint32) (errno int)</code>\n\n",name:"Fchmod"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Fchmodat!\">Fchmodat</a></h2>\n<code>func Fchmodat(dirfd int, path string, mode uint32, flags int) (errno int)</code>\n\n",name:"Fchmodat"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Fchown!\">Fchown</a></h2>\n<code>func Fchown(fd int, uid int, gid int) (errno int)</code>\n\n",name:"Fchown"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Fchownat!\">Fchownat</a></h2>\n<code>func Fchownat(dirfd int, path string, uid int, gid int, flags int) (errno int)</code>\n\n",name:"Fchownat"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Fdatasync!\">Fdatasync</a></h2>\n<code>func Fdatasync(fd int) (errno int)</code>\n\n",name:"Fdatasync"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:ForkExec!\">ForkExec</a></h2>\n<code>func ForkExec(argv0 string, argv []string, envv []string, dir string, fd []int) (pid int, err int)</code>\n<p>\nCombination of fork and exec, careful to be thread safe.\n</p>\n\n",name:"ForkExec"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Fstat!\">Fstat</a></h2>\n<code>func Fstat(fd int, stat *Stat_t) (errno int)</code>\n\n",name:"Fstat"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Fstatfs!\">Fstatfs</a></h2>\n<code>func Fstatfs(fd int, buf *Statfs_t) (errno int)</code>\n\n",name:"Fstatfs"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Fsync!\">Fsync</a></h2>\n<code>func Fsync(fd int) (errno int)</code>\n\n",name:"Fsync"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Ftruncate!\">Ftruncate</a></h2>\n<code>func Ftruncate(fd int, length int64) (errno int)</code>\n\n",name:"Ftruncate"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Futimes!\">Futimes</a></h2>\n<code>func Futimes(fd int, tv []Timeval) (errno int)</code>\n\n",name:"Futimes"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Futimesat!\">Futimesat</a></h2>\n<code>func Futimesat(dirfd int, path string, tv []Timeval) (errno int)</code>\n<p>\nsys\tfutimesat(dirfd int, path *byte, times *[2]Timeval) (errno int)\n</p>\n\n",name:"Futimesat"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getcwd!\">Getcwd</a></h2>\n<code>func Getcwd(buf []byte) (n int, errno int)</code>\n\n",name:"Getcwd"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getdents!\">Getdents</a></h2>\n<code>func Getdents(fd int, buf []byte) (n int, errno int)</code>\n\n",name:"Getdents"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getegid!\">Getegid</a></h2>\n<code>func Getegid() (egid int)</code>\n\n",name:"Getegid"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Geteuid!\">Geteuid</a></h2>\n<code>func Geteuid() (euid int)</code>\n\n",name:"Geteuid"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getgid!\">Getgid</a></h2>\n<code>func Getgid() (gid int)</code>\n\n",name:"Getgid"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getgroups!\">Getgroups</a></h2>\n<code>func Getgroups() (gids []int, errno int)</code>\n\n",name:"Getgroups"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getpagesize!\">Getpagesize</a></h2>\n<code>func Getpagesize() int</code>\n\n",name:"Getpagesize"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getpeername!\">Getpeername</a></h2>\n<code>func Getpeername(fd int) (sa Sockaddr, errno int)</code>\n\n",name:"Getpeername"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getpgid!\">Getpgid</a></h2>\n<code>func Getpgid(pid int) (pgid int, errno int)</code>\n\n",name:"Getpgid"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getpgrp!\">Getpgrp</a></h2>\n<code>func Getpgrp() (pid int)</code>\n\n",name:"Getpgrp"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getpid!\">Getpid</a></h2>\n<code>func Getpid() (pid int)</code>\n\n",name:"Getpid"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getppid!\">Getppid</a></h2>\n<code>func Getppid() (ppid int)</code>\n\n",name:"Getppid"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getrlimit!\">Getrlimit</a></h2>\n<code>func Getrlimit(resource int, rlim *Rlimit) (errno int)</code>\n\n",name:"Getrlimit"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getrusage!\">Getrusage</a></h2>\n<code>func Getrusage(who int, rusage *Rusage) (errno int)</code>\n\n",name:"Getrusage"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getsockname!\">Getsockname</a></h2>\n<code>func Getsockname(fd int) (sa Sockaddr, errno int)</code>\n\n",name:"Getsockname"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Gettid!\">Gettid</a></h2>\n<code>func Gettid() (tid int)</code>\n\n",name:"Gettid"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Gettimeofday!\">Gettimeofday</a></h2>\n<code>func Gettimeofday(tv *Timeval) (errno int)</code>\n\n",name:"Gettimeofday"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getuid!\">Getuid</a></h2>\n<code>func Getuid() (uid int)</code>\n\n",name:"Getuid"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Getwd!\">Getwd</a></h2>\n<code>func Getwd() (wd string, errno int)</code>\n<p>\nsys\tGetcwd(buf []byte) (n int, errno int)\n</p>\n\n",name:"Getwd"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:InotifyAddWatch!\">InotifyAddWatch</a></h2>\n<code>func InotifyAddWatch(fd int, pathname string, mask uint32) (watchdesc int, errno int)</code>\n\n",name:"InotifyAddWatch"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:InotifyInit!\">InotifyInit</a></h2>\n<code>func InotifyInit() (fd int, errno int)</code>\n\n",name:"InotifyInit"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:InotifyInit1!\">InotifyInit1</a></h2>\n<code>func InotifyInit1(flags int) (fd int, errno int)</code>\n\n",name:"InotifyInit1"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:InotifyRmWatch!\">InotifyRmWatch</a></h2>\n<code>func InotifyRmWatch(fd int, watchdesc uint32) (success int, errno int)</code>\n\n",name:"InotifyRmWatch"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Ioperm!\">Ioperm</a></h2>\n<code>func Ioperm(from int, num int, on int) (errno int)</code>\n\n",name:"Ioperm"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Iopl!\">Iopl</a></h2>\n<code>func Iopl(level int) (errno int)</code>\n\n",name:"Iopl"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Kill!\">Kill</a></h2>\n<code>func Kill(pid int, sig int) (errno int)</code>\n\n",name:"Kill"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Klogctl!\">Klogctl</a></h2>\n<code>func Klogctl(typ int, buf []byte) (n int, errno int)</code>\n\n",name:"Klogctl"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Lchown!\">Lchown</a></h2>\n<code>func Lchown(path string, uid int, gid int) (errno int)</code>\n\n",name:"Lchown"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Link!\">Link</a></h2>\n<code>func Link(oldpath string, newpath string) (errno int)</code>\n\n",name:"Link"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Listen!\">Listen</a></h2>\n<code>func Listen(s int, n int) (errno int)</code>\n\n",name:"Listen"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Lstat!\">Lstat</a></h2>\n<code>func Lstat(path string, stat *Stat_t) (errno int)</code>\n\n",name:"Lstat"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Mkdir!\">Mkdir</a></h2>\n<code>func Mkdir(path string, mode uint32) (errno int)</code>\n\n",name:"Mkdir"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Mkdirat!\">Mkdirat</a></h2>\n<code>func Mkdirat(dirfd int, path string, mode uint32) (errno int)</code>\n\n",name:"Mkdirat"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Mknod!\">Mknod</a></h2>\n<code>func Mknod(path string, mode uint32, dev int) (errno int)</code>\n\n",name:"Mknod"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Mknodat!\">Mknodat</a></h2>\n<code>func Mknodat(dirfd int, path string, mode uint32, dev int) (errno int)</code>\n\n",name:"Mknodat"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Nanosleep!\">Nanosleep</a></h2>\n<code>func Nanosleep(time *Timespec, leftover *Timespec) (errno int)</code>\n\n",name:"Nanosleep"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:NsecToTimespec!\">NsecToTimespec</a></h2>\n<code>func NsecToTimespec(nsec int64) (ts Timespec)</code>\n\n",name:"NsecToTimespec"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:NsecToTimeval!\">NsecToTimeval</a></h2>\n<code>func NsecToTimeval(nsec int64) (tv Timeval)</code>\n\n",name:"NsecToTimeval"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Open!\">Open</a></h2>\n<code>func Open(path string, mode int, perm uint32) (fd int, errno int)</code>\n<p>\nsys\topen(path string, mode int, perm uint32) (fd int, errno int)\n</p>\n\n",name:"Open"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Openat!\">Openat</a></h2>\n<code>func Openat(dirfd int, path string, flags int, mode uint32) (fd int, errno int)</code>\n<p>\nsys\topenat(dirfd int, path string, flags int, mode uint32) (fd int, errno int)\n</p>\n\n",name:"Openat"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Pause!\">Pause</a></h2>\n<code>func Pause() (errno int)</code>\n\n",name:"Pause"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Pipe!\">Pipe</a></h2>\n<code>func Pipe(p []int) (errno int)</code>\n<p>\nsys\tpipe(p *[2]_C_int) (errno int)\n</p>\n\n",name:"Pipe"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:PivotRoot!\">PivotRoot</a></h2>\n<code>func PivotRoot(newroot string, putold string) (errno int)</code>\n\n",name:"PivotRoot"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Pread!\">Pread</a></h2>\n<code>func Pread(fd int, p []byte, offset int64) (n int, errno int)</code>\n\n",name:"Pread"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:PtraceAttach!\">PtraceAttach</a></h2>\n<code>func PtraceAttach(pid int) (errno int)</code>\n\n",name:"PtraceAttach"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:PtraceCont!\">PtraceCont</a></h2>\n<code>func PtraceCont(pid int, signal int) (errno int)</code>\n\n",name:"PtraceCont"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:PtraceDetach!\">PtraceDetach</a></h2>\n<code>func PtraceDetach(pid int) (errno int)</code>\n\n",name:"PtraceDetach"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:PtraceForkExec!\">PtraceForkExec</a></h2>\n<code>func PtraceForkExec(argv0 string, argv []string, envv []string, dir string, fd []int) (pid int, err int)</code>\n<p>\nPtraceForkExec is like ForkExec, but starts the child in a traced state.\n</p>\n\n",name:"PtraceForkExec"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:PtraceGetEventMsg!\">PtraceGetEventMsg</a></h2>\n<code>func PtraceGetEventMsg(pid int) (msg uint, errno int)</code>\n\n",name:"PtraceGetEventMsg"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:PtraceGetRegs!\">PtraceGetRegs</a></h2>\n<code>func PtraceGetRegs(pid int, regsout *PtraceRegs) (errno int)</code>\n\n",name:"PtraceGetRegs"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:PtracePeekData!\">PtracePeekData</a></h2>\n<code>func PtracePeekData(pid int, addr uintptr, out []byte) (count int, errno int)</code>\n\n",name:"PtracePeekData"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:PtracePeekText!\">PtracePeekText</a></h2>\n<code>func PtracePeekText(pid int, addr uintptr, out []byte) (count int, errno int)</code>\n\n",name:"PtracePeekText"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:PtracePokeData!\">PtracePokeData</a></h2>\n<code>func PtracePokeData(pid int, addr uintptr, data []byte) (count int, errno int)</code>\n\n",name:"PtracePokeData"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:PtracePokeText!\">PtracePokeText</a></h2>\n<code>func PtracePokeText(pid int, addr uintptr, data []byte) (count int, errno int)</code>\n\n",name:"PtracePokeText"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:PtraceSetOptions!\">PtraceSetOptions</a></h2>\n<code>func PtraceSetOptions(pid int, options int) (errno int)</code>\n\n",name:"PtraceSetOptions"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:PtraceSetRegs!\">PtraceSetRegs</a></h2>\n<code>func PtraceSetRegs(pid int, regs *PtraceRegs) (errno int)</code>\n\n",name:"PtraceSetRegs"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:PtraceSingleStep!\">PtraceSingleStep</a></h2>\n<code>func PtraceSingleStep(pid int) (errno int)</code>\n\n",name:"PtraceSingleStep"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Pwrite!\">Pwrite</a></h2>\n<code>func Pwrite(fd int, p []byte, offset int64) (n int, errno int)</code>\n\n",name:"Pwrite"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:RawSyscall!\">RawSyscall</a></h2>\n<code>func RawSyscall(trap, a1, a2, a3 uintptr) (r1, r2, err uintptr)</code>\n\n",name:"RawSyscall"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Read!\">Read</a></h2>\n<code>func Read(fd int, p []byte) (n int, errno int)</code>\n\n",name:"Read"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Readlink!\">Readlink</a></h2>\n<code>func Readlink(path string, buf []byte) (n int, errno int)</code>\n\n",name:"Readlink"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Recvfrom!\">Recvfrom</a></h2>\n<code>func Recvfrom(fd int, p []byte, flags int) (n int, from Sockaddr, errno int)</code>\n\n",name:"Recvfrom"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Rename!\">Rename</a></h2>\n<code>func Rename(oldpath string, newpath string) (errno int)</code>\n\n",name:"Rename"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Renameat!\">Renameat</a></h2>\n<code>func Renameat(olddirfd int, oldpath string, newdirfd int, newpath string) (errno int)</code>\n\n",name:"Renameat"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Rmdir!\">Rmdir</a></h2>\n<code>func Rmdir(path string) (errno int)</code>\n\n",name:"Rmdir"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Seek!\">Seek</a></h2>\n<code>func Seek(fd int, offset int64, whence int) (newoffset int64, errno int)</code>\n<p>\nUnderlying system call writes to newoffset via pointer.\nImplemented in assembly to avoid allocation.\n</p>\n\n",name:"Seek"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Select!\">Select</a></h2>\n<code>func Select(nfd int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (n int, errno int)</code>\n\n",name:"Select"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Sendto!\">Sendto</a></h2>\n<code>func Sendto(fd int, p []byte, flags int, to Sockaddr) (errno int)</code>\n\n",name:"Sendto"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:SetNonblock!\">SetNonblock</a></h2>\n<code>func SetNonblock(fd int, nonblocking bool) (errno int)</code>\n\n",name:"SetNonblock"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Setdomainname!\">Setdomainname</a></h2>\n<code>func Setdomainname(p []byte) (errno int)</code>\n\n",name:"Setdomainname"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Setfsgid!\">Setfsgid</a></h2>\n<code>func Setfsgid(gid int) (errno int)</code>\n\n",name:"Setfsgid"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Setfsuid!\">Setfsuid</a></h2>\n<code>func Setfsuid(uid int) (errno int)</code>\n\n",name:"Setfsuid"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Setgid!\">Setgid</a></h2>\n<code>func Setgid(gid int) (errno int)</code>\n\n",name:"Setgid"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Setgroups!\">Setgroups</a></h2>\n<code>func Setgroups(gids []int) (errno int)</code>\n\n",name:"Setgroups"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Sethostname!\">Sethostname</a></h2>\n<code>func Sethostname(p []byte) (errno int)</code>\n\n",name:"Sethostname"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Setpgid!\">Setpgid</a></h2>\n<code>func Setpgid(pid int, pgid int) (errno int)</code>\n\n",name:"Setpgid"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Setregid!\">Setregid</a></h2>\n<code>func Setregid(rgid int, egid int) (errno int)</code>\n\n",name:"Setregid"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Setresgid!\">Setresgid</a></h2>\n<code>func Setresgid(rgid int, egid int, sgid int) (errno int)</code>\n\n",name:"Setresgid"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Setresuid!\">Setresuid</a></h2>\n<code>func Setresuid(ruid int, euid int, suid int) (errno int)</code>\n\n",name:"Setresuid"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Setreuid!\">Setreuid</a></h2>\n<code>func Setreuid(ruid int, euid int) (errno int)</code>\n\n",name:"Setreuid"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Setrlimit!\">Setrlimit</a></h2>\n<code>func Setrlimit(resource int, rlim *Rlimit) (errno int)</code>\n\n",name:"Setrlimit"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Setsid!\">Setsid</a></h2>\n<code>func Setsid() (pid int, errno int)</code>\n\n",name:"Setsid"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:SetsockoptInt!\">SetsockoptInt</a></h2>\n<code>func SetsockoptInt(fd, level, opt int, value int) (errno int)</code>\n\n",name:"SetsockoptInt"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:SetsockoptLinger!\">SetsockoptLinger</a></h2>\n<code>func SetsockoptLinger(fd, level, opt int, l *Linger) (errno int)</code>\n\n",name:"SetsockoptLinger"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:SetsockoptString!\">SetsockoptString</a></h2>\n<code>func SetsockoptString(fd, level, opt int, s string) (errno int)</code>\n\n",name:"SetsockoptString"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:SetsockoptTimeval!\">SetsockoptTimeval</a></h2>\n<code>func SetsockoptTimeval(fd, level, opt int, tv *Timeval) (errno int)</code>\n\n",name:"SetsockoptTimeval"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Settimeofday!\">Settimeofday</a></h2>\n<code>func Settimeofday(tv *Timeval) (errno int)</code>\n\n",name:"Settimeofday"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Setuid!\">Setuid</a></h2>\n<code>func Setuid(uid int) (errno int)</code>\n\n",name:"Setuid"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Shutdown!\">Shutdown</a></h2>\n<code>func Shutdown(s, how int) (errno int)</code>\n\n",name:"Shutdown"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Sleep!\">Sleep</a></h2>\n<code>func Sleep(nsec int64) (errno int)</code>\n\n",name:"Sleep"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Socket!\">Socket</a></h2>\n<code>func Socket(domain, typ, proto int) (fd, errno int)</code>\n\n",name:"Socket"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Socketpair!\">Socketpair</a></h2>\n<code>func Socketpair(domain, typ, proto int) (fd [2]int, errno int)</code>\n\n",name:"Socketpair"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Splice!\">Splice</a></h2>\n<code>func Splice(rfd int, roff *int64, wfd int, woff *int64, len int, flags int) (n int64, errno int)</code>\n\n",name:"Splice"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Stat!\">Stat</a></h2>\n<code>func Stat(path string, stat *Stat_t) (errno int)</code>\n\n",name:"Stat"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Statfs!\">Statfs</a></h2>\n<code>func Statfs(path string, buf *Statfs_t) (errno int)</code>\n\n",name:"Statfs"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:StringArrayPtr!\">StringArrayPtr</a></h2>\n<code>func StringArrayPtr(ss []string) []*byte</code>\n<p>\nConvert array of string to array\nof NUL-terminated byte pointer.\n</p>\n\n",name:"StringArrayPtr"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:StringBytePtr!\">StringBytePtr</a></h2>\n<code>func StringBytePtr(s string) *byte</code>\n<p>\nStringBytePtr returns a pointer to a NUL-terminated array of bytes\ncontaining the text of s.\n</p>\n\n",name:"StringBytePtr"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:StringByteSlice!\">StringByteSlice</a></h2>\n<code>func StringByteSlice(s string) []byte</code>\n<p>\nStringByteSlice returns a NUL-terminated slice of bytes\ncontaining the text of s.\n</p>\n\n",name:"StringByteSlice"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Symlink!\">Symlink</a></h2>\n<code>func Symlink(oldpath string, newpath string) (errno int)</code>\n\n",name:"Symlink"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Sync!\">Sync</a></h2>\n<code>func Sync()</code>\n\n",name:"Sync"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:SyncFileRange!\">SyncFileRange</a></h2>\n<code>func SyncFileRange(fd int, off int64, n int64, flags int) (errno int)</code>\n\n",name:"SyncFileRange"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Syscall!\">Syscall</a></h2>\n<code>func Syscall(trap, a1, a2, a3 uintptr) (r1, r2, err uintptr)</code>\n\n",name:"Syscall"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Syscall6!\">Syscall6</a></h2>\n<code>func Syscall6(trap, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2, err uintptr)</code>\n\n",name:"Syscall6"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Sysinfo!\">Sysinfo</a></h2>\n<code>func Sysinfo(info *Sysinfo_t) (errno int)</code>\n\n",name:"Sysinfo"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Tee!\">Tee</a></h2>\n<code>func Tee(rfd int, wfd int, len int, flags int) (n int64, errno int)</code>\n\n",name:"Tee"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Tgkill!\">Tgkill</a></h2>\n<code>func Tgkill(tgid int, tid int, sig int) (errno int)</code>\n\n",name:"Tgkill"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Time!\">Time</a></h2>\n<code>func Time(t *Time_t) (tt Time_t, errno int)</code>\n\n",name:"Time"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Times!\">Times</a></h2>\n<code>func Times(tms *Tms) (ticks uintptr, errno int)</code>\n\n",name:"Times"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:TimespecToNsec!\">TimespecToNsec</a></h2>\n<code>func TimespecToNsec(ts Timespec) int64</code>\n\n",name:"TimespecToNsec"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:TimevalToNsec!\">TimevalToNsec</a></h2>\n<code>func TimevalToNsec(tv Timeval) int64</code>\n\n",name:"TimevalToNsec"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Truncate!\">Truncate</a></h2>\n<code>func Truncate(path string, length int64) (errno int)</code>\n\n",name:"Truncate"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Umask!\">Umask</a></h2>\n<code>func Umask(mask int) (oldmask int)</code>\n\n",name:"Umask"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Uname!\">Uname</a></h2>\n<code>func Uname(buf *Utsname) (errno int)</code>\n\n",name:"Uname"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Unlink!\">Unlink</a></h2>\n<code>func Unlink(path string) (errno int)</code>\n\n",name:"Unlink"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Unlinkat!\">Unlinkat</a></h2>\n<code>func Unlinkat(dirfd int, path string) (errno int)</code>\n\n",name:"Unlinkat"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Unshare!\">Unshare</a></h2>\n<code>func Unshare(flags int) (errno int)</code>\n\n",name:"Unshare"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Ustat!\">Ustat</a></h2>\n<code>func Ustat(dev int, ubuf *Ustat_t) (errno int)</code>\n\n",name:"Ustat"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Utime!\">Utime</a></h2>\n<code>func Utime(path string, buf *Utimbuf) (errno int)</code>\n\n",name:"Utime"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Utimes!\">Utimes</a></h2>\n<code>func Utimes(path string, tv []Timeval) (errno int)</code>\n<p>\nsys\tutimes(path string, times *[2]Timeval) (errno int)\n</p>\n\n",name:"Utimes"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Wait4!\">Wait4</a></h2>\n<code>func Wait4(pid int, wstatus *WaitStatus, options int, rusage *Rusage) (wpid int, errno int)</code>\n<p>\nsys\twait4(pid int, wstatus *_C_int, options int, rusage *Rusage) (wpid int, errno int)\n</p>\n\n",name:"Wait4"},{html:"\n<h2><a class=\"black\" href=\"?f:\">func</a> <a href=\"?f:Write!\">Write</a></h2>\n<code>func Write(fd int, p []byte) (n int, errno int)</code>\n\n",name:"Write"}],consts:[{html:"\n<h2><a class=\"black\" href=\"?c:\">const</a> <a href=\"?c:SYS_RESTART_SYSCALL!\"><em>group</em></a></h2>\n<pre>const (\n\tSYS_RESTART_SYSCALL        = 0\n\tSYS_EXIT                   = 1\n\tSYS_FORK                   = 2\n\tSYS_READ                   = 3\n\tSYS_WRITE                  = 4\n\tSYS_OPEN                   = 5\n\tSYS_CLOSE                  = 6\n\tSYS_WAITPID                = 7\n\tSYS_CREAT                  = 8\n\tSYS_LINK                   = 9\n\tSYS_UNLINK                 = 10\n\tSYS_EXECVE                 = 11\n\tSYS_CHDIR                  = 12\n\tSYS_TIME                   = 13\n\tSYS_MKNOD                  = 14\n\tSYS_CHMOD                  = 15\n\tSYS_LCHOWN                 = 16\n\tSYS_BREAK                  = 17\n\tSYS_OLDSTAT                = 18\n\tSYS_LSEEK                  = 19\n\tSYS_GETPID                 = 20\n\tSYS_MOUNT                  = 21\n\tSYS_UMOUNT                 = 22\n\tSYS_SETUID                 = 23\n\tSYS_GETUID                 = 24\n\tSYS_STIME                  = 25\n\tSYS_PTRACE                 = 26\n\tSYS_ALARM                  = 27\n\tSYS_OLDFSTAT               = 28\n\tSYS_PAUSE                  = 29\n\tSYS_UTIME                  = 30\n\tSYS_STTY                   = 31\n\tSYS_GTTY                   = 32\n\tSYS_ACCESS                 = 33\n\tSYS_NICE                   = 34\n\tSYS_FTIME                  = 35\n\tSYS_SYNC                   = 36\n\tSYS_KILL                   = 37\n\tSYS_RENAME                 = 38\n\tSYS_MKDIR                  = 39\n\tSYS_RMDIR                  = 40\n\tSYS_DUP                    = 41\n\tSYS_PIPE                   = 42\n\tSYS_TIMES                  = 43\n\tSYS_PROF                   = 44\n\tSYS_BRK                    = 45\n\tSYS_SETGID                 = 46\n\tSYS_GETGID                 = 47\n\tSYS_SIGNAL                 = 48\n\tSYS_GETEUID                = 49\n\tSYS_GETEGID                = 50\n\tSYS_ACCT                   = 51\n\tSYS_UMOUNT2                = 52\n\tSYS_LOCK                   = 53\n\tSYS_IOCTL                  = 54\n\tSYS_FCNTL                  = 55\n\tSYS_MPX                    = 56\n\tSYS_SETPGID                = 57\n\tSYS_ULIMIT                 = 58\n\tSYS_OLDOLDUNAME            = 59\n\tSYS_UMASK                  = 60\n\tSYS_CHROOT                 = 61\n\tSYS_USTAT                  = 62\n\tSYS_DUP2                   = 63\n\tSYS_GETPPID                = 64\n\tSYS_GETPGRP                = 65\n\tSYS_SETSID                 = 66\n\tSYS_SIGACTION              = 67\n\tSYS_SGETMASK               = 68\n\tSYS_SSETMASK               = 69\n\tSYS_SETREUID               = 70\n\tSYS_SETREGID               = 71\n\tSYS_SIGSUSPEND             = 72\n\tSYS_SIGPENDING             = 73\n\tSYS_SETHOSTNAME            = 74\n\tSYS_SETRLIMIT              = 75\n\tSYS_GETRLIMIT              = 76\n\tSYS_GETRUSAGE              = 77\n\tSYS_GETTIMEOFDAY           = 78\n\tSYS_SETTIMEOFDAY           = 79\n\tSYS_GETGROUPS              = 80\n\tSYS_SETGROUPS              = 81\n\tSYS_SELECT                 = 82\n\tSYS_SYMLINK                = 83\n\tSYS_OLDLSTAT               = 84\n\tSYS_READLINK               = 85\n\tSYS_USELIB                 = 86\n\tSYS_SWAPON                 = 87\n\tSYS_REBOOT                 = 88\n\tSYS_READDIR                = 89\n\tSYS_MMAP                   = 90\n\tSYS_MUNMAP                 = 91\n\tSYS_TRUNCATE               = 92\n\tSYS_FTRUNCATE              = 93\n\tSYS_FCHMOD                 = 94\n\tSYS_FCHOWN                 = 95\n\tSYS_GETPRIORITY            = 96\n\tSYS_SETPRIORITY            = 97\n\tSYS_PROFIL                 = 98\n\tSYS_STATFS                 = 99\n\tSYS_FSTATFS                = 100\n\tSYS_IOPERM                 = 101\n\tSYS_SOCKETCALL             = 102\n\tSYS_SYSLOG                 = 103\n\tSYS_SETITIMER              = 104\n\tSYS_GETITIMER              = 105\n\tSYS_STAT                   = 106\n\tSYS_LSTAT                  = 107\n\tSYS_FSTAT                  = 108\n\tSYS_OLDUNAME               = 109\n\tSYS_IOPL                   = 110\n\tSYS_VHANGUP                = 111\n\tSYS_IDLE                   = 112\n\tSYS_VM86OLD                = 113\n\tSYS_WAIT4                  = 114\n\tSYS_SWAPOFF                = 115\n\tSYS_SYSINFO                = 116\n\tSYS_IPC                    = 117\n\tSYS_FSYNC                  = 118\n\tSYS_SIGRETURN              = 119\n\tSYS_CLONE                  = 120\n\tSYS_SETDOMAINNAME          = 121\n\tSYS_UNAME                  = 122\n\tSYS_MODIFY_LDT             = 123\n\tSYS_ADJTIMEX               = 124\n\tSYS_MPROTECT               = 125\n\tSYS_SIGPROCMASK            = 126\n\tSYS_CREATE_MODULE          = 127\n\tSYS_INIT_MODULE            = 128\n\tSYS_DELETE_MODULE          = 129\n\tSYS_GET_KERNEL_SYMS        = 130\n\tSYS_QUOTACTL               = 131\n\tSYS_GETPGID                = 132\n\tSYS_FCHDIR                 = 133\n\tSYS_BDFLUSH                = 134\n\tSYS_SYSFS                  = 135\n\tSYS_PERSONALITY            = 136\n\tSYS_AFS_SYSCALL            = 137\n\tSYS_SETFSUID               = 138\n\tSYS_SETFSGID               = 139\n\tSYS__LLSEEK                = 140\n\tSYS_GETDENTS               = 141\n\tSYS__NEWSELECT             = 142\n\tSYS_FLOCK                  = 143\n\tSYS_MSYNC                  = 144\n\tSYS_READV                  = 145\n\tSYS_WRITEV                 = 146\n\tSYS_GETSID                 = 147\n\tSYS_FDATASYNC              = 148\n\tSYS__SYSCTL                = 149\n\tSYS_MLOCK                  = 150\n\tSYS_MUNLOCK                = 151\n\tSYS_MLOCKALL               = 152\n\tSYS_MUNLOCKALL             = 153\n\tSYS_SCHED_SETPARAM         = 154\n\tSYS_SCHED_GETPARAM         = 155\n\tSYS_SCHED_SETSCHEDULER     = 156\n\tSYS_SCHED_GETSCHEDULER     = 157\n\tSYS_SCHED_YIELD            = 158\n\tSYS_SCHED_GET_PRIORITY_MAX = 159\n\tSYS_SCHED_GET_PRIORITY_MIN = 160\n\tSYS_SCHED_RR_GET_INTERVAL  = 161\n\tSYS_NANOSLEEP              = 162\n\tSYS_MREMAP                 = 163\n\tSYS_SETRESUID              = 164\n\tSYS_GETRESUID              = 165\n\tSYS_VM86                   = 166\n\tSYS_QUERY_MODULE           = 167\n\tSYS_POLL                   = 168\n\tSYS_NFSSERVCTL             = 169\n\tSYS_SETRESGID              = 170\n\tSYS_GETRESGID              = 171\n\tSYS_PRCTL                  = 172\n\tSYS_RT_SIGRETURN           = 173\n\tSYS_RT_SIGACTION           = 174\n\tSYS_RT_SIGPROCMASK         = 175\n\tSYS_RT_SIGPENDING          = 176\n\tSYS_RT_SIGTIMEDWAIT        = 177\n\tSYS_RT_SIGQUEUEINFO        = 178\n\tSYS_RT_SIGSUSPEND          = 179\n\tSYS_PREAD64                = 180\n\tSYS_PWRITE64               = 181\n\tSYS_CHOWN                  = 182\n\tSYS_GETCWD                 = 183\n\tSYS_CAPGET                 = 184\n\tSYS_CAPSET                 = 185\n\tSYS_SIGALTSTACK            = 186\n\tSYS_SENDFILE               = 187\n\tSYS_GETPMSG                = 188\n\tSYS_PUTPMSG                = 189\n\tSYS_VFORK                  = 190\n\tSYS_UGETRLIMIT             = 191\n\tSYS_MMAP2                  = 192\n\tSYS_TRUNCATE64             = 193\n\tSYS_FTRUNCATE64            = 194\n\tSYS_STAT64                 = 195\n\tSYS_LSTAT64                = 196\n\tSYS_FSTAT64                = 197\n\tSYS_LCHOWN32               = 198\n\tSYS_GETUID32               = 199\n\tSYS_GETGID32               = 200\n\tSYS_GETEUID32              = 201\n\tSYS_GETEGID32              = 202\n\tSYS_SETREUID32             = 203\n\tSYS_SETREGID32             = 204\n\tSYS_GETGROUPS32            = 205\n\tSYS_SETGROUPS32            = 206\n\tSYS_FCHOWN32               = 207\n\tSYS_SETRESUID32            = 208\n\tSYS_GETRESUID32            = 209\n\tSYS_SETRESGID32            = 210\n\tSYS_GETRESGID32            = 211\n\tSYS_CHOWN32                = 212\n\tSYS_SETUID32               = 213\n\tSYS_SETGID32               = 214\n\tSYS_SETFSUID32             = 215\n\tSYS_SETFSGID32             = 216\n\tSYS_PIVOT_ROOT             = 217\n\tSYS_MINCORE                = 218\n\tSYS_MADVISE                = 219\n\tSYS_MADVISE1               = 219\n\tSYS_GETDENTS64             = 220\n\tSYS_FCNTL64                = 221\n\tSYS_GETTID                 = 224\n\tSYS_READAHEAD              = 225\n\tSYS_SETXATTR               = 226\n\tSYS_LSETXATTR              = 227\n\tSYS_FSETXATTR              = 228\n\tSYS_GETXATTR               = 229\n\tSYS_LGETXATTR              = 230\n\tSYS_FGETXATTR              = 231\n\tSYS_LISTXATTR              = 232\n\tSYS_LLISTXATTR             = 233\n\tSYS_FLISTXATTR             = 234\n\tSYS_REMOVEXATTR            = 235\n\tSYS_LREMOVEXATTR           = 236\n\tSYS_FREMOVEXATTR           = 237\n\tSYS_TKILL                  = 238\n\tSYS_SENDFILE64             = 239\n\tSYS_FUTEX                  = 240\n\tSYS_SCHED_SETAFFINITY      = 241\n\tSYS_SCHED_GETAFFINITY      = 242\n\tSYS_SET_THREAD_AREA        = 243\n\tSYS_GET_THREAD_AREA        = 244\n\tSYS_IO_SETUP               = 245\n\tSYS_IO_DESTROY             = 246\n\tSYS_IO_GETEVENTS           = 247\n\tSYS_IO_SUBMIT              = 248\n\tSYS_IO_CANCEL              = 249\n\tSYS_FADVISE64              = 250\n\tSYS_EXIT_GROUP             = 252\n\tSYS_LOOKUP_DCOOKIE         = 253\n\tSYS_EPOLL_CREATE           = 254\n\tSYS_EPOLL_CTL              = 255\n\tSYS_EPOLL_WAIT             = 256\n\tSYS_REMAP_FILE_PAGES       = 257\n\tSYS_SET_TID_ADDRESS        = 258\n\tSYS_TIMER_CREATE           = 259\n\tSYS_STATFS64               = 268\n\tSYS_FSTATFS64              = 269\n\tSYS_TGKILL                 = 270\n\tSYS_UTIMES                 = 271\n\tSYS_FADVISE64_64           = 272\n\tSYS_VSERVER                = 273\n\tSYS_MBIND                  = 274\n\tSYS_GET_MEMPOLICY          = 275\n\tSYS_SET_MEMPOLICY          = 276\n\tSYS_MQ_OPEN                = 277\n\tSYS_KEXEC_LOAD             = 283\n\tSYS_WAITID                 = 284\n\tSYS_ADD_KEY                = 286\n\tSYS_REQUEST_KEY            = 287\n\tSYS_KEYCTL                 = 288\n\tSYS_IOPRIO_SET             = 289\n\tSYS_IOPRIO_GET             = 290\n\tSYS_INOTIFY_INIT           = 291\n\tSYS_INOTIFY_ADD_WATCH      = 292\n\tSYS_INOTIFY_RM_WATCH       = 293\n\tSYS_MIGRATE_PAGES          = 294\n\tSYS_OPENAT                 = 295\n\tSYS_MKDIRAT                = 296\n\tSYS_MKNODAT                = 297\n\tSYS_FCHOWNAT               = 298\n\tSYS_FUTIMESAT              = 299\n\tSYS_FSTATAT64              = 300\n\tSYS_UNLINKAT               = 301\n\tSYS_RENAMEAT               = 302\n\tSYS_LINKAT                 = 303\n\tSYS_SYMLINKAT              = 304\n\tSYS_READLINKAT             = 305\n\tSYS_FCHMODAT               = 306\n\tSYS_FACCESSAT              = 307\n\tSYS_PSELECT6               = 308\n\tSYS_PPOLL                  = 309\n\tSYS_UNSHARE                = 310\n\tSYS_SET_ROBUST_LIST        = 311\n\tSYS_GET_ROBUST_LIST        = 312\n\tSYS_SPLICE                 = 313\n\tSYS_SYNC_FILE_RANGE        = 314\n\tSYS_TEE                    = 315\n\tSYS_VMSPLICE               = 316\n\tSYS_MOVE_PAGES             = 317\n\tSYS_GETCPU                 = 318\n\tSYS_EPOLL_PWAIT            = 319\n\tSYS_UTIMENSAT              = 320\n\tSYS_SIGNALFD               = 321\n\tSYS_TIMERFD_CREATE         = 322\n\tSYS_EVENTFD                = 323\n\tSYS_FALLOCATE              = 324\n\tSYS_TIMERFD_SETTIME        = 325\n\tSYS_TIMERFD_GETTIME        = 326\n\tSYS_SIGNALFD4              = 327\n\tSYS_EVENTFD2               = 328\n\tSYS_EPOLL_CREATE1          = 329\n\tSYS_DUP3                   = 330\n\tSYS_PIPE2                  = 331\n\tSYS_INOTIFY_INIT1          = 332\n\tSYS_PREADV                 = 333\n\tSYS_PWRITEV                = 334\n\tSYS_RT_TGSIGQUEUEINFO      = 335\n\tSYS_PERF_EVENT_OPEN        = 336\n)</pre>\n\n",names:["SYS_RESTART_SYSCALL","SYS_EXIT","SYS_FORK","SYS_READ","SYS_WRITE","SYS_OPEN","SYS_CLOSE","SYS_WAITPID","SYS_CREAT","SYS_LINK","SYS_UNLINK","SYS_EXECVE","SYS_CHDIR","SYS_TIME","SYS_MKNOD","SYS_CHMOD","SYS_LCHOWN","SYS_BREAK","SYS_OLDSTAT","SYS_LSEEK","SYS_GETPID","SYS_MOUNT","SYS_UMOUNT","SYS_SETUID","SYS_GETUID","SYS_STIME","SYS_PTRACE","SYS_ALARM","SYS_OLDFSTAT","SYS_PAUSE","SYS_UTIME","SYS_STTY","SYS_GTTY","SYS_ACCESS","SYS_NICE","SYS_FTIME","SYS_SYNC","SYS_KILL","SYS_RENAME","SYS_MKDIR","SYS_RMDIR","SYS_DUP","SYS_PIPE","SYS_TIMES","SYS_PROF","SYS_BRK","SYS_SETGID","SYS_GETGID","SYS_SIGNAL","SYS_GETEUID","SYS_GETEGID","SYS_ACCT","SYS_UMOUNT2","SYS_LOCK","SYS_IOCTL","SYS_FCNTL","SYS_MPX","SYS_SETPGID","SYS_ULIMIT","SYS_OLDOLDUNAME","SYS_UMASK","SYS_CHROOT","SYS_USTAT","SYS_DUP2","SYS_GETPPID","SYS_GETPGRP","SYS_SETSID","SYS_SIGACTION","SYS_SGETMASK","SYS_SSETMASK","SYS_SETREUID","SYS_SETREGID","SYS_SIGSUSPEND","SYS_SIGPENDING","SYS_SETHOSTNAME","SYS_SETRLIMIT","SYS_GETRLIMIT","SYS_GETRUSAGE","SYS_GETTIMEOFDAY","SYS_SETTIMEOFDAY","SYS_GETGROUPS","SYS_SETGROUPS","SYS_SELECT","SYS_SYMLINK","SYS_OLDLSTAT","SYS_READLINK","SYS_USELIB","SYS_SWAPON","SYS_REBOOT","SYS_READDIR","SYS_MMAP","SYS_MUNMAP","SYS_TRUNCATE","SYS_FTRUNCATE","SYS_FCHMOD","SYS_FCHOWN","SYS_GETPRIORITY","SYS_SETPRIORITY","SYS_PROFIL","SYS_STATFS","SYS_FSTATFS","SYS_IOPERM","SYS_SOCKETCALL","SYS_SYSLOG","SYS_SETITIMER","SYS_GETITIMER","SYS_STAT","SYS_LSTAT","SYS_FSTAT","SYS_OLDUNAME","SYS_IOPL","SYS_VHANGUP","SYS_IDLE","SYS_VM86OLD","SYS_WAIT4","SYS_SWAPOFF","SYS_SYSINFO","SYS_IPC","SYS_FSYNC","SYS_SIGRETURN","SYS_CLONE","SYS_SETDOMAINNAME","SYS_UNAME","SYS_MODIFY_LDT","SYS_ADJTIMEX","SYS_MPROTECT","SYS_SIGPROCMASK","SYS_CREATE_MODULE","SYS_INIT_MODULE","SYS_DELETE_MODULE","SYS_GET_KERNEL_SYMS","SYS_QUOTACTL","SYS_GETPGID","SYS_FCHDIR","SYS_BDFLUSH","SYS_SYSFS","SYS_PERSONALITY","SYS_AFS_SYSCALL","SYS_SETFSUID","SYS_SETFSGID","SYS__LLSEEK","SYS_GETDENTS","SYS__NEWSELECT","SYS_FLOCK","SYS_MSYNC","SYS_READV","SYS_WRITEV","SYS_GETSID","SYS_FDATASYNC","SYS__SYSCTL","SYS_MLOCK","SYS_MUNLOCK","SYS_MLOCKALL","SYS_MUNLOCKALL","SYS_SCHED_SETPARAM","SYS_SCHED_GETPARAM","SYS_SCHED_SETSCHEDULER","SYS_SCHED_GETSCHEDULER","SYS_SCHED_YIELD","SYS_SCHED_GET_PRIORITY_MAX","SYS_SCHED_GET_PRIORITY_MIN","SYS_SCHED_RR_GET_INTERVAL","SYS_NANOSLEEP","SYS_MREMAP","SYS_SETRESUID","SYS_GETRESUID","SYS_VM86","SYS_QUERY_MODULE","SYS_POLL","SYS_NFSSERVCTL","SYS_SETRESGID","SYS_GETRESGID","SYS_PRCTL","SYS_RT_SIGRETURN","SYS_RT_SIGACTION","SYS_RT_SIGPROCMASK","SYS_RT_SIGPENDING","SYS_RT_SIGTIMEDWAIT","SYS_RT_SIGQUEUEINFO","SYS_RT_SIGSUSPEND","SYS_PREAD64","SYS_PWRITE64","SYS_CHOWN","SYS_GETCWD","SYS_CAPGET","SYS_CAPSET","SYS_SIGALTSTACK","SYS_SENDFILE","SYS_GETPMSG","SYS_PUTPMSG","SYS_VFORK","SYS_UGETRLIMIT","SYS_MMAP2","SYS_TRUNCATE64","SYS_FTRUNCATE64","SYS_STAT64","SYS_LSTAT64","SYS_FSTAT64","SYS_LCHOWN32","SYS_GETUID32","SYS_GETGID32","SYS_GETEUID32","SYS_GETEGID32","SYS_SETREUID32","SYS_SETREGID32","SYS_GETGROUPS32","SYS_SETGROUPS32","SYS_FCHOWN32","SYS_SETRESUID32","SYS_GETRESUID32","SYS_SETRESGID32","SYS_GETRESGID32","SYS_CHOWN32","SYS_SETUID32","SYS_SETGID32","SYS_SETFSUID32","SYS_SETFSGID32","SYS_PIVOT_ROOT","SYS_MINCORE","SYS_MADVISE","SYS_MADVISE1","SYS_GETDENTS64","SYS_FCNTL64","SYS_GETTID","SYS_READAHEAD","SYS_SETXATTR","SYS_LSETXATTR","SYS_FSETXATTR","SYS_GETXATTR","SYS_LGETXATTR","SYS_FGETXATTR","SYS_LISTXATTR","SYS_LLISTXATTR","SYS_FLISTXATTR","SYS_REMOVEXATTR","SYS_LREMOVEXATTR","SYS_FREMOVEXATTR","SYS_TKILL","SYS_SENDFILE64","SYS_FUTEX","SYS_SCHED_SETAFFINITY","SYS_SCHED_GETAFFINITY","SYS_SET_THREAD_AREA","SYS_GET_THREAD_AREA","SYS_IO_SETUP","SYS_IO_DESTROY","SYS_IO_GETEVENTS","SYS_IO_SUBMIT","SYS_IO_CANCEL","SYS_FADVISE64","SYS_EXIT_GROUP","SYS_LOOKUP_DCOOKIE","SYS_EPOLL_CREATE","SYS_EPOLL_CTL","SYS_EPOLL_WAIT","SYS_REMAP_FILE_PAGES","SYS_SET_TID_ADDRESS","SYS_TIMER_CREATE","SYS_STATFS64","SYS_FSTATFS64","SYS_TGKILL","SYS_UTIMES","SYS_FADVISE64_64","SYS_VSERVER","SYS_MBIND","SYS_GET_MEMPOLICY","SYS_SET_MEMPOLICY","SYS_MQ_OPEN","SYS_KEXEC_LOAD","SYS_WAITID","SYS_ADD_KEY","SYS_REQUEST_KEY","SYS_KEYCTL","SYS_IOPRIO_SET","SYS_IOPRIO_GET","SYS_INOTIFY_INIT","SYS_INOTIFY_ADD_WATCH","SYS_INOTIFY_RM_WATCH","SYS_MIGRATE_PAGES","SYS_OPENAT","SYS_MKDIRAT","SYS_MKNODAT","SYS_FCHOWNAT","SYS_FUTIMESAT","SYS_FSTATAT64","SYS_UNLINKAT","SYS_RENAMEAT","SYS_LINKAT","SYS_SYMLINKAT","SYS_READLINKAT","SYS_FCHMODAT","SYS_FACCESSAT","SYS_PSELECT6","SYS_PPOLL","SYS_UNSHARE","SYS_SET_ROBUST_LIST","SYS_GET_ROBUST_LIST","SYS_SPLICE","SYS_SYNC_FILE_RANGE","SYS_TEE","SYS_VMSPLICE","SYS_MOVE_PAGES","SYS_GETCPU","SYS_EPOLL_PWAIT","SYS_UTIMENSAT","SYS_SIGNALFD","SYS_TIMERFD_CREATE","SYS_EVENTFD","SYS_FALLOCATE","SYS_TIMERFD_SETTIME","SYS_TIMERFD_GETTIME","SYS_SIGNALFD4","SYS_EVENTFD2","SYS_EPOLL_CREATE1","SYS_DUP3","SYS_PIPE2","SYS_INOTIFY_INIT1","SYS_PREADV","SYS_PWRITEV","SYS_RT_TGSIGQUEUEINFO","SYS_PERF_EVENT_OPEN"],type:""},{html:"\n<h2><a class=\"black\" href=\"?c:\">const</a> <a href=\"?c:OS!\">OS</a></h2>\n<pre>const OS = &#34;linux&#34;</pre>\n\n",names:["OS"],type:""},{html:"\n<h2><a class=\"black\" href=\"?c:\">const</a> <a href=\"?c:ImplementsGetwd!\">ImplementsGetwd</a></h2>\n<pre>const ImplementsGetwd = true</pre>\n\n",names:["ImplementsGetwd"],type:""},{html:"\n<h2><a class=\"black\" href=\"?c:\">const</a> <a href=\"?c:ARCH!\">ARCH</a></h2>\n<pre>const ARCH = &#34;386&#34;</pre>\n\n",names:["ARCH"],type:""},{html:"\n<h2><a class=\"black\" href=\"?c:\">const</a> <a href=\"?c:AF_APPLETALK!\"><em>group</em></a></h2>\n<pre>const (\n\tAF_APPLETALK                     = 0x5\n\tAF_ASH                           = 0x12\n\tAF_ATMPVC                        = 0x8\n\tAF_ATMSVC                        = 0x14\n\tAF_AX25                          = 0x3\n\tAF_BLUETOOTH                     = 0x1f\n\tAF_BRIDGE                        = 0x7\n\tAF_CAN                           = 0x1d\n\tAF_DECnet                        = 0xc\n\tAF_ECONET                        = 0x13\n\tAF_FILE                          = 0x1\n\tAF_IEEE802154                    = 0x24\n\tAF_INET                          = 0x2\n\tAF_INET6                         = 0xa\n\tAF_IPX                           = 0x4\n\tAF_IRDA                          = 0x17\n\tAF_ISDN                          = 0x22\n\tAF_IUCV                          = 0x20\n\tAF_KEY                           = 0xf\n\tAF_LLC                           = 0x1a\n\tAF_LOCAL                         = 0x1\n\tAF_MAX                           = 0x25\n\tAF_NETBEUI                       = 0xd\n\tAF_NETLINK                       = 0x10\n\tAF_NETROM                        = 0x6\n\tAF_PACKET                        = 0x11\n\tAF_PHONET                        = 0x23\n\tAF_PPPOX                         = 0x18\n\tAF_RDS                           = 0x15\n\tAF_ROSE                          = 0xb\n\tAF_ROUTE                         = 0x10\n\tAF_RXRPC                         = 0x21\n\tAF_SECURITY                      = 0xe\n\tAF_SNA                           = 0x16\n\tAF_TIPC                          = 0x1e\n\tAF_UNIX                          = 0x1\n\tAF_UNSPEC                        = 0\n\tAF_WANPIPE                       = 0x19\n\tAF_X25                           = 0x9\n\tE2BIG                            = 0x7\n\tEACCES                           = 0xd\n\tEADDRINUSE                       = 0x62\n\tEADDRNOTAVAIL                    = 0x63\n\tEADV                             = 0x44\n\tEAFNOSUPPORT                     = 0x61\n\tEAGAIN                           = 0xb\n\tEALREADY                         = 0x72\n\tEBADE                            = 0x34\n\tEBADF                            = 0x9\n\tEBADFD                           = 0x4d\n\tEBADMSG                          = 0x4a\n\tEBADR                            = 0x35\n\tEBADRQC                          = 0x38\n\tEBADSLT                          = 0x39\n\tEBFONT                           = 0x3b\n\tEBUSY                            = 0x10\n\tECANCELED                        = 0x7d\n\tECHILD                           = 0xa\n\tECHRNG                           = 0x2c\n\tECOMM                            = 0x46\n\tECONNABORTED                     = 0x67\n\tECONNREFUSED                     = 0x6f\n\tECONNRESET                       = 0x68\n\tEDEADLK                          = 0x23\n\tEDEADLOCK                        = 0x23\n\tEDESTADDRREQ                     = 0x59\n\tEDOM                             = 0x21\n\tEDOTDOT                          = 0x49\n\tEDQUOT                           = 0x7a\n\tEEXIST                           = 0x11\n\tEFAULT                           = 0xe\n\tEFBIG                            = 0x1b\n\tEHOSTDOWN                        = 0x70\n\tEHOSTUNREACH                     = 0x71\n\tEIDRM                            = 0x2b\n\tEILSEQ                           = 0x54\n\tEINPROGRESS                      = 0x73\n\tEINTR                            = 0x4\n\tEINVAL                           = 0x16\n\tEIO                              = 0x5\n\tEISCONN                          = 0x6a\n\tEISDIR                           = 0x15\n\tEISNAM                           = 0x78\n\tEKEYEXPIRED                      = 0x7f\n\tEKEYREJECTED                     = 0x81\n\tEKEYREVOKED                      = 0x80\n\tEL2HLT                           = 0x33\n\tEL2NSYNC                         = 0x2d\n\tEL3HLT                           = 0x2e\n\tEL3RST                           = 0x2f\n\tELIBACC                          = 0x4f\n\tELIBBAD                          = 0x50\n\tELIBEXEC                         = 0x53\n\tELIBMAX                          = 0x52\n\tELIBSCN                          = 0x51\n\tELNRNG                           = 0x30\n\tELOOP                            = 0x28\n\tEMEDIUMTYPE                      = 0x7c\n\tEMFILE                           = 0x18\n\tEMLINK                           = 0x1f\n\tEMSGSIZE                         = 0x5a\n\tEMULTIHOP                        = 0x48\n\tENAMETOOLONG                     = 0x24\n\tENAVAIL                          = 0x77\n\tENETDOWN                         = 0x64\n\tENETRESET                        = 0x66\n\tENETUNREACH                      = 0x65\n\tENFILE                           = 0x17\n\tENOANO                           = 0x37\n\tENOBUFS                          = 0x69\n\tENOCSI                           = 0x32\n\tENODATA                          = 0x3d\n\tENODEV                           = 0x13\n\tENOENT                           = 0x2\n\tENOEXEC                          = 0x8\n\tENOKEY                           = 0x7e\n\tENOLCK                           = 0x25\n\tENOLINK                          = 0x43\n\tENOMEDIUM                        = 0x7b\n\tENOMEM                           = 0xc\n\tENOMSG                           = 0x2a\n\tENONET                           = 0x40\n\tENOPKG                           = 0x41\n\tENOPROTOOPT                      = 0x5c\n\tENOSPC                           = 0x1c\n\tENOSR                            = 0x3f\n\tENOSTR                           = 0x3c\n\tENOSYS                           = 0x26\n\tENOTBLK                          = 0xf\n\tENOTCONN                         = 0x6b\n\tENOTDIR                          = 0x14\n\tENOTEMPTY                        = 0x27\n\tENOTNAM                          = 0x76\n\tENOTRECOVERABLE                  = 0x83\n\tENOTSOCK                         = 0x58\n\tENOTSUP                          = 0x5f\n\tENOTTY                           = 0x19\n\tENOTUNIQ                         = 0x4c\n\tENXIO                            = 0x6\n\tEOPNOTSUPP                       = 0x5f\n\tEOVERFLOW                        = 0x4b\n\tEOWNERDEAD                       = 0x82\n\tEPERM                            = 0x1\n\tEPFNOSUPPORT                     = 0x60\n\tEPIPE                            = 0x20\n\tEPOLLERR                         = 0x8\n\tEPOLLET                          = -0x80000000\n\tEPOLLHUP                         = 0x10\n\tEPOLLIN                          = 0x1\n\tEPOLLMSG                         = 0x400\n\tEPOLLONESHOT                     = 0x40000000\n\tEPOLLOUT                         = 0x4\n\tEPOLLPRI                         = 0x2\n\tEPOLLRDBAND                      = 0x80\n\tEPOLLRDHUP                       = 0x2000\n\tEPOLLRDNORM                      = 0x40\n\tEPOLLWRBAND                      = 0x200\n\tEPOLLWRNORM                      = 0x100\n\tEPOLL_CLOEXEC                    = 0x80000\n\tEPOLL_CTL_ADD                    = 0x1\n\tEPOLL_CTL_DEL                    = 0x2\n\tEPOLL_CTL_MOD                    = 0x3\n\tEPOLL_NONBLOCK                   = 0x800\n\tEPROTO                           = 0x47\n\tEPROTONOSUPPORT                  = 0x5d\n\tEPROTOTYPE                       = 0x5b\n\tERANGE                           = 0x22\n\tEREMCHG                          = 0x4e\n\tEREMOTE                          = 0x42\n\tEREMOTEIO                        = 0x79\n\tERESTART                         = 0x55\n\tERFKILL                          = 0x84\n\tEROFS                            = 0x1e\n\tESHUTDOWN                        = 0x6c\n\tESOCKTNOSUPPORT                  = 0x5e\n\tESPIPE                           = 0x1d\n\tESRCH                            = 0x3\n\tESRMNT                           = 0x45\n\tESTALE                           = 0x74\n\tESTRPIPE                         = 0x56\n\tETIME                            = 0x3e\n\tETIMEDOUT                        = 0x6e\n\tETOOMANYREFS                     = 0x6d\n\tETXTBSY                          = 0x1a\n\tEUCLEAN                          = 0x75\n\tEUNATCH                          = 0x31\n\tEUSERS                           = 0x57\n\tEWOULDBLOCK                      = 0xb\n\tEXDEV                            = 0x12\n\tEXFULL                           = 0x36\n\tFD_CLOEXEC                       = 0x1\n\tFD_SETSIZE                       = 0x400\n\tF_DUPFD                          = 0\n\tF_DUPFD_CLOEXEC                  = 0x406\n\tF_EXLCK                          = 0x4\n\tF_GETFD                          = 0x1\n\tF_GETFL                          = 0x3\n\tF_GETLEASE                       = 0x401\n\tF_GETLK                          = 0xc\n\tF_GETLK64                        = 0xc\n\tF_GETOWN                         = 0x9\n\tF_GETOWN_EX                      = 0x10\n\tF_GETSIG                         = 0xb\n\tF_LOCK                           = 0x1\n\tF_NOTIFY                         = 0x402\n\tF_OK                             = 0\n\tF_RDLCK                          = 0\n\tF_SETFD                          = 0x2\n\tF_SETFL                          = 0x4\n\tF_SETLEASE                       = 0x400\n\tF_SETLK                          = 0xd\n\tF_SETLK64                        = 0xd\n\tF_SETLKW                         = 0xe\n\tF_SETLKW64                       = 0xe\n\tF_SETOWN                         = 0x8\n\tF_SETOWN_EX                      = 0xf\n\tF_SETSIG                         = 0xa\n\tF_SHLCK                          = 0x8\n\tF_TEST                           = 0x3\n\tF_TLOCK                          = 0x2\n\tF_ULOCK                          = 0\n\tF_UNLCK                          = 0x2\n\tF_WRLCK                          = 0x1\n\tIN_ACCESS                        = 0x1\n\tIN_ALL_EVENTS                    = 0xfff\n\tIN_ATTRIB                        = 0x4\n\tIN_CLASSA_HOST                   = 0xffffff\n\tIN_CLASSA_MAX                    = 0x80\n\tIN_CLASSA_NET                    = 0xff000000\n\tIN_CLASSA_NSHIFT                 = 0x18\n\tIN_CLASSB_HOST                   = 0xffff\n\tIN_CLASSB_MAX                    = 0x10000\n\tIN_CLASSB_NET                    = 0xffff0000\n\tIN_CLASSB_NSHIFT                 = 0x10\n\tIN_CLASSC_HOST                   = 0xff\n\tIN_CLASSC_NET                    = 0xffffff00\n\tIN_CLASSC_NSHIFT                 = 0x8\n\tIN_CLOEXEC                       = 0x80000\n\tIN_CLOSE                         = 0x18\n\tIN_CLOSE_NOWRITE                 = 0x10\n\tIN_CLOSE_WRITE                   = 0x8\n\tIN_CREATE                        = 0x100\n\tIN_DELETE                        = 0x200\n\tIN_DELETE_SELF                   = 0x400\n\tIN_DONT_FOLLOW                   = 0x2000000\n\tIN_IGNORED                       = 0x8000\n\tIN_ISDIR                         = 0x40000000\n\tIN_LOOPBACKNET                   = 0x7f\n\tIN_MASK_ADD                      = 0x20000000\n\tIN_MODIFY                        = 0x2\n\tIN_MOVE                          = 0xc0\n\tIN_MOVED_FROM                    = 0x40\n\tIN_MOVED_TO                      = 0x80\n\tIN_MOVE_SELF                     = 0x800\n\tIN_NONBLOCK                      = 0x800\n\tIN_ONESHOT                       = 0x80000000\n\tIN_ONLYDIR                       = 0x1000000\n\tIN_OPEN                          = 0x20\n\tIN_Q_OVERFLOW                    = 0x4000\n\tIN_UNMOUNT                       = 0x2000\n\tIPPROTO_AH                       = 0x33\n\tIPPROTO_COMP                     = 0x6c\n\tIPPROTO_DCCP                     = 0x21\n\tIPPROTO_DSTOPTS                  = 0x3c\n\tIPPROTO_EGP                      = 0x8\n\tIPPROTO_ENCAP                    = 0x62\n\tIPPROTO_ESP                      = 0x32\n\tIPPROTO_FRAGMENT                 = 0x2c\n\tIPPROTO_GRE                      = 0x2f\n\tIPPROTO_HOPOPTS                  = 0\n\tIPPROTO_ICMP                     = 0x1\n\tIPPROTO_ICMPV6                   = 0x3a\n\tIPPROTO_IDP                      = 0x16\n\tIPPROTO_IGMP                     = 0x2\n\tIPPROTO_IP                       = 0\n\tIPPROTO_IPIP                     = 0x4\n\tIPPROTO_IPV6                     = 0x29\n\tIPPROTO_MTP                      = 0x5c\n\tIPPROTO_NONE                     = 0x3b\n\tIPPROTO_PIM                      = 0x67\n\tIPPROTO_PUP                      = 0xc\n\tIPPROTO_RAW                      = 0xff\n\tIPPROTO_ROUTING                  = 0x2b\n\tIPPROTO_RSVP                     = 0x2e\n\tIPPROTO_SCTP                     = 0x84\n\tIPPROTO_TCP                      = 0x6\n\tIPPROTO_TP                       = 0x1d\n\tIPPROTO_UDP                      = 0x11\n\tIPPROTO_UDPLITE                  = 0x88\n\tIPV6_2292DSTOPTS                 = 0x4\n\tIPV6_2292HOPLIMIT                = 0x8\n\tIPV6_2292HOPOPTS                 = 0x3\n\tIPV6_2292PKTINFO                 = 0x2\n\tIPV6_2292PKTOPTIONS              = 0x6\n\tIPV6_2292RTHDR                   = 0x5\n\tIPV6_ADDRFORM                    = 0x1\n\tIPV6_ADD_MEMBERSHIP              = 0x14\n\tIPV6_AUTHHDR                     = 0xa\n\tIPV6_CHECKSUM                    = 0x7\n\tIPV6_DROP_MEMBERSHIP             = 0x15\n\tIPV6_DSTOPTS                     = 0x3b\n\tIPV6_HOPLIMIT                    = 0x34\n\tIPV6_HOPOPTS                     = 0x36\n\tIPV6_IPSEC_POLICY                = 0x22\n\tIPV6_JOIN_ANYCAST                = 0x1b\n\tIPV6_JOIN_GROUP                  = 0x14\n\tIPV6_LEAVE_ANYCAST               = 0x1c\n\tIPV6_LEAVE_GROUP                 = 0x15\n\tIPV6_MTU                         = 0x18\n\tIPV6_MTU_DISCOVER                = 0x17\n\tIPV6_MULTICAST_HOPS              = 0x12\n\tIPV6_MULTICAST_IF                = 0x11\n\tIPV6_MULTICAST_LOOP              = 0x13\n\tIPV6_NEXTHOP                     = 0x9\n\tIPV6_PKTINFO                     = 0x32\n\tIPV6_PMTUDISC_DO                 = 0x2\n\tIPV6_PMTUDISC_DONT               = 0\n\tIPV6_PMTUDISC_PROBE              = 0x3\n\tIPV6_PMTUDISC_WANT               = 0x1\n\tIPV6_RECVDSTOPTS                 = 0x3a\n\tIPV6_RECVERR                     = 0x19\n\tIPV6_RECVHOPLIMIT                = 0x33\n\tIPV6_RECVHOPOPTS                 = 0x35\n\tIPV6_RECVPKTINFO                 = 0x31\n\tIPV6_RECVRTHDR                   = 0x38\n\tIPV6_RECVTCLASS                  = 0x42\n\tIPV6_ROUTER_ALERT                = 0x16\n\tIPV6_RTHDR                       = 0x39\n\tIPV6_RTHDRDSTOPTS                = 0x37\n\tIPV6_RTHDR_LOOSE                 = 0\n\tIPV6_RTHDR_STRICT                = 0x1\n\tIPV6_RTHDR_TYPE_0                = 0\n\tIPV6_RXDSTOPTS                   = 0x3b\n\tIPV6_RXHOPOPTS                   = 0x36\n\tIPV6_TCLASS                      = 0x43\n\tIPV6_UNICAST_HOPS                = 0x10\n\tIPV6_V6ONLY                      = 0x1a\n\tIPV6_XFRM_POLICY                 = 0x23\n\tIP_ADD_MEMBERSHIP                = 0x23\n\tIP_ADD_SOURCE_MEMBERSHIP         = 0x27\n\tIP_BLOCK_SOURCE                  = 0x26\n\tIP_DEFAULT_MULTICAST_LOOP        = 0x1\n\tIP_DEFAULT_MULTICAST_TTL         = 0x1\n\tIP_DF                            = 0x4000\n\tIP_DROP_MEMBERSHIP               = 0x24\n\tIP_DROP_SOURCE_MEMBERSHIP        = 0x28\n\tIP_HDRINCL                       = 0x3\n\tIP_MAXPACKET                     = 0xffff\n\tIP_MAX_MEMBERSHIPS               = 0x14\n\tIP_MF                            = 0x2000\n\tIP_MSFILTER                      = 0x29\n\tIP_MSS                           = 0x240\n\tIP_MTU_DISCOVER                  = 0xa\n\tIP_MULTICAST_IF                  = 0x20\n\tIP_MULTICAST_LOOP                = 0x22\n\tIP_MULTICAST_TTL                 = 0x21\n\tIP_OFFMASK                       = 0x1fff\n\tIP_OPTIONS                       = 0x4\n\tIP_PKTINFO                       = 0x8\n\tIP_PKTOPTIONS                    = 0x9\n\tIP_PMTUDISC                      = 0xa\n\tIP_PMTUDISC_DO                   = 0x2\n\tIP_PMTUDISC_DONT                 = 0\n\tIP_PMTUDISC_PROBE                = 0x3\n\tIP_PMTUDISC_WANT                 = 0x1\n\tIP_RECVERR                       = 0xb\n\tIP_RECVOPTS                      = 0x6\n\tIP_RECVRETOPTS                   = 0x7\n\tIP_RECVTOS                       = 0xd\n\tIP_RECVTTL                       = 0xc\n\tIP_RETOPTS                       = 0x7\n\tIP_RF                            = 0x8000\n\tIP_ROUTER_ALERT                  = 0x5\n\tIP_TOS                           = 0x1\n\tIP_TTL                           = 0x2\n\tIP_UNBLOCK_SOURCE                = 0x25\n\tNAME_MAX                         = 0xff\n\tO_ACCMODE                        = 0x3\n\tO_APPEND                         = 0x400\n\tO_ASYNC                          = 0x2000\n\tO_CLOEXEC                        = 0x80000\n\tO_CREAT                          = 0x40\n\tO_DIRECT                         = 0x4000\n\tO_DIRECTORY                      = 0x10000\n\tO_DSYNC                          = 0x1000\n\tO_EXCL                           = 0x80\n\tO_FSYNC                          = 0x1000\n\tO_LARGEFILE                      = 0x8000\n\tO_NDELAY                         = 0x800\n\tO_NOATIME                        = 0x40000\n\tO_NOCTTY                         = 0x100\n\tO_NOFOLLOW                       = 0x20000\n\tO_NONBLOCK                       = 0x800\n\tO_RDONLY                         = 0\n\tO_RDWR                           = 0x2\n\tO_RSYNC                          = 0x1000\n\tO_SYNC                           = 0x1000\n\tO_TRUNC                          = 0x200\n\tO_WRONLY                         = 0x1\n\tPACKET_ADD_MEMBERSHIP            = 0x1\n\tPACKET_BROADCAST                 = 0x1\n\tPACKET_DROP_MEMBERSHIP           = 0x2\n\tPACKET_FASTROUTE                 = 0x6\n\tPACKET_HOST                      = 0\n\tPACKET_LOOPBACK                  = 0x5\n\tPACKET_MR_ALLMULTI               = 0x2\n\tPACKET_MR_MULTICAST              = 0\n\tPACKET_MR_PROMISC                = 0x1\n\tPACKET_MULTICAST                 = 0x2\n\tPACKET_OTHERHOST                 = 0x3\n\tPACKET_OUTGOING                  = 0x4\n\tPACKET_RECV_OUTPUT               = 0x3\n\tPACKET_RX_RING                   = 0x5\n\tPACKET_STATISTICS                = 0x6\n\tPTRACE_ATTACH                    = 0x10\n\tPTRACE_BTS_CLEAR                 = 0x2c\n\tPTRACE_BTS_CONFIG                = 0x28\n\tPTRACE_BTS_DRAIN                 = 0x2d\n\tPTRACE_BTS_GET                   = 0x2b\n\tPTRACE_BTS_O_ALLOC               = 0x8\n\tPTRACE_BTS_O_SCHED               = 0x2\n\tPTRACE_BTS_O_SIGNAL              = 0x4\n\tPTRACE_BTS_O_TRACE               = 0x1\n\tPTRACE_BTS_SIZE                  = 0x2a\n\tPTRACE_BTS_STATUS                = 0x29\n\tPTRACE_CONT                      = 0x7\n\tPTRACE_DETACH                    = 0x11\n\tPTRACE_EVENT_CLONE               = 0x3\n\tPTRACE_EVENT_EXEC                = 0x4\n\tPTRACE_EVENT_EXIT                = 0x6\n\tPTRACE_EVENT_FORK                = 0x1\n\tPTRACE_EVENT_VFORK               = 0x2\n\tPTRACE_EVENT_VFORK_DONE          = 0x5\n\tPTRACE_GETEVENTMSG               = 0x4201\n\tPTRACE_GETFPREGS                 = 0xe\n\tPTRACE_GETFPXREGS                = 0x12\n\tPTRACE_GETREGS                   = 0xc\n\tPTRACE_GETSIGINFO                = 0x4202\n\tPTRACE_GET_THREAD_AREA           = 0x19\n\tPTRACE_KILL                      = 0x8\n\tPTRACE_OLDSETOPTIONS             = 0x15\n\tPTRACE_O_MASK                    = 0x7f\n\tPTRACE_O_TRACECLONE              = 0x8\n\tPTRACE_O_TRACEEXEC               = 0x10\n\tPTRACE_O_TRACEEXIT               = 0x40\n\tPTRACE_O_TRACEFORK               = 0x2\n\tPTRACE_O_TRACESYSGOOD            = 0x1\n\tPTRACE_O_TRACEVFORK              = 0x4\n\tPTRACE_O_TRACEVFORKDONE          = 0x20\n\tPTRACE_PEEKDATA                  = 0x2\n\tPTRACE_PEEKTEXT                  = 0x1\n\tPTRACE_PEEKUSR                   = 0x3\n\tPTRACE_POKEDATA                  = 0x5\n\tPTRACE_POKETEXT                  = 0x4\n\tPTRACE_POKEUSR                   = 0x6\n\tPTRACE_SETFPREGS                 = 0xf\n\tPTRACE_SETFPXREGS                = 0x13\n\tPTRACE_SETOPTIONS                = 0x4200\n\tPTRACE_SETREGS                   = 0xd\n\tPTRACE_SETSIGINFO                = 0x4203\n\tPTRACE_SET_THREAD_AREA           = 0x1a\n\tPTRACE_SINGLEBLOCK               = 0x21\n\tPTRACE_SINGLESTEP                = 0x9\n\tPTRACE_SYSCALL                   = 0x18\n\tPTRACE_SYSEMU                    = 0x1f\n\tPTRACE_SYSEMU_SINGLESTEP         = 0x20\n\tPTRACE_TRACEME                   = 0\n\tSHUT_RD                          = 0\n\tSHUT_RDWR                        = 0x2\n\tSHUT_WR                          = 0x1\n\tSIGABRT                          = 0x6\n\tSIGALRM                          = 0xe\n\tSIGBUS                           = 0x7\n\tSIGCHLD                          = 0x11\n\tSIGCLD                           = 0x11\n\tSIGCONT                          = 0x12\n\tSIGFPE                           = 0x8\n\tSIGHUP                           = 0x1\n\tSIGILL                           = 0x4\n\tSIGINT                           = 0x2\n\tSIGIO                            = 0x1d\n\tSIGIOT                           = 0x6\n\tSIGKILL                          = 0x9\n\tSIGPIPE                          = 0xd\n\tSIGPOLL                          = 0x1d\n\tSIGPROF                          = 0x1b\n\tSIGPWR                           = 0x1e\n\tSIGQUIT                          = 0x3\n\tSIGSEGV                          = 0xb\n\tSIGSTKFLT                        = 0x10\n\tSIGSTOP                          = 0x13\n\tSIGSYS                           = 0x1f\n\tSIGTERM                          = 0xf\n\tSIGTRAP                          = 0x5\n\tSIGTSTP                          = 0x14\n\tSIGTTIN                          = 0x15\n\tSIGTTOU                          = 0x16\n\tSIGUNUSED                        = 0x1f\n\tSIGURG                           = 0x17\n\tSIGUSR1                          = 0xa\n\tSIGUSR2                          = 0xc\n\tSIGVTALRM                        = 0x1a\n\tSIGWINCH                         = 0x1c\n\tSIGXCPU                          = 0x18\n\tSIGXFSZ                          = 0x19\n\tSIOCADDDLCI                      = 0x8980\n\tSIOCADDMULTI                     = 0x8931\n\tSIOCADDRT                        = 0x890b\n\tSIOCATMARK                       = 0x8905\n\tSIOCDARP                         = 0x8953\n\tSIOCDELDLCI                      = 0x8981\n\tSIOCDELMULTI                     = 0x8932\n\tSIOCDELRT                        = 0x890c\n\tSIOCDEVPRIVATE                   = 0x89f0\n\tSIOCDIFADDR                      = 0x8936\n\tSIOCDRARP                        = 0x8960\n\tSIOCGARP                         = 0x8954\n\tSIOCGIFADDR                      = 0x8915\n\tSIOCGIFBR                        = 0x8940\n\tSIOCGIFBRDADDR                   = 0x8919\n\tSIOCGIFCONF                      = 0x8912\n\tSIOCGIFCOUNT                     = 0x8938\n\tSIOCGIFDSTADDR                   = 0x8917\n\tSIOCGIFENCAP                     = 0x8925\n\tSIOCGIFFLAGS                     = 0x8913\n\tSIOCGIFHWADDR                    = 0x8927\n\tSIOCGIFINDEX                     = 0x8933\n\tSIOCGIFMAP                       = 0x8970\n\tSIOCGIFMEM                       = 0x891f\n\tSIOCGIFMETRIC                    = 0x891d\n\tSIOCGIFMTU                       = 0x8921\n\tSIOCGIFNAME                      = 0x8910\n\tSIOCGIFNETMASK                   = 0x891b\n\tSIOCGIFPFLAGS                    = 0x8935\n\tSIOCGIFSLAVE                     = 0x8929\n\tSIOCGIFTXQLEN                    = 0x8942\n\tSIOCGPGRP                        = 0x8904\n\tSIOCGRARP                        = 0x8961\n\tSIOCGSTAMP                       = 0x8906\n\tSIOCGSTAMPNS                     = 0x8907\n\tSIOCPROTOPRIVATE                 = 0x89e0\n\tSIOCRTMSG                        = 0x890d\n\tSIOCSARP                         = 0x8955\n\tSIOCSIFADDR                      = 0x8916\n\tSIOCSIFBR                        = 0x8941\n\tSIOCSIFBRDADDR                   = 0x891a\n\tSIOCSIFDSTADDR                   = 0x8918\n\tSIOCSIFENCAP                     = 0x8926\n\tSIOCSIFFLAGS                     = 0x8914\n\tSIOCSIFHWADDR                    = 0x8924\n\tSIOCSIFHWBROADCAST               = 0x8937\n\tSIOCSIFLINK                      = 0x8911\n\tSIOCSIFMAP                       = 0x8971\n\tSIOCSIFMEM                       = 0x8920\n\tSIOCSIFMETRIC                    = 0x891e\n\tSIOCSIFMTU                       = 0x8922\n\tSIOCSIFNAME                      = 0x8923\n\tSIOCSIFNETMASK                   = 0x891c\n\tSIOCSIFPFLAGS                    = 0x8934\n\tSIOCSIFSLAVE                     = 0x8930\n\tSIOCSIFTXQLEN                    = 0x8943\n\tSIOCSPGRP                        = 0x8902\n\tSIOCSRARP                        = 0x8962\n\tSIOGIFINDEX                      = 0x8933\n\tSOCK_CLOEXEC                     = 0x80000\n\tSOCK_DCCP                        = 0x6\n\tSOCK_DGRAM                       = 0x2\n\tSOCK_NONBLOCK                    = 0x800\n\tSOCK_PACKET                      = 0xa\n\tSOCK_RAW                         = 0x3\n\tSOCK_RDM                         = 0x4\n\tSOCK_SEQPACKET                   = 0x5\n\tSOCK_STREAM                      = 0x1\n\tSOL_AAL                          = 0x109\n\tSOL_ATM                          = 0x108\n\tSOL_DECNET                       = 0x105\n\tSOL_ICMPV6                       = 0x3a\n\tSOL_IP                           = 0\n\tSOL_IPV6                         = 0x29\n\tSOL_IRDA                         = 0x10a\n\tSOL_PACKET                       = 0x107\n\tSOL_RAW                          = 0xff\n\tSOL_SOCKET                       = 0x1\n\tSOL_TCP                          = 0x6\n\tSOL_X25                          = 0x106\n\tSOMAXCONN                        = 0x80\n\tSO_ACCEPTCONN                    = 0x1e\n\tSO_ATTACH_FILTER                 = 0x1a\n\tSO_BINDTODEVICE                  = 0x19\n\tSO_BROADCAST                     = 0x6\n\tSO_BSDCOMPAT                     = 0xe\n\tSO_DEBUG                         = 0x1\n\tSO_DETACH_FILTER                 = 0x1b\n\tSO_DOMAIN                        = 0x27\n\tSO_DONTROUTE                     = 0x5\n\tSO_ERROR                         = 0x4\n\tSO_KEEPALIVE                     = 0x9\n\tSO_LINGER                        = 0xd\n\tSO_MARK                          = 0x24\n\tSO_NO_CHECK                      = 0xb\n\tSO_OOBINLINE                     = 0xa\n\tSO_PASSCRED                      = 0x10\n\tSO_PASSSEC                       = 0x22\n\tSO_PEERCRED                      = 0x11\n\tSO_PEERNAME                      = 0x1c\n\tSO_PEERSEC                       = 0x1f\n\tSO_PRIORITY                      = 0xc\n\tSO_PROTOCOL                      = 0x26\n\tSO_RCVBUF                        = 0x8\n\tSO_RCVBUFFORCE                   = 0x21\n\tSO_RCVLOWAT                      = 0x12\n\tSO_RCVTIMEO                      = 0x14\n\tSO_REUSEADDR                     = 0x2\n\tSO_SECURITY_AUTHENTICATION       = 0x16\n\tSO_SECURITY_ENCRYPTION_NETWORK   = 0x18\n\tSO_SECURITY_ENCRYPTION_TRANSPORT = 0x17\n\tSO_SNDBUF                        = 0x7\n\tSO_SNDBUFFORCE                   = 0x20\n\tSO_SNDLOWAT                      = 0x13\n\tSO_SNDTIMEO                      = 0x15\n\tSO_TIMESTAMP                     = 0x1d\n\tSO_TIMESTAMPING                  = 0x25\n\tSO_TIMESTAMPNS                   = 0x23\n\tSO_TYPE                          = 0x3\n\tS_BLKSIZE                        = 0x200\n\tS_IEXEC                          = 0x40\n\tS_IFBLK                          = 0x6000\n\tS_IFCHR                          = 0x2000\n\tS_IFDIR                          = 0x4000\n\tS_IFIFO                          = 0x1000\n\tS_IFLNK                          = 0xa000\n\tS_IFMT                           = 0xf000\n\tS_IFREG                          = 0x8000\n\tS_IFSOCK                         = 0xc000\n\tS_IREAD                          = 0x100\n\tS_IRGRP                          = 0x20\n\tS_IROTH                          = 0x4\n\tS_IRUSR                          = 0x100\n\tS_IRWXG                          = 0x38\n\tS_IRWXO                          = 0x7\n\tS_IRWXU                          = 0x1c0\n\tS_ISGID                          = 0x400\n\tS_ISUID                          = 0x800\n\tS_ISVTX                          = 0x200\n\tS_IWGRP                          = 0x10\n\tS_IWOTH                          = 0x2\n\tS_IWRITE                         = 0x80\n\tS_IWUSR                          = 0x80\n\tS_IXGRP                          = 0x8\n\tS_IXOTH                          = 0x1\n\tS_IXUSR                          = 0x40\n\tTCP_CONGESTION                   = 0xd\n\tTCP_CORK                         = 0x3\n\tTCP_DEFER_ACCEPT                 = 0x9\n\tTCP_INFO                         = 0xb\n\tTCP_KEEPCNT                      = 0x6\n\tTCP_KEEPIDLE                     = 0x4\n\tTCP_KEEPINTVL                    = 0x5\n\tTCP_LINGER2                      = 0x8\n\tTCP_MAXSEG                       = 0x2\n\tTCP_MAXWIN                       = 0xffff\n\tTCP_MAX_WINSHIFT                 = 0xe\n\tTCP_MD5SIG                       = 0xe\n\tTCP_MD5SIG_MAXKEYLEN             = 0x50\n\tTCP_MSS                          = 0x200\n\tTCP_NODELAY                      = 0x1\n\tTCP_QUICKACK                     = 0xc\n\tTCP_SYNCNT                       = 0x7\n\tTCP_WINDOW_CLAMP                 = 0xa\n\tWALL                             = 0x40000000\n\tWCLONE                           = 0x80000000\n\tWCONTINUED                       = 0x8\n\tWEXITED                          = 0x4\n\tWNOHANG                          = 0x1\n\tWNOTHREAD                        = 0x20000000\n\tWNOWAIT                          = 0x1000000\n\tWORDSIZE                         = 0x20\n\tWSTOPPED                         = 0x2\n\tWUNTRACED                        = 0x2\n)</pre>\n<p>\nConstants\n</p>\n\n",names:["AF_APPLETALK","AF_ASH","AF_ATMPVC","AF_ATMSVC","AF_AX25","AF_BLUETOOTH","AF_BRIDGE","AF_CAN","AF_DECnet","AF_ECONET","AF_FILE","AF_IEEE802154","AF_INET","AF_INET6","AF_IPX","AF_IRDA","AF_ISDN","AF_IUCV","AF_KEY","AF_LLC","AF_LOCAL","AF_MAX","AF_NETBEUI","AF_NETLINK","AF_NETROM","AF_PACKET","AF_PHONET","AF_PPPOX","AF_RDS","AF_ROSE","AF_ROUTE","AF_RXRPC","AF_SECURITY","AF_SNA","AF_TIPC","AF_UNIX","AF_UNSPEC","AF_WANPIPE","AF_X25","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EADV","EAFNOSUPPORT","EAGAIN","EALREADY","EBADE","EBADF","EBADFD","EBADMSG","EBADR","EBADRQC","EBADSLT","EBFONT","EBUSY","ECANCELED","ECHILD","ECHRNG","ECOMM","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDEADLK","EDEADLOCK","EDESTADDRREQ","EDOM","EDOTDOT","EDQUOT","EEXIST","EFAULT","EFBIG","EHOSTDOWN","EHOSTUNREACH","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","EISNAM","EKEYEXPIRED","EKEYREJECTED","EKEYREVOKED","EL2HLT","EL2NSYNC","EL3HLT","EL3RST","ELIBACC","ELIBBAD","ELIBEXEC","ELIBMAX","ELIBSCN","ELNRNG","ELOOP","EMEDIUMTYPE","EMFILE","EMLINK","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENAVAIL","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOANO","ENOBUFS","ENOCSI","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOKEY","ENOLCK","ENOLINK","ENOMEDIUM","ENOMEM","ENOMSG","ENONET","ENOPKG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTNAM","ENOTRECOVERABLE","ENOTSOCK","ENOTSUP","ENOTTY","ENOTUNIQ","ENXIO","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPOLLERR","EPOLLET","EPOLLHUP","EPOLLIN","EPOLLMSG","EPOLLONESHOT","EPOLLOUT","EPOLLPRI","EPOLLRDBAND","EPOLLRDHUP","EPOLLRDNORM","EPOLLWRBAND","EPOLLWRNORM","EPOLL_CLOEXEC","EPOLL_CTL_ADD","EPOLL_CTL_DEL","EPOLL_CTL_MOD","EPOLL_NONBLOCK","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERANGE","EREMCHG","EREMOTE","EREMOTEIO","ERESTART","ERFKILL","EROFS","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESRMNT","ESTALE","ESTRPIPE","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","EUCLEAN","EUNATCH","EUSERS","EWOULDBLOCK","EXDEV","EXFULL","FD_CLOEXEC","FD_SETSIZE","F_DUPFD","F_DUPFD_CLOEXEC","F_EXLCK","F_GETFD","F_GETFL","F_GETLEASE","F_GETLK","F_GETLK64","F_GETOWN","F_GETOWN_EX","F_GETSIG","F_LOCK","F_NOTIFY","F_OK","F_RDLCK","F_SETFD","F_SETFL","F_SETLEASE","F_SETLK","F_SETLK64","F_SETLKW","F_SETLKW64","F_SETOWN","F_SETOWN_EX","F_SETSIG","F_SHLCK","F_TEST","F_TLOCK","F_ULOCK","F_UNLCK","F_WRLCK","IN_ACCESS","IN_ALL_EVENTS","IN_ATTRIB","IN_CLASSA_HOST","IN_CLASSA_MAX","IN_CLASSA_NET","IN_CLASSA_NSHIFT","IN_CLASSB_HOST","IN_CLASSB_MAX","IN_CLASSB_NET","IN_CLASSB_NSHIFT","IN_CLASSC_HOST","IN_CLASSC_NET","IN_CLASSC_NSHIFT","IN_CLOEXEC","IN_CLOSE","IN_CLOSE_NOWRITE","IN_CLOSE_WRITE","IN_CREATE","IN_DELETE","IN_DELETE_SELF","IN_DONT_FOLLOW","IN_IGNORED","IN_ISDIR","IN_LOOPBACKNET","IN_MASK_ADD","IN_MODIFY","IN_MOVE","IN_MOVED_FROM","IN_MOVED_TO","IN_MOVE_SELF","IN_NONBLOCK","IN_ONESHOT","IN_ONLYDIR","IN_OPEN","IN_Q_OVERFLOW","IN_UNMOUNT","IPPROTO_AH","IPPROTO_COMP","IPPROTO_DCCP","IPPROTO_DSTOPTS","IPPROTO_EGP","IPPROTO_ENCAP","IPPROTO_ESP","IPPROTO_FRAGMENT","IPPROTO_GRE","IPPROTO_HOPOPTS","IPPROTO_ICMP","IPPROTO_ICMPV6","IPPROTO_IDP","IPPROTO_IGMP","IPPROTO_IP","IPPROTO_IPIP","IPPROTO_IPV6","IPPROTO_MTP","IPPROTO_NONE","IPPROTO_PIM","IPPROTO_PUP","IPPROTO_RAW","IPPROTO_ROUTING","IPPROTO_RSVP","IPPROTO_SCTP","IPPROTO_TCP","IPPROTO_TP","IPPROTO_UDP","IPPROTO_UDPLITE","IPV6_2292DSTOPTS","IPV6_2292HOPLIMIT","IPV6_2292HOPOPTS","IPV6_2292PKTINFO","IPV6_2292PKTOPTIONS","IPV6_2292RTHDR","IPV6_ADDRFORM","IPV6_ADD_MEMBERSHIP","IPV6_AUTHHDR","IPV6_CHECKSUM","IPV6_DROP_MEMBERSHIP","IPV6_DSTOPTS","IPV6_HOPLIMIT","IPV6_HOPOPTS","IPV6_IPSEC_POLICY","IPV6_JOIN_ANYCAST","IPV6_JOIN_GROUP","IPV6_LEAVE_ANYCAST","IPV6_LEAVE_GROUP","IPV6_MTU","IPV6_MTU_DISCOVER","IPV6_MULTICAST_HOPS","IPV6_MULTICAST_IF","IPV6_MULTICAST_LOOP","IPV6_NEXTHOP","IPV6_PKTINFO","IPV6_PMTUDISC_DO","IPV6_PMTUDISC_DONT","IPV6_PMTUDISC_PROBE","IPV6_PMTUDISC_WANT","IPV6_RECVDSTOPTS","IPV6_RECVERR","IPV6_RECVHOPLIMIT","IPV6_RECVHOPOPTS","IPV6_RECVPKTINFO","IPV6_RECVRTHDR","IPV6_RECVTCLASS","IPV6_ROUTER_ALERT","IPV6_RTHDR","IPV6_RTHDRDSTOPTS","IPV6_RTHDR_LOOSE","IPV6_RTHDR_STRICT","IPV6_RTHDR_TYPE_0","IPV6_RXDSTOPTS","IPV6_RXHOPOPTS","IPV6_TCLASS","IPV6_UNICAST_HOPS","IPV6_V6ONLY","IPV6_XFRM_POLICY","IP_ADD_MEMBERSHIP","IP_ADD_SOURCE_MEMBERSHIP","IP_BLOCK_SOURCE","IP_DEFAULT_MULTICAST_LOOP","IP_DEFAULT_MULTICAST_TTL","IP_DF","IP_DROP_MEMBERSHIP","IP_DROP_SOURCE_MEMBERSHIP","IP_HDRINCL","IP_MAXPACKET","IP_MAX_MEMBERSHIPS","IP_MF","IP_MSFILTER","IP_MSS","IP_MTU_DISCOVER","IP_MULTICAST_IF","IP_MULTICAST_LOOP","IP_MULTICAST_TTL","IP_OFFMASK","IP_OPTIONS","IP_PKTINFO","IP_PKTOPTIONS","IP_PMTUDISC","IP_PMTUDISC_DO","IP_PMTUDISC_DONT","IP_PMTUDISC_PROBE","IP_PMTUDISC_WANT","IP_RECVERR","IP_RECVOPTS","IP_RECVRETOPTS","IP_RECVTOS","IP_RECVTTL","IP_RETOPTS","IP_RF","IP_ROUTER_ALERT","IP_TOS","IP_TTL","IP_UNBLOCK_SOURCE","NAME_MAX","O_ACCMODE","O_APPEND","O_ASYNC","O_CLOEXEC","O_CREAT","O_DIRECT","O_DIRECTORY","O_DSYNC","O_EXCL","O_FSYNC","O_LARGEFILE","O_NDELAY","O_NOATIME","O_NOCTTY","O_NOFOLLOW","O_NONBLOCK","O_RDONLY","O_RDWR","O_RSYNC","O_SYNC","O_TRUNC","O_WRONLY","PACKET_ADD_MEMBERSHIP","PACKET_BROADCAST","PACKET_DROP_MEMBERSHIP","PACKET_FASTROUTE","PACKET_HOST","PACKET_LOOPBACK","PACKET_MR_ALLMULTI","PACKET_MR_MULTICAST","PACKET_MR_PROMISC","PACKET_MULTICAST","PACKET_OTHERHOST","PACKET_OUTGOING","PACKET_RECV_OUTPUT","PACKET_RX_RING","PACKET_STATISTICS","PTRACE_ATTACH","PTRACE_BTS_CLEAR","PTRACE_BTS_CONFIG","PTRACE_BTS_DRAIN","PTRACE_BTS_GET","PTRACE_BTS_O_ALLOC","PTRACE_BTS_O_SCHED","PTRACE_BTS_O_SIGNAL","PTRACE_BTS_O_TRACE","PTRACE_BTS_SIZE","PTRACE_BTS_STATUS","PTRACE_CONT","PTRACE_DETACH","PTRACE_EVENT_CLONE","PTRACE_EVENT_EXEC","PTRACE_EVENT_EXIT","PTRACE_EVENT_FORK","PTRACE_EVENT_VFORK","PTRACE_EVENT_VFORK_DONE","PTRACE_GETEVENTMSG","PTRACE_GETFPREGS","PTRACE_GETFPXREGS","PTRACE_GETREGS","PTRACE_GETSIGINFO","PTRACE_GET_THREAD_AREA","PTRACE_KILL","PTRACE_OLDSETOPTIONS","PTRACE_O_MASK","PTRACE_O_TRACECLONE","PTRACE_O_TRACEEXEC","PTRACE_O_TRACEEXIT","PTRACE_O_TRACEFORK","PTRACE_O_TRACESYSGOOD","PTRACE_O_TRACEVFORK","PTRACE_O_TRACEVFORKDONE","PTRACE_PEEKDATA","PTRACE_PEEKTEXT","PTRACE_PEEKUSR","PTRACE_POKEDATA","PTRACE_POKETEXT","PTRACE_POKEUSR","PTRACE_SETFPREGS","PTRACE_SETFPXREGS","PTRACE_SETOPTIONS","PTRACE_SETREGS","PTRACE_SETSIGINFO","PTRACE_SET_THREAD_AREA","PTRACE_SINGLEBLOCK","PTRACE_SINGLESTEP","PTRACE_SYSCALL","PTRACE_SYSEMU","PTRACE_SYSEMU_SINGLESTEP","PTRACE_TRACEME","SHUT_RD","SHUT_RDWR","SHUT_WR","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCLD","SIGCONT","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGIOT","SIGKILL","SIGPIPE","SIGPOLL","SIGPROF","SIGPWR","SIGQUIT","SIGSEGV","SIGSTKFLT","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGUNUSED","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SIOCADDDLCI","SIOCADDMULTI","SIOCADDRT","SIOCATMARK","SIOCDARP","SIOCDELDLCI","SIOCDELMULTI","SIOCDELRT","SIOCDEVPRIVATE","SIOCDIFADDR","SIOCDRARP","SIOCGARP","SIOCGIFADDR","SIOCGIFBR","SIOCGIFBRDADDR","SIOCGIFCONF","SIOCGIFCOUNT","SIOCGIFDSTADDR","SIOCGIFENCAP","SIOCGIFFLAGS","SIOCGIFHWADDR","SIOCGIFINDEX","SIOCGIFMAP","SIOCGIFMEM","SIOCGIFMETRIC","SIOCGIFMTU","SIOCGIFNAME","SIOCGIFNETMASK","SIOCGIFPFLAGS","SIOCGIFSLAVE","SIOCGIFTXQLEN","SIOCGPGRP","SIOCGRARP","SIOCGSTAMP","SIOCGSTAMPNS","SIOCPROTOPRIVATE","SIOCRTMSG","SIOCSARP","SIOCSIFADDR","SIOCSIFBR","SIOCSIFBRDADDR","SIOCSIFDSTADDR","SIOCSIFENCAP","SIOCSIFFLAGS","SIOCSIFHWADDR","SIOCSIFHWBROADCAST","SIOCSIFLINK","SIOCSIFMAP","SIOCSIFMEM","SIOCSIFMETRIC","SIOCSIFMTU","SIOCSIFNAME","SIOCSIFNETMASK","SIOCSIFPFLAGS","SIOCSIFSLAVE","SIOCSIFTXQLEN","SIOCSPGRP","SIOCSRARP","SIOGIFINDEX","SOCK_CLOEXEC","SOCK_DCCP","SOCK_DGRAM","SOCK_NONBLOCK","SOCK_PACKET","SOCK_RAW","SOCK_RDM","SOCK_SEQPACKET","SOCK_STREAM","SOL_AAL","SOL_ATM","SOL_DECNET","SOL_ICMPV6","SOL_IP","SOL_IPV6","SOL_IRDA","SOL_PACKET","SOL_RAW","SOL_SOCKET","SOL_TCP","SOL_X25","SOMAXCONN","SO_ACCEPTCONN","SO_ATTACH_FILTER","SO_BINDTODEVICE","SO_BROADCAST","SO_BSDCOMPAT","SO_DEBUG","SO_DETACH_FILTER","SO_DOMAIN","SO_DONTROUTE","SO_ERROR","SO_KEEPALIVE","SO_LINGER","SO_MARK","SO_NO_CHECK","SO_OOBINLINE","SO_PASSCRED","SO_PASSSEC","SO_PEERCRED","SO_PEERNAME","SO_PEERSEC","SO_PRIORITY","SO_PROTOCOL","SO_RCVBUF","SO_RCVBUFFORCE","SO_RCVLOWAT","SO_RCVTIMEO","SO_REUSEADDR","SO_SECURITY_AUTHENTICATION","SO_SECURITY_ENCRYPTION_NETWORK","SO_SECURITY_ENCRYPTION_TRANSPORT","SO_SNDBUF","SO_SNDBUFFORCE","SO_SNDLOWAT","SO_SNDTIMEO","SO_TIMESTAMP","SO_TIMESTAMPING","SO_TIMESTAMPNS","SO_TYPE","S_BLKSIZE","S_IEXEC","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","S_IFMT","S_IFREG","S_IFSOCK","S_IREAD","S_IRGRP","S_IROTH","S_IRUSR","S_IRWXG","S_IRWXO","S_IRWXU","S_ISGID","S_ISUID","S_ISVTX","S_IWGRP","S_IWOTH","S_IWRITE","S_IWUSR","S_IXGRP","S_IXOTH","S_IXUSR","TCP_CONGESTION","TCP_CORK","TCP_DEFER_ACCEPT","TCP_INFO","TCP_KEEPCNT","TCP_KEEPIDLE","TCP_KEEPINTVL","TCP_LINGER2","TCP_MAXSEG","TCP_MAXWIN","TCP_MAX_WINSHIFT","TCP_MD5SIG","TCP_MD5SIG_MAXKEYLEN","TCP_MSS","TCP_NODELAY","TCP_QUICKACK","TCP_SYNCNT","TCP_WINDOW_CLAMP","WALL","WCLONE","WCONTINUED","WEXITED","WNOHANG","WNOTHREAD","WNOWAIT","WORDSIZE","WSTOPPED","WUNTRACED"],type:""},{html:"\n<h2><a class=\"black\" href=\"?c:\">const</a> <a href=\"?c:PathMax!\"><em>group</em></a></h2>\n<pre>const (\n\tPathMax                 = 0x1000\n\tSizeofSockaddrInet4     = 0x10\n\tSizeofSockaddrInet6     = 0x1c\n\tSizeofSockaddrAny       = 0x70\n\tSizeofSockaddrUnix      = 0x6e\n\tSizeofSockaddrLinklayer = 0x14\n\tSizeofLinger            = 0x8\n\tSizeofMsghdr            = 0x1c\n\tSizeofCmsghdr           = 0xc\n\tSizeofUcred             = 0xc\n\tSizeofInotifyEvent      = 0x10\n)</pre>\n<p>\nConstants\n</p>\n\n",names:["PathMax","SizeofSockaddrInet4","SizeofSockaddrInet6","SizeofSockaddrAny","SizeofSockaddrUnix","SizeofSockaddrLinklayer","SizeofLinger","SizeofMsghdr","SizeofCmsghdr","SizeofUcred","SizeofInotifyEvent"],type:""}],vars:[{html:"\n<h2><a class=\"black\" href=\"?v:\">var</a> <a href=\"?v:Stdin!\"><em>group</em></a></h2>\n<pre>var (\n\tStdin  = 0\n\tStdout = 1\n\tStderr = 2\n)</pre>\n\n",names:["Stdin","Stdout","Stderr"],type:""},{html:"\n<h2><a class=\"black\" href=\"?v:\">var</a> <a href=\"?v:ForkLock!\">ForkLock</a></h2>\n<pre>var ForkLock sync.RWMutex</pre>\n\n",names:["ForkLock"],type:""},{html:"\n<h2><a class=\"black\" href=\"?v:\">var</a> <a href=\"?v:SocketDisableIPv6!\">SocketDisableIPv6</a></h2>\n<pre>var SocketDisableIPv6 bool</pre>\n<p>\nFor testing: clients can set this flag to force\ncreation of IPv6 sockets to return EAFNOSUPPORT.\n</p>\n\n",names:["SocketDisableIPv6"],type:""}]}